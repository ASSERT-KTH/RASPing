[{"job_id": "6b2ddbfb77554d98a5855d4ac040c373", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitOr", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 12, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for |: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.78s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.NEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key | i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "afa4ddc1526c4296ac4fa6b4c3209e11", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitXor", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Sub", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.44s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x ^ min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "c68888b26d3d480d9192cdd402765e23", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f1b0a34fbb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f1b0a34fbb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.14s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,12 +17,12 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "9ebb2a07a4b14a2dbe2aced6113e79d7", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitXor", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [21, 4], "end_pos": [21, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fb8f6b63be0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fb8f6b63be0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.10s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -18,7 +18,7 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals).named(\"sort\") * -1\n \n \n def make_sort(\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i ^ max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "31dfa5ca4e5b491c956a409ea5975f54", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitOr", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 3, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for |: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.49s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x | min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "a37147e576204f0f8e321dcde4d7a8e6", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7feb26733ac0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7feb26733ac0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.71s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,9 +15,9 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "2570e8049833443180b26b251bcbdfe4", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_FloorDiv", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [52, 58], "end_pos": [52, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, //, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.39s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, //, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices + 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "86bd25d8296146a184fdda32d18f9a63", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.1\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f5899733af0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f5899733af0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.88s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,9 +15,9 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.GT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "6a6b07fa62734fc28662f2b6beef6fcf", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_LShift", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [52, 58], "end_pos": [52, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for <<: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.68s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key << i / max_seq_len, keys, rasp.indices - 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "2ebb617c0cc244a5874ab3bbdb6cfdcb", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Pow", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 17], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, **, max_seq_len: int, min_key: float\nE                                         ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.39s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -16,13 +16,13 @@\n       keys: Keys for sorting.\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n-    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n+    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\") * -1\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, **, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "22737b4bb6414d5ebce11eb2b22da3a9", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [18, 14], "end_pos": [18, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.43s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys * -1, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key / i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "30e259082bf24924be4fa25d115aa440", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_LShift", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [20, 38], "end_pos": [20, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f6b2e01fb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f6b2e01fb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.32s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices + 1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i << max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "4dca39b73f034c8d8ba4252695ddf45d", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [52, 58], "end_pos": [52, 70], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [18, 14], "end_pos": [18, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fe782e0fb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fe782e0fb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 30.75s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys * -1, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices + 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "c5818db12ecf469589e257b73637187c", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitXor", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 3, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fe7c95eba60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fe7c95eba60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 18.97s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i ^ max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "e36887e86b914cd3afcbd0f31b07436d", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Add", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fea17557ac0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fea17557ac0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.50s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i + max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "7a0b288e355e42dc805dd0e1b5001fbb", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 3, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [21, 11], "end_pos": [21, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f63c4a07a30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f63c4a07a30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.50s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,10 +15,10 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals).named(\"sort\") * -1\n \n \n def make_sort("}]
[{"job_id": "fae0694054854800b630ba3f0ae3f72f", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_RShift", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_FloorDiv", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.18\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fa619823a60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fa619823a60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.01s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x >> min_key * i // max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "7ae7ab8f46f94a3395ebee305660a6bd", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_Sub", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitOr", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for |: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.56s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x - min_key | i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "e83ea17a25884fec8fc166d27247b9f2", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [20, 38], "end_pos": [20, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fa32c11fb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fa32c11fb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.57s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,9 +15,9 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices - 1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "a6d4d857d3244ced98f008acb4234ff3", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitOr", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 2, "start_pos": [51, 11], "end_pos": [53, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for |: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.57s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n-    )\n+        lambda x, i: x + min_key | i / max_seq_len, keys, rasp.indices\n+    ) * -1\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "9998d43a70cf44ea813ef2df279ef9c8", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Pow", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i ** max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "f7b1745da6e34a1b93fc67eeddba5eb8", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_FloorDiv", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, //, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, //, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "2ed27520550847f287325d65d82be435", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_FloorDiv", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fcd3f33ba90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fcd3f33ba90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 18.80s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.EQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i // max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "a1af35f7f9244930959b79901f7ee1c1", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.02\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f4719d0fa60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f4719d0fa60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 24.52s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,9 +15,9 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.GEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "311a2f9eed054e8fbee4c75bc0cf5d15", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_FloorDiv", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 2, "start_pos": [51, 11], "end_pos": [53, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7ff1581e3a30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7ff1581e3a30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.87s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n-    )\n+        lambda x, i: x // min_key * i / max_seq_len, keys, rasp.indices\n+    ) * -1\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "0e5abc5ca11c44db9901076f0031ad78", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_Pow", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitOr", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for |: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.21s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x ** min_key | i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "7beab3e4a7b04280bace85e0839e9cf2", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_RShift", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitAnd", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f393790fac0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f393790fac0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 18.75s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x >> min_key * i & max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "7258691f4fce48d6ab540b4bc4296a21", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_Sub", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Pow", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.02\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fbaf6bfba90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fbaf6bfba90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.58s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x - min_key * i ** max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "0aed7b94276041a9a0b02a22701d9f20", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitXor", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Mod", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fcd79cf7880>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fcd79cf7880>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.88s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x ^ min_key * i % max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "c9bbc2f98a084138bc25eeb166ec0b20", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_FloorDiv", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [21, 11], "end_pos": [21, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fa249a2ba30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fa249a2ba30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.33s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -18,7 +18,7 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals).named(\"sort\") * -1\n \n \n def make_sort(\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i // max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "44877b3b21a3452dba247a0db8a20baa", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_FloorDiv", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [20, 38], "end_pos": [20, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f7372b4ba00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f7372b4ba00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.19s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices + 1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x // min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "f0a4d518e6404286b398e4e67e397fc8", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_LShift", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_FloorDiv", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.18\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f3b01ff3bb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f3b01ff3bb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.36s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x << min_key * i // max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "242fd2c92393404c8015458838db301b", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 2, "start_pos": [51, 11], "end_pos": [53, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f2eb362fa60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f2eb362fa60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.96s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -50,6 +50,6 @@\n     \"\"\"\n     keys = rasp.SequenceMap(\n         lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n-    )\n+    ) * -1\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "8a3fc39ae3c14dd790f2d8f3a137a85b", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitAnd", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitOr", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for |: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.53s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x & min_key | i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "344afd24541948608a123dddadf47294", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Mod", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, %, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,14 +15,14 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.EQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, %, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "b89873deb42d4ef1850b501026ee0dcc", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 17], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f14eb13fc10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f14eb13fc10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 26.33s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -16,8 +16,8 @@\n       keys: Keys for sorting.\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n-    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\") * -1\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "2d862ae04a6b4e7290435e8c93a042c6", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitOr", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for |: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.44s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.NEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x | min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "b040f70105fb4052ad95b258b3ff6e44", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitOr", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for |: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.44s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.GEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x | min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "4b1df07fea8343d69783a38b8e5aa723", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitXor", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Mod", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, %, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.37s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, %, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x ^ min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "dc01a0eef58c4d6f958b7f8377fafa27", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Sub", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Mul", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.02\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7efe9e723a90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7efe9e723a90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 25.34s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key - i * max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "93bd7a8d34e34a5587c6b32c580f8a7b", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_Pow", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitAnd", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7faf8cdf3b20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7faf8cdf3b20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 18.38s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x ** min_key * i & max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "58cba8f156824701873382b7654a6004", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Mod", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Pow", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, %, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, %, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i ** max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "37e645483deb46a996710a92c6fd06de", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Sub", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f1f7862baf0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f1f7862baf0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 18.36s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.GT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i - max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "a6039c6964094af28f0298601c3f5104", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_LShift", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Add", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.39s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i + max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "eaf58c7be82b41f5b2869bbd43b99101", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [52, 58], "end_pos": [52, 70], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 17], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f3448bebaf0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f3448bebaf0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 27.79s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -16,7 +16,7 @@\n       keys: Keys for sorting.\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n-    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n+    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\") * -1\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices - 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "84aaa90e55954916a579059879f33801", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitAnd", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_RShift", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, &, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.37s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, &, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i >> max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "cae1951054a641d1b1a540ea327344c2", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitOr", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitAnd", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.12\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f7b38e338e0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f7b38e338e0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.58s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key | i & max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "8e8b7037049342efab6237185a0790c7", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_LShift", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [21, 11], "end_pos": [21, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for <<: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.43s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -18,7 +18,7 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals).named(\"sort\") * -1\n \n \n def make_sort(\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key << i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "6abf9c680669480cbb45c7e6e22a9ed8", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_Mod", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f70ce93fbe0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f70ce93fbe0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.49s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.TRUE)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x % min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "dcd13116b3f04560b5ed92fa6a891c03", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.63s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key / i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "684501877f3948e5b2fe0808182ce2be", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_RShift", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fd4e7fe7a90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fd4e7fe7a90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 18.48s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i >> max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "3839579b94cb498ab0ab7e9a514b5fc6", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitOr", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [52, 58], "end_pos": [52, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f670c61f9a0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f670c61f9a0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.74s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i | max_seq_len, keys, rasp.indices + 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "2495476a073649d9ab4ef5a196654235", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitOr", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.39s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x | min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "0d1cbbd61f7c415f80269df0a2497600", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_LShift", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.02\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f0fd9d33b20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f0fd9d33b20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.27s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key + i << max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "bb9f96295b534831962f1e7cce775bfb", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_FloorDiv", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, //, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,14 +15,14 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.EQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, //, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "762cdc22e3dd4b3a8075dd096a948b38", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_FloorDiv", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [21, 4], "end_pos": [21, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssinteger division or modulo by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.53s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -18,7 +18,7 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals).named(\"sort\") * -1\n \n \n def make_sort(\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key // i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "44ada68a1798447086406e523066bda8", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_FloorDiv", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Pow", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssinteger division or modulo by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.50s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key // i ** max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "6c1edf1d59f2479c89899841f75a57b3", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_RShift", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Pow", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for >>: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.38s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x >> min_key ** i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "53fe90481793435ba792af1b56b3fd46", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_Sub", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 17], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f92d11eba60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f92d11eba60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 24.91s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -16,7 +16,7 @@\n       keys: Keys for sorting.\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n-    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n+    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\") * -1\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x - min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "310f0e0c942d40eaa1a54dbfef752126", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitAnd", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for &: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.61s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x & min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "d4a8321e7612474781eed027f33e4c5c", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Mod", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [18, 14], "end_pos": [18, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssinteger division or modulo by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.49s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys * -1, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key % i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "728fb6c6e94942b4be040a6706c1ae72", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitOr", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for |: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.04s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key | i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "5f33ba6b3aaa4d15a569ccae4c6af05c", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [54, 4], "end_pos": [54, 39], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fcd50b47af0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fcd50b47af0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 24.81s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -51,5 +51,5 @@\n     keys = rasp.SequenceMap(\n         lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n     )\n-    return make_sort_unique(vals, keys)\n+    return make_sort_unique(vals, keys) * -1\n "}]
[{"job_id": "646e94fd9428475c868ff8bc7b7a4701", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fb251917c10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fb251917c10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.68s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,9 +15,9 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "85e5a2a8abf647e889831a91a2f11b60", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [18, 14], "end_pos": [18, 74], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [20, 14], "end_pos": [20, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7efe0b433c10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7efe0b433c10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 26.29s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,9 +15,9 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys * -1, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices * -1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "bed5d16cf1f245e3a5b1989e44678c6f", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_FloorDiv", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Pow", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.02\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fbdb4f2bc40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fbdb4f2bc40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.25s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x // min_key * i ** max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "6199a4219d8b47beaac08963aae0ef01", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_RShift", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, >>, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,14 +15,14 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, >>, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "6d585f7cda9a4c8bb181a0c9e3aad312", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 3, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [21, 11], "end_pos": [21, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f05315e3a90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f05315e3a90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 24.63s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,10 +15,10 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals * -1).named(\"sort\")\n \n \n def make_sort("}]
[{"job_id": "969f5655747b466e9326f842147e687a", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_LShift", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for <<: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.41s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x << min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "090fc05602034262a7b1e4d3e206efb3", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitOr", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Mod", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.04\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fdbd493fac0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fdbd493fac0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.36s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x | min_key * i % max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "7b6f309a9bf24a1fbaa215ff2b18370b", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Pow", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [18, 14], "end_pos": [18, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, **, max_seq_len: int, min_key: float\nE                                         ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,14 +15,14 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys * -1, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, **, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "9aaa576958cc4424a9c68abbadb8bb25", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [20, 38], "end_pos": [20, 50], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [18, 14], "end_pos": [18, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f52d7b27910>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f52d7b27910>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 26.37s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,9 +15,9 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys * -1, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices + 1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "b39845185be34f4da1d01c033718e133", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [52, 58], "end_pos": [52, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 27.12s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices - 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "7427609f394c4883b675d47387795b03", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_Mod", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitXor", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fc367ffbb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fc367ffbb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 17.91s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x % min_key * i ^ max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "af0053d5758e4c42a5c053f10053145a", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 17], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.32s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -16,7 +16,7 @@\n       keys: Keys for sorting.\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n-    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n+    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\") * -1\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key / i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "dbaa910dbf194341b3d41d696b4120ed", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_FloorDiv", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [20, 38], "end_pos": [20, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f751c957be0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f751c957be0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.49s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices + 1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i // max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "83ccb50da41643b4a5b36173e3c7c2f1", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitOr", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for |: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.52s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.TRUE).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x | min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "7123274b3ccb41c195d7128359951224", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_RShift", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 3, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for >>: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.39s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x >> min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "e9140e24cac34ee6b206559c247c74c7", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Sub", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [18, 14], "end_pos": [18, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f4891a07c10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f4891a07c10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 27.84s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys * -1, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key - i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "0e8cf07a549d4cb1895105571fd46dd2", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitAnd", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitOr", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, |, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, |, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x & min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "af34d4b903e4414fae88493bfd5807fe", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_LShift", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_RShift", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.49s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i >> max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "422092be6a0b45fbae91f53f6af066d0", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [18, 14], "end_pos": [18, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f8f9ffffac0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f8f9ffffac0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 25.11s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,14 +15,14 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys * -1, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "9c883f1e08f747639c0eaa6ddf31355c", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_RShift", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for >>: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.46s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x >> min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "3c32b261c8db4579a943538cdc84a89a", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitXor", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Sub", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, ^, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.52s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, ^, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i - max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "68b083918b9948c0a4e1988222c4cccb", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_FloorDiv", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 17], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fb541623a60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fb541623a60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.93s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -16,7 +16,7 @@\n       keys: Keys for sorting.\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n-    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n+    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\") * -1\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x // min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "22f04607ac9e49aaacf1f3fee7cf6ec8", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_LShift", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [20, 14], "end_pos": [20, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f2e13a27a60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f2e13a27a60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.86s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos * -1, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i << max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "e26ef0713447435f83b7a0508e442f3f", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Sub", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [20, 14], "end_pos": [20, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,12 +17,12 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos * -1, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "5afb4e4c8ac6429c8d82ffb8671b7240", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Sub", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitAnd", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f5d3c31ba60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f5d3c31ba60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.06s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key - i & max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "8a6edea7e2bb4af5b97fbe3de2ba446a", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_LShift", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for <<: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.51s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.GEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x << min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "a18d1a9e7ec1469f99ebdfc407c22201", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_RShift", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [21, 4], "end_pos": [21, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for >>: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.43s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -18,7 +18,7 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals).named(\"sort\") * -1\n \n \n def make_sort(\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key >> i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "e485d230bb974115a17fcbae13e35431", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_RShift", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f0a2c84ba90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f0a2c84ba90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.26s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key + i >> max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "c74c0cacb41240399b7c359d6d32c9ff", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Pow", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 3, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, **, max_seq_len: int, min_key: float\nE                                         ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.39s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,14 +15,14 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, **, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "e49265b89f3c48a7be4b46e63e1ddb3d", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,14 +15,14 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.TRUE).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "cf6d2e6f51a140eab980d3fcb03d0419", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Sub", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_FloorDiv", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.18\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f32e822ba60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f32e822ba60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.19s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key - i // max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "a98852931ae54ddbbf3dec13106ec95d", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_RShift", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "bb65eaa02e0241db82b42f1cb1d352cc", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_FloorDiv", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitOr", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssinteger division or modulo by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.03s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key // i | max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "a67263dd0aea407ea41456155e3b0048", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitAnd", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [20, 14], "end_pos": [20, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, &, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.39s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,12 +17,12 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices * -1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, &, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "f9779cffa1c643d2b760ea36b6759689", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_FloorDiv", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 3, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, //, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,14 +15,14 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, //, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "3488794d32f1428d9aec924abd74fdac", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_Mod", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f3b0901fa60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f3b0901fa60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 18.88s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x % min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "3118c3aed9b94f0c9fd4f8fd32656f98", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Pow", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [20, 14], "end_pos": [20, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fb70073fb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fb70073fb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.56s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices * -1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key ** i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "9812ca9ebdd7435fa36e97c9a02f6d9b", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitAnd", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f1bd1c1fa30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f1bd1c1fa30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.65s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.TRUE)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i & max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "36a1e4485cb84366949afc8323fe605f", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitXor", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [54, 4], "end_pos": [54, 39], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for ^: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.49s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x ^ min_key * i / max_seq_len, keys, rasp.indices\n     )\n-    return make_sort_unique(vals, keys)\n+    return make_sort_unique(vals, keys) * -1\n "}]
[{"job_id": "229b8ad661594702ac13710948a0bd21", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_LShift", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [20, 14], "end_pos": [20, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f60df513c40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f60df513c40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.75s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices * -1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i << max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "8b6e805e1aa24db2895076c26a0eb68e", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitXor", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Mul", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, ^, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, ^, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i * max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "9c9ecd25b4de49dc9c4096c3c41e8db6", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitAnd", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitXor", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, &, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.39s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, &, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i ^ max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "3b61b32ea20e4a10898db5809c83961c", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitAnd", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, &, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.39s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,14 +15,14 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, &, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "8015a22000b34e20be7a369bef665423", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitOr", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for |: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.71s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.EQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key | i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "d8cf2a46d0fb4d579658ea8abd120071", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7ff1c5433a60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7ff1c5433a60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 24.00s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,9 +15,9 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.GEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "58461df592144b29b69c47987cd09c36", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitAnd", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for &: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.54s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.GT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key & i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "3bc717ce737a48c784e879783b0e0e3d", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [21, 11], "end_pos": [21, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f8ef49d7a00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f8ef49d7a00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.57s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -18,11 +18,11 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals * -1).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "f38b2b40ecc24e9591a1acbdb92975f5", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Add", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [20, 38], "end_pos": [20, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7efcdca03bb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7efcdca03bb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.00s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices - 1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i + max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "5f555629bc5b4a33b75783d40d232844", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_RShift", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Pow", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f8a7e14ba60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f8a7e14ba60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.75s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x >> min_key * i ** max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "f4a1ee3914564b78b45fb71a742980c6", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 12, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [52, 58], "end_pos": [52, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f0d3d31bc10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f0d3d31bc10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 27.20s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.NEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices + 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "84edc677dd564cf2a7e663743db56e4f", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitXor", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [20, 38], "end_pos": [20, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f55155f3be0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f55155f3be0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.15s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices - 1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i ^ max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "52720b5ef6854d64bf98a432ac473b76", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitXor", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f95d5f37b20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f95d5f37b20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.64s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i ^ max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "1f52fdb654cf437eab62bdba00df4461", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitXor", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [21, 11], "end_pos": [21, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for ^: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.49s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -18,7 +18,7 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals * -1).named(\"sort\")\n \n \n def make_sort(\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key ^ i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "6a893add8c0a4a3a9c627020dccf5994", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_RShift", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, >>, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,12 +17,12 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, >>, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "fbd853ac675443bfad3cd9569d97c8b2", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_RShift", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [20, 38], "end_pos": [20, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for >>: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.48s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices + 1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x >> min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "2ff2ff1c17714b5dab5684e71d4335c7", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f2117bffbb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f2117bffbb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 24.24s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,9 +15,9 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.EQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "fac1b8ba8459459bb0693cecda2372f1", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_FloorDiv", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "676cc770c27a4c8a8e9f45e0f4c44080", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitAnd", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Mod", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f29a4947b20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f29a4947b20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.08s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x & min_key * i % max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "d090c2e9fae94e838d74b1191ea1f985", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_Pow", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7ff148f279a0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7ff148f279a0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.52s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x ** min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "6778e8de24d742a7a20b4883262717fc", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,14 +15,14 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "8d504332b0ba4f0095b452f8f644b57d", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [18, 14], "end_pos": [18, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7efc2813ba00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7efc2813ba00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 26.61s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys * -1, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")"}]
[{"job_id": "01a3f1b2a6d2477ab8113c9f07a9278d", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f1fbca2b820>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f1fbca2b820>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.04s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,9 +15,9 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.TRUE).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.TRUE)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "15a5fc163b7e4b818ee73c1a266c8614", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitAnd", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [52, 58], "end_pos": [52, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, &, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.32s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, &, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices + 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "ece76048c94245c6b3f24167eabbe219", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Sub", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f56bea23910>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f56bea23910>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.29s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.GT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key - i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "f3fd9ee9be464866bac16803fc1cb0db", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 3, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fa06f937b20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fa06f937b20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.70s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,14 +15,14 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "a3a34cfb3eb1443e991a59e9f4c9920d", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitXor", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [21, 11], "end_pos": [21, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for ^: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.33s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -18,7 +18,7 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals * -1).named(\"sort\")\n \n \n def make_sort(\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x ^ min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "40830be86d11472e85c4f5dba2864822", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_LShift", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,12 +17,12 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.GT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "ce881e6031a1447fb93d537652fdecd1", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_RShift", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_LShift", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.02\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f133e3fba90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f133e3fba90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.83s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key >> i << max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "d7a3f2c2031344bebd3ea8bc29892c06", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [18, 14], "end_pos": [18, 74], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 17], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f1f20c2bac0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f1f20c2bac0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 32.25s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,8 +15,8 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n-    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n+    smaller = rasp.Select(keys * -1, keys, rasp.Comparison.LT).named(\"smaller\")\n+    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\") * -1\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n "}]
[{"job_id": "384d003f936748c59835b9eec5b514d4", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_LShift", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for <<: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.01s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x << min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "ba37bdc5cdb54459a6f8f31d1daf92b7", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitOr", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitXor", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for ^: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.44s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x | min_key ^ i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "073fd7ca49024bdebe6d437879140a80", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 2, "start_pos": [51, 11], "end_pos": [53, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.39s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -50,6 +50,6 @@\n     \"\"\"\n     keys = rasp.SequenceMap(\n         lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n-    )\n+    ) * -1\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "f5069b2fec8d42d1b96086b1b05e1b82", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [54, 4], "end_pos": [54, 39], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fe76cb0bbb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fe76cb0bbb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 25.18s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -51,5 +51,5 @@\n     keys = rasp.SequenceMap(\n         lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n     )\n-    return make_sort_unique(vals, keys)\n+    return make_sort_unique(vals, keys) * -1\n "}]
[{"job_id": "c0a6eacbd9b24995827a4b3d1feb5cc5", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_LShift", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitAnd", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fe23171fa60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fe23171fa60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.41s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key << i & max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "189ec31e6b1642c4b08fac8379a5d933", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Sub", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Mul", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.39s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i * max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "2f6f548cee40482381bddab2e3b4a85c", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Add", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f5cbe3ffac0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f5cbe3ffac0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.38s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i + max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "16a3b5c5d2a94b558dfa1e042b7ba5db", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [52, 58], "end_pos": [52, 70], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 2, "start_pos": [51, 11], "end_pos": [53, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f2231c3fb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f2231c3fb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.31s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n-    )\n+        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices + 1\n+    ) * -1\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "900ae6f5db0c436d9cb86a9dbd7f5909", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_RShift", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [18, 14], "end_pos": [18, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, >>, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.39s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,14 +15,14 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys * -1, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, >>, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "f1b5a6821c5348c39f9735a2cef35e4a", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Mod", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, %, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.39s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,14 +15,14 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, %, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "415cc7d2d2cf45689f71b113859883b4", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Sub", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.40s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,12 +17,12 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "d2e17443b45348a08230b5b77f99b897", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_Div", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitXor", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for ^: 'float' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.35s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x / min_key ^ i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "ba3faac529864d6ba978296095379ae9", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Pow", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Add", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.18\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f3907e47bb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f3907e47bb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.08s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key ** i + max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "83e80ed117454006824be42f3a1602ed", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Mod", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_LShift", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "3ceae2cdbcb94db0921c2d5ec489d7a8", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Mod", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [20, 38], "end_pos": [20, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssinteger division or modulo by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.57s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices - 1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key % i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "02d6238d56904de09a52f4a9705a373d", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitXor", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_FloorDiv", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, ^, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.39s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, ^, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i // max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "194fa215597e458086d900ff7444c5bf", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_RShift", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [21, 11], "end_pos": [21, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for >>: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.51s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -18,7 +18,7 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals * -1).named(\"sort\")\n \n \n def make_sort(\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key >> i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "e1bdb630a22c42e7b7dfccca119af090", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Mod", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_RShift", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, %, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, %, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i >> max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "1651bf24c0a245f184af9504eb0041db", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [20, 14], "end_pos": [20, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fefd532bb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fefd532bb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 26.26s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,9 +15,9 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos * -1, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "8403682b97f44d1c8ee50e538af98644", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_LShift", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.40s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,12 +17,12 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "3ab34c02b59641c0b0ffa95ed0984e0e", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_RShift", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, >>, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.24s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,14 +15,14 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, >>, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "eb6aefc7321f4ad980ece3e6d607ac9d", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 17], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f2efd3f3af0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f2efd3f3af0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 24.02s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,8 +15,8 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n-    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n+    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\") * -1\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n "}]
[{"job_id": "4db45601f64d4a9fa2453ffae7c3a9a8", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Pow", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f907f547bb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f907f547bb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.66s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i ** max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "ad4d5b11ce154b37a9419d9fbc493076", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Mod", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Mod", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, %, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.39s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, %, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i % max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "1253baccb6b5429091be3fcff23ac573", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Mod", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_LShift", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.40s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key % i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "ea6b9a763d944565bf1b7a1c5d859839", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitXor", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [52, 58], "end_pos": [52, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for ^: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.38s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key ^ i / max_seq_len, keys, rasp.indices + 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "9bcd29f86e084811a814b0da6103f6ec", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitAnd", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [52, 58], "end_pos": [52, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f064edffbe0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f064edffbe0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.66s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i & max_seq_len, keys, rasp.indices + 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "06fa76170417409e965bd8b3f088d155", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitXor", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [54, 4], "end_pos": [54, 39], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, ^, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, ^, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -51,5 +51,5 @@\n     keys = rasp.SequenceMap(\n         lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n     )\n-    return make_sort_unique(vals, keys)\n+    return make_sort_unique(vals, keys) * -1\n "}]
[{"job_id": "b587c20e6e88483bae8ad67e73a15bb1", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Sub", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_RShift", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.37s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i >> max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "d630592b188b4d00af1db96d496f2d24", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitAnd", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for &: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.34s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.NEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key & i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "ccd0dd54ad49490c977a321219280919", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_LShift", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for <<: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.63s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x << min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "febd4f6adbc045ef9633ea2dde1a0e96", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitOr", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Sub", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x | min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "2eb8227a90f04e6887e841975c42fad7", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [18, 14], "end_pos": [18, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f001e953c40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f001e953c40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.92s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys * -1, keys, rasp.Comparison.NEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")"}]
[{"job_id": "c66005d5422f4d45a35f103665ba5e6f", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Add", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 12, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f9ec632bb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f9ec632bb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.88s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.NEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i + max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "c61f7f07677f48dda195c92c3164d315", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Pow", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Mod", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.18\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f8d6771bb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f8d6771bb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.36s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key ** i % max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "1f8d714bd28e49478a4177609bbe85ca", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_Pow", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Pow", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.18\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f1061a0bc40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f1061a0bc40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.89s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x ** min_key ** i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "f68ff84063bf4f54b3cdf832a66bf750", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [18, 14], "end_pos": [18, 74], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [20, 14], "end_pos": [20, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fac2d23baf0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fac2d23baf0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 30.47s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,9 +15,9 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys * -1, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos * -1, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "3998ccbc13974452a37f490d7bb45950", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_RShift", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [18, 14], "end_pos": [18, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f02c7a0fb20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f02c7a0fb20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.00s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys * -1, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i >> max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "71a1b04eb4384d0d9163a4d9fcc70697", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_Pow", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fc89a61fb20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fc89a61fb20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.11s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.EQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x ** min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "67a3da37f30240b2bb047037e0387614", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [20, 38], "end_pos": [20, 50], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [52, 58], "end_pos": [52, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fcb6b11bc10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fcb6b11bc10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 26.18s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices + 1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices + 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "a2d54cc10c6b4280a281eced273e3df4", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_RShift", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [21, 11], "end_pos": [21, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for >>: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.37s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -18,7 +18,7 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals).named(\"sort\") * -1\n \n \n def make_sort(\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x >> min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "12e115a4c51544268c10f3ffc7555ff9", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Pow", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [52, 58], "end_pos": [52, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, **, max_seq_len: int, min_key: float\nE                                         ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, **, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices - 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "6dd7d366a0a245109fca21ece3262ef5", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_Div", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [54, 4], "end_pos": [54, 39], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fd83c93fb20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fd83c93fb20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.77s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x / min_key * i / max_seq_len, keys, rasp.indices\n     )\n-    return make_sort_unique(vals, keys)\n+    return make_sort_unique(vals, keys) * -1\n "}]
[{"job_id": "4e48050d52a04bb18776f4efd4a82009", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_Div", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [18, 14], "end_pos": [18, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f015df63ac0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f015df63ac0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.43s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys * -1, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x / min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "5114644277454adfa433b3b7db6f5095", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitOr", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [21, 11], "end_pos": [21, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fec0033faf0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fec0033faf0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.80s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -18,7 +18,7 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals).named(\"sort\") * -1\n \n \n def make_sort(\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i | max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "b49402f43111410ba03ea3deb443ec45", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Pow", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f3277a2ba90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f3277a2ba90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.30s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.GT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key ** i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "62bb70e6583d41fc9a9940a5829805f3", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_LShift", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_LShift", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "94018308afa8458c988af12a6bf82a47", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_Div", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [21, 11], "end_pos": [21, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f0a58823b80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f0a58823b80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.07s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -18,7 +18,7 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals * -1).named(\"sort\")\n \n \n def make_sort(\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x / min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "e74314b4aa234dd7abf95b18a9d607bb", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_FloorDiv", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Mul", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssinteger division or modulo by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.33s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key // i * max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "5fefa0df8f91487a90d8dd830a20b79c", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitXor", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for ^: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.44s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.GT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x ^ min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "adecd55b9c994600b2e29619ffb0613d", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_Div", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 2, "start_pos": [51, 11], "end_pos": [53, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f2ad4153ac0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f2ad4153ac0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.61s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n-    )\n+        lambda x, i: x / min_key * i / max_seq_len, keys, rasp.indices\n+    ) * -1\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "8df329d59612488aacb61619c851b470", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Pow", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, **, max_seq_len: int, min_key: float\nE                                         ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,12 +17,12 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, **, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "229fd565a79941b6af21922914c1ca99", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_Mod", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitAnd", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, &, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.34s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, &, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x % min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "9f299f8e7e724d99bbe2fd81fefda0df", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_RShift", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [21, 11], "end_pos": [21, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for >>: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.44s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -18,7 +18,7 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals).named(\"sort\") * -1\n \n \n def make_sort(\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key >> i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "20484018558a43a584351bbca26e5724", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_FloorDiv", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Sub", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 23.32s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x // min_key - i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "434b935d22a546da8f2d21450f8a4c03", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_FloorDiv", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Mod", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssinteger division or modulo by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.39s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key // i % max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "6af78c70ce05475285fde1da7ad63e3a", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_FloorDiv", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 2.97s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x // min_key / i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "50bfe322904f46f9827701feeea7824c", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_FloorDiv", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitOr", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssunsupported operand type(s) for |: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.76s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x // min_key | i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "a37bf9d1bb844ed59a098299d3585692", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_Mod", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitOr", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, |, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, |, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x % min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "cf8199ff84f24e5d9bc55f7464178554", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Pow", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f80fc62bbb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f80fc62bbb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.98s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i ** max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "d2412b076eaf465a955b4be49ce9ae24", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Pow", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [52, 58], "end_pos": [52, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.02\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7fd87a42ba90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7fd87a42ba90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 26.03s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i ** max_seq_len, keys, rasp.indices + 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "8fe8c00da484425b89e078a0e0e6bf5f", "mutations": [{"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [18, 38], "end_pos": [18, 56], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [52, 58], "end_pos": [52, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f0967827bb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f0967827bb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 26.28s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -15,7 +15,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.TRUE).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices + 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "7be17227bc394ceea9b4545624044717", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_FloorDiv", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Pow", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.18\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f6488f47ac0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f6488f47ac0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.21s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x // min_key ** i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "3010ec3ffb8345d99ce824f2a4e85e06", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_RShift", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitOr", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f082a61f820>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f082a61f820>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.29s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key >> i | max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "9ab57d8990ab4edbac6bf8ca0a100302", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitXor", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i ^ max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "f7deb0c53e414cfb914d23b9121f9e09", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitAnd", "occurrence": 1, "start_pos": [52, 33], "end_pos": [52, 34], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Sub", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f4b62c1faf0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f4b62c1faf0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.00s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key & i - max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "2cb980f7b1824f8b9155db8d272b9fed", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitAnd", "occurrence": 0, "start_pos": [52, 23], "end_pos": [52, 24], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Mul_FloorDiv", "occurrence": 0, "start_pos": [25, 36], "end_pos": [25, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n___________ ERROR collecting experiments/mutation/tests/test_sort.py ___________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_sort.py:13: in <module>\n    from experiments.mutation.source.sort import make_sort\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/sort.py\", line 25\nE       vals: rasp.SOp, keys: rasp.SOp, //, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_sort.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.38s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -22,7 +22,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, //, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x & min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "baadc623e88f44d4aaa1a16a5ab1a093", "mutations": [{"module_path": "source/sort.py", "operator_name": "core/ReplaceBinaryOperator_Div_Mod", "occurrence": 0, "start_pos": [52, 37], "end_pos": [52, 38], "operator_args": {}}, {"module_path": "source/sort.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [20, 52], "end_pos": [20, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_sort.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n_____________________________ TestSort.test_model ______________________________\n\nself = <tests.test_sort.TestSort object at 0x7f1ddd92bbb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_sort.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_sort.TestSort object at 0x7f1ddd92bbb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_sort.py::TestSort::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 18.74s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/sort.py\n+++ bsource/sort.py\n@@ -17,7 +17,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -49,7 +49,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i % max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]

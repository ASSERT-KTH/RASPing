[{"job_id": "fdb3744f27a9443c8727e4839bcbd403", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f7dd6be3c70>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f7dd6be3c70>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.51s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length - rasp.indices + 1).named(\"opp_idx\")\n+    opp_idx = (opp_idx | 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx * -1, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "c34f62de33dd4abf9314daec55eabb2d", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f4c73afbc40>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f4c73afbc40>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ^: 'Map' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.29s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -16,7 +16,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,8 +36,8 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx >> 0).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "ea4e89b098154f5caa228b042e3832e8", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f1dde827ca0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f1dde827ca0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length >> rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for >>: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.16s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.EQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length >> rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices + 1, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "a95af84ad51f4daba40d75835da73f66", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 3, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f77dc533a60>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f77dc533a60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ^: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.28s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.GT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices - 1, opp_idx, rasp.Comparison.TRUE).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "0cc6005558004dc286740d35780ca998", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f6cc3623c40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f6cc3623c40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.01s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.GEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx - 0).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx * -1, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "d207dc97a72641689e42d7566cd57f67", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f4511217dc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f4511217dc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.85s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.LT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx + 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices * -1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "6b321240781c4f868506edeb4b314752", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [44, 4], "end_pos": [44, 65], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f420ae2fd30>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f420ae2fd30>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ** rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.09s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length ** rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices - 1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "308b4b7069f447ad87dd9cce09746da4", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [19, 4], "end_pos": [19, 64], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "8926458068a04707a3dc55ca77e93e7b", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f2aed40bc70>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f2aed40bc70>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ^: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.67s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx | 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "c69f791b2d5b4b71b3671f3734485577", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f3015757e80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f3015757e80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.31s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.LT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -38,8 +38,8 @@\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LEQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "1f5c0267cda1428bb330aaf235e77def", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "ca9e170155c043e3bd4ef8b7127a0fa9", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f176612bb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f176612bb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.17s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.GEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length & rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 2).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "ad3b120dfdcf4b65b085a4260feb2354", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fc5bb40fdf0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fc5bb40fdf0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ^: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.09s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices * -1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "75f79da7fb5c413dae659792a8bda7bd", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f59d31cfca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f59d31cfca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.28s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length - rasp.indices - 1).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 2).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices + 1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "e261a18a5422414db7000e9ab55dd716", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f2ea0deff10>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f2ea0deff10>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length >> rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for >>: 'Map' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.43s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,9 +14,9 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length >> rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices - 1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "175d1d3d8e2842e0a112d014cb4e8779", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fdbbe923be0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fdbbe923be0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 25.56s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.FALSE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length * rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx + 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "df97aacee32f449bb1955d1a9c580224", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f45f4ffbd00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f45f4ffbd00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.20s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.FALSE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx - 0).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "ea4d4360f14e48deb8dcd1c30c44315e", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 12, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f9b8d3f3b80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f9b8d3f3b80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.99s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.EQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx * 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices - 1, opp_idx, rasp.Comparison.NEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "9745a324df9448dab11b5914d471be06", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f4598f4b970>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f4598f4b970>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length % rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for %: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.27s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length % rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices * -1, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "655eb52b31e44d22baf4da74a8b6145a", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [19, 4], "end_pos": [19, 64], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f9e70bf7df0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f9e70bf7df0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.53s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -16,7 +16,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length & rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx | 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx * -1, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "bbc15be0f8e04b64a1c40d6da0dd369e", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fb611227df0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fb611227df0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.51s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.GEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx | 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.GEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "e27b686a7fcb48fea234455f9cd64f80", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fe0b76ffbb0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fe0b76ffbb0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length >> rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for >>: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.24s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,8 +36,8 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length >> rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx + 0).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "5e35ea1a22f44e5094d5404c780cdc53", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 12, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [19, 4], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f494355bc40>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f494355bc40>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length >> rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for >>: 'Map' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.16s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,9 +14,9 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LT\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length >> rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.NEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "a84e2b93ffe946fcb069dbbed202fb45", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 12, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fa9ff133af0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fa9ff133af0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.97s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx * 0).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices - 1, opp_idx, rasp.Comparison.NEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "e99be8d4ed02478a8084ad210b42d839", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_FloorDiv", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fbbf2f2fca0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fbbf2f2fca0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length // rasp.indices + 1).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for //: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.57s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length // rasp.indices + 1).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 2).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "0f2cc52ff21f469b8cd50c7af464edbc", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "71199aa296c540eabd9d7d1c971b545d", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fe9395d7c40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fe9395d7c40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.23s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,9 +37,9 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx - 2).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.GEQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "c7e6820ee26d464ca8361df7f8e21070", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [19, 4], "end_pos": [19, 64], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f8313b3bd90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f8313b3bd90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 24.38s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -16,7 +16,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length + rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.GT).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "0abcf3d25b8947c9b078560b84aae171", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7ff05492bca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7ff05492bca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.93s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length - rasp.indices + 1).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices - 1, opp_idx, rasp.Comparison.GEQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "e07ac9d8da3149bfbfc601a323f7721e", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f4f61137cd0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f4f61137cd0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ** rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.28s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length ** rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx / 0).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "e0ceeda953274d60be398cf89779d221", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.66s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length / rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 2).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.TRUE).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "1055836eef1e427b9d32cf31433a27bb", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fbd5b733d90>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fbd5b733d90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length % rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for %: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.27s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.GEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length % rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices + 1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "b504043050ed4a69aa0aea1767f0db04", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 12, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f01507ebc10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f01507ebc10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.76s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx & 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices * -1, opp_idx, rasp.Comparison.NEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "5205147528c24df8abe7ac0b0aa7282b", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [19, 4], "end_pos": [19, 64], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fd0a97efe50>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fd0a97efe50>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 24.50s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -16,7 +16,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -38,7 +38,7 @@\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices - 1, opp_idx * -1, rasp.Comparison.TRUE).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "ca3acf6b003645fb926fdfda95a7cf9b", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_FloorDiv", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7ffa0f02bca0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7ffa0f02bca0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx // 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for //: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.31s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.EQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx // 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "f49adc52a58b4c02afa9e5e1db6956e9", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f0116543d90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f0116543d90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.83s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length - rasp.indices - 1).named(\"opp_idx\")\n+    opp_idx = (opp_idx * 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "33f778f713ac4a24822f1c0c4e773413", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f253b733c10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f253b733c10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.06s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.EQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,8 +36,8 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length | rasp.indices - 1).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 0).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "8857d9414379400db4c89779a685318f", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f6250537ca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f6250537ca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.29s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length | rasp.indices - 1).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 0).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "db63229e995f488da834cc69207df1b5", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fd96f80fca0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fd96f80fca0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx ** 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.45s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx ** 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices - 1, opp_idx, rasp.Comparison.LEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "16d275da11d14aa29f3f4bac5b1efc10", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f44ded3fa00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f44ded3fa00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.97s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,9 +14,9 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length - rasp.indices - 1).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "ef3487db5731417bb457296d1fdaa42e", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f647f94bcd0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f647f94bcd0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.83s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx | 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "00da5905d25943a69eaf5861c8abc654", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [44, 4], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fc859937c40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fc859937c40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.97s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.GEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,9 +37,9 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx / 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.GT).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "56e006ad43be48509d5437d9426bd028", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.37s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.GEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length / rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 2).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "632eeb649a65456388178d04242c236b", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.65s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length / rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices + 1, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "bb48e6244f1f499cbf8d81bc65fdd991", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f40fcdf3be0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f40fcdf3be0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 26.26s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,8 +36,8 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length * rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx + 2).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "cde81f603f75414c82e22f3e860ab052", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f2984b0fbb0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f2984b0fbb0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length % rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for %: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.22s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length % rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 2).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx * -1, rasp.Comparison.GT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "7e2bbc6cfdbd4a409b5dfdd1b2012f2c", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "ee2d2a5f17b045f0ac615e59876ad5c7", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f2a838ebd60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f2a838ebd60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.07s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx - 0).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx * -1, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "5b8fb3671d544622ba92bb2ee3c72307", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [44, 4], "end_pos": [44, 65], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "1523b28aec4d4ca7ad3e9b9e3153318d", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f2e7062fc70>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f2e7062fc70>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.54s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,9 +37,9 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx & 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices + 1, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "bdd1a148c14449e48893d2dbed27c790", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_FloorDiv", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fbdd383bbe0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fbdd383bbe0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx // 0).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for //: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.29s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx // 0).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices + 1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "ebfe4cf4be3b4f909939378bf31aab83", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "64c5e23fa63b4ccdb7744e040caac299", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "0c5cdbfcf66d41dd9fd81c7811efd2f3", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "631fd59b9f394c0b8a0ec6d67c84b2f7", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.32s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length / rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 2).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices - 1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "ef500cac25be45d5a69183b803d1ee53", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f7f5affbc10>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f7f5affbc10>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ** rasp.indices + 1).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.19s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,8 +36,8 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length ** rasp.indices + 1).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 2).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "3460740a4fff4c28998cfbf891ff6987", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f862762bbe0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f862762bbe0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx << 2).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for <<: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 2.73s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.GEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,9 +37,9 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx << 2).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "4626527edfa9468ab57af3cb725b6301", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "6c9c5400ecaa4c02839fbe8a6437c5ff", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_FloorDiv", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "c04a35c57a6a4203a71fe2068bcc2365", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f0d8e21bc40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f0d8e21bc40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.14s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx * 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices - 1, opp_idx * -1, rasp.Comparison.LEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "87f69d4c70c94302a4a834dbafa6079f", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "5fdb8c400fea4403a9de452139bcd00d", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_FloorDiv", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fb397217d60>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fb397217d60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length // rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for //: 'Map' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 2.74s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,9 +14,9 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LEQ\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length // rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "38ba165462034f70b8f769251c9114a4", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7faf46be7b80>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7faf46be7b80>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length % rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for %: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.27s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length % rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices - 1, opp_idx, rasp.Comparison.LEQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "3fe73624a1cb49a3a110974dc05b6370", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "c5a70d5f8b164e6c89427dbd63821ebe", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fd094327e80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fd094327e80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.82s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,9 +14,9 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,8 +36,8 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length - rasp.indices + 1).named(\"opp_idx\")\n+    opp_idx = (opp_idx / 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "82d5fe8e7c7547b5800fa192d737f15f", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "6c7ffea817a34f679fb9c86e4637b4c5", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f71f97cfd90>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f71f97cfd90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx << 0).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for <<: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.08s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,9 +37,9 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx << 0).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "96ed92ee48174219a954fb8688d6f127", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "dc009fd3aa7c41b78ecadc59b873c97a", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_FloorDiv", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f85f64ebcd0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f85f64ebcd0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices - 1).named(\"opp_idx\")\n>       opp_idx = (opp_idx // 0).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for //: 'Map' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.27s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length - rasp.indices - 1).named(\"opp_idx\")\n+    opp_idx = (opp_idx // 0).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "d7891700d20b47c48ac52d9f4db1d51b", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 3, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f9f1074bd90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f9f1074bd90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.80s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.GT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,7 +37,7 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx | 2).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "250a810b7be14794a63ab29594bc8676", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 3, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fe0089efb80>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fe0089efb80>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ^: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.56s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.GT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices + 1, opp_idx, rasp.Comparison.LEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "b35ade2ce1d94132a54ec762e87d240b", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [19, 4], "end_pos": [19, 64], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [44, 4], "end_pos": [44, 65], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f5604107d90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f5604107d90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.59s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -16,7 +16,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -37,9 +37,9 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx - 2).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1 * -1\n "}]
[{"job_id": "ee6baab4887f4c93844749832247d87c", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7feeb20fbdf0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7feeb20fbdf0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ^: 'Map' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.27s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -16,7 +16,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 2).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.GEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "b631d4b62dfd4912bfb573efe1ca82ec", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_FloorDiv", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [19, 4], "end_pos": [19, 64], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f837d637df0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f837d637df0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ^: 'Map' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.23s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -16,7 +16,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx // 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "d87a39ab026b4998a871460f9dbdd6ec", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "54a67377f15d41cfb666a05a2b18f8b5", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f75a0ddbe50>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f75a0ddbe50>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.27s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.LT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -38,8 +38,8 @@\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.TRUE).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "c7b9208ebc6d4cd6bafe85a96d5c71d1", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f932ee17cd0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f932ee17cd0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.22s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -16,7 +16,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length | rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices + 1, opp_idx, rasp.Comparison.TRUE).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "838515d356bc4cc6b5aec8bf0187cee9", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7faee663fcd0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7faee663fcd0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.08s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.GEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx & 2).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx * -1, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "4bcdb13a6b8e4e8bbb3212f5ffe8f14e", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "e7f17b14493e4b08a7412f4b2036e47e", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fb78403fc10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fb78403fc10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.78s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length | rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx * 2).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx * -1, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "d6470bcb213b4b28a7fd5b2cf501f329", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "8623da202d8e49fe83e56c37b580bdea", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f28d3633c10>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f28d3633c10>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length & rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx % 2).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for %: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.28s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,8 +36,8 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length & rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx % 2).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "d592dabd9eee46f8aa2a7a026f9508a9", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f8206eebb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f8206eebb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.10s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length & rasp.indices + 1).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices - 1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "1303877db17b488c948f40c8e703833d", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_FloorDiv", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f637ff13c10>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f637ff13c10>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx // 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for //: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.29s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.FALSE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx // 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices - 1, opp_idx, rasp.Comparison.TRUE).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "592dd3aaad264b8cb7c137c9aa9b32ea", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 3, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "f5906e375efa4d22a6ea7307fabfba93", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [44, 4], "end_pos": [44, 65], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f43b7313be0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f43b7313be0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.59s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.GEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -38,8 +38,8 @@\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "4fb4431e52df4799b55fcaf37eb8fe4d", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f3bdc0fbb80>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f3bdc0fbb80>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ** rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.32s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.FALSE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length ** rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx / 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.TRUE).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "47bf165714e14f24bdaa76037d385f6d", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f79a7a1fbe0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f79a7a1fbe0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length << rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for <<: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.22s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length << rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx >> 0).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "c8a37f2044db48cc80d261ead9554d8c", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fc5c752bbe0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fc5c752bbe0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length | rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx >> 0).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for >>: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.53s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,8 +36,8 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length | rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx >> 0).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "728d250642304bf79519a00450ec8b74", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [44, 4], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fcf729dfbb0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fcf729dfbb0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length << rasp.indices + 1).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for <<: 'SelectorWidth' and 'Map'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 2.91s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length << rasp.indices + 1).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 0).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "ef13c58c07314f5da1b9c0336e78d5e1", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fb683423b80>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fb683423b80>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length | rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx >> 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for >>: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 2.94s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,9 +14,9 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LEQ\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,8 +36,8 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length | rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx >> 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "424b79f05a2b488899acc98d144fc6b9", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f7e850ebbb0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f7e850ebbb0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx ^ 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for ^: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.17s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -16,7 +16,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx ^ 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices * -1, opp_idx, rasp.Comparison.TRUE).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "f5d4b2c96c7a45a39dc79b58e7631cc9", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fb17e713d30>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fb17e713d30>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx ^ 2).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for ^: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 2.99s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx ^ 2).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices - 1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "d4d70f5ef2ea4071b3250c8708a05b5b", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_FloorDiv", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f7ecf6ebd60>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f7ecf6ebd60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length // rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for //: 'Map' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.18s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,9 +14,9 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LEQ\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,8 +36,8 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length // rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 2).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "c176b1d770d64e3b9d54b70b9d9b53a4", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_FloorDiv", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7ff952b3fb20>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7ff952b3fb20>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length // rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for //: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.44s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.FALSE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length // rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx + 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "6943fbe8e34947078ad6ada904b50c0a", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_FloorDiv", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "c6251623ddd54121a6be84f566827508", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f1500337d30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f1500337d30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.00s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length + rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 2).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices + 1, opp_idx, rasp.Comparison.GT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "1561d3226e0a42fd9ec707eaf08fb362", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 12, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fbb369ebaf0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fbb369ebaf0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ** rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.33s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length ** rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 0).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.NEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "aa4bf2662c9d47a5b94e471c31fb921f", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f4dde237c70>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f4dde237c70>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.28s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length + rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 0).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "2cddf0d219a3486d82933a9e55aeabbd", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_FloorDiv", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f9bc3e23ca0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f9bc3e23ca0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length // rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for //: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.30s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length // rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 2).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices - 1, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "01b3e2913fb04a0eb28da1eb35268cfd", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fbef7d2baf0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fbef7d2baf0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length | rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx % 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for %: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.21s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length | rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx % 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx * -1, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "b996b187a3a34a4e9792d5c2492180f3", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f8f3cd47a00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f8f3cd47a00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.73s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,9 +37,9 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx & 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.TRUE).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "27a6c04f31174db3a20bf4ad3589af91", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [19, 4], "end_pos": [19, 64], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f063cb33e50>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f063cb33e50>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 25.45s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,9 +14,9 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length - rasp.indices - 1).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "40f0804867ba4f0aabf3ee8e521082b9", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "680316dabe5544dab65de452ef69acbb", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f94fa637d00>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f94fa637d00>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ^: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.24s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.GEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,8 +36,8 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx * 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "fb32e475c73d40b089b4f00521a21079", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_FloorDiv", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f199193bcd0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f199193bcd0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length << rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for <<: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.26s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.EQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,8 +36,8 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length << rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx // 2).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "f22bdaf572c04ff5af1102e416f7d891", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f4209d43d60>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f4209d43d60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ** rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.52s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length ** rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx / 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "6627989d664b444fb9ff4a55f07c33e5", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [19, 4], "end_pos": [19, 64], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f6c2f42bdc0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f6c2f42bdc0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ^: 'Map' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.21s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -16,7 +16,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 0).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices * -1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "607e899471d2480bb33007907b536744", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f8be1147a90>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f8be1147a90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ** rasp.indices + 1).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.32s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length ** rasp.indices + 1).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 0).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices * -1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "7ae7559582044f758812fdc0f3f9000f", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f32a9823ca0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f32a9823ca0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length % rasp.indices + 1).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for %: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 2.75s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length % rasp.indices + 1).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 0).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "8a4f3f3125c341e8978fffb9b4c3a84b", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [19, 4], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f3965547ca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f3965547ca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 24.41s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,9 +14,9 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length - rasp.indices + 1).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "e04abb2f2b254c6cbe1ab26b66fc8a71", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 3, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "347ae7ca763a4ebfb3709420d6d632c7", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7ff0d6d07d30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7ff0d6d07d30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.80s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx & 2).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices - 1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "569718d3d2224b23a4a8142ba920266d", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f85f974bdf0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f85f974bdf0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx >> 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for >>: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.38s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx >> 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices - 1, opp_idx, rasp.Comparison.TRUE).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "67451f67877c4eb7aa7737c739864481", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f28949f3d60>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f28949f3d60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length >> rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for >>: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.36s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.FALSE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length >> rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.GEQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "d13ca0d7115d4f2f95688892adcfd707", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f373ba3fd00>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f373ba3fd00>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length % rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for %: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 2.72s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length % rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx / 0).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices - 1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "3c3df1271a3f4f0c89d926bb45291ea2", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "0cfe18aa4e9245b88a4dc05d883d9842", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "fd44deb331014416a021072d414249dd", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [44, 4], "end_pos": [44, 65], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fface8ebd30>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fface8ebd30>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx << 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for <<: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 2.82s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.EQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,9 +37,9 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx << 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\") * -1\n "}]
[{"job_id": "c53998a6f3484d72a0a257f472f74e7f", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 3, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "6d603bb5bac34cdbaaf74cca421d1aa0", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [44, 4], "end_pos": [44, 65], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f8b93327e20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f8b93327e20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.90s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -38,8 +38,8 @@\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LEQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "2c6d765613754a7081ddb097e0c8656a", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 12, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [19, 4], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.11s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -16,7 +16,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx / 0).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.NEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "94efffedc3ad41daa3a09b8e9951ffb4", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f4e6221bf10>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f4e6221bf10>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx >> 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for >>: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.29s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,9 +14,9 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx >> 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices + 1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "3df917271d274fbb96bfd8d68ff7b6eb", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fb25c133c10>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fb25c133c10>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ** rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.22s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.FALSE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length ** rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices * -1, opp_idx, rasp.Comparison.TRUE).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "f648a8ccbbd941fa87812e7232d2716b", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_FloorDiv", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 12, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [44, 4], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "4400e2d16cec43a5bc8e50645c701832", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fd4d5be7c10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fd4d5be7c10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 17.75s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length & rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx * 0).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "e77890fa579942c6aac5b49124ed765f", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.74s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.EQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length / rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 2).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "fb654d1af70d4be1bc124e014ee3c6aa", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "2e63ef0d4dec4816bc00a088352cd57b", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [44, 4], "end_pos": [44, 65], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f0dbf107d30>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f0dbf107d30>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx ** 0).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.29s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,9 +37,9 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx ** 0).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "efdc4ced83414d738da8b0a98ce71389", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f089714bc10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f089714bc10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.96s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,9 +37,9 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx | 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx * -1, rasp.Comparison.GEQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "56c2ac4f99e34e02ba2944bafc8efbd1", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "d5a7d3f3de8e4072b34f05558f766d21", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [19, 4], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "3960a6d8788e4944a54768b883331630", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fe629217d00>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fe629217d00>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx >> 0).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for >>: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 2.95s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,9 +14,9 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.EQ\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -37,7 +37,7 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx >> 0).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "5a8326c00b384efaaa149788501f0fce", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f1ad4127ca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f1ad4127ca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.29s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length | rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices + 1, opp_idx, rasp.Comparison.LEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "12d8af05797444939977b8885d4b7f6e", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "68b74670866246d5b24dbf10f405f8e7", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [44, 4], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f576ec2bc10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f576ec2bc10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.70s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.GEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,9 +37,9 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx - 0).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.GEQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "422e63ac14ce40e6a550a1e7736653ae", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [19, 4], "end_pos": [19, 64], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fb9e6a2bc10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fb9e6a2bc10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.83s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,9 +14,9 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length * rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "9f1026c39dd243d88b3e7c35ac08e726", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f194fa33d90>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f194fa33d90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length >> rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for >>: 'Map' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.28s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -16,7 +16,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length >> rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx / 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.TRUE).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "78642c96fa174850b552fa78ebd77cd7", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f72ddb17ca0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f72ddb17ca0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ** rasp.indices + 1).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.30s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length ** rasp.indices + 1).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices + 1, opp_idx * -1, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "398f1c3ea3a04317b013541d7482cf5b", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [19, 4], "end_pos": [19, 64], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fc959f43d90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fc959f43d90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 26.51s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,9 +14,9 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LEQ\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -37,9 +37,9 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx - 2).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "ad14f72290da400184f4f60002f86e07", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "ea3c3455ba2949588bd0807dcaab6c61", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 12, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f9ababf7ca0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f9ababf7ca0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx >> 2).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for >>: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.19s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.FALSE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx >> 2).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.NEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "1e52f2fe8bec4f36a8564308625fdf19", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [44, 4], "end_pos": [44, 65], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f7f9055fd00>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f7f9055fd00>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx ^ 0).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for ^: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.27s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,9 +37,9 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx ^ 0).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "94c018b611b148849db3874b16525245", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "073bdde72f364362ac504748dbdf0512", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "0d9d79c2e273456b9f7fd3fc5821093e", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.46s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length / rasp.indices + 1).named(\"opp_idx\")\n+    opp_idx = (opp_idx + 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "3d79672816cd40bc912a420a727cbe9f", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f21f5efbbe0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f21f5efbbe0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.56s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.GEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length - rasp.indices + 1).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 0).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.TRUE).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "615bdfe249454618aea6b04912d8ab20", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "6998f198dc8c46fe9cb682184b303220", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [44, 4], "end_pos": [44, 65], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fe657933dc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fe657933dc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.90s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,9 +37,9 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx | 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\") * -1\n "}]
[{"job_id": "e2e1c5c639b84a3ab60c30729d75e645", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [19, 4], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f635e5ebca0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f635e5ebca0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length << rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for <<: 'Map' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 2.93s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -16,7 +16,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length << rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx >> 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices + 1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "b3db9fd555e94eb58b973da99c83e359", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [44, 4], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f14d6c2bbb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f14d6c2bbb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.29s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length | rasp.indices + 1).named(\"opp_idx\")\n+    opp_idx = (opp_idx / 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "4ee9fa15d72342cf9fd688506bd272c6", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "cde2e0c61c104aa38896eb480008792d", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_FloorDiv", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "47f1322a3ee644dba3454cbefc154ca9", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f2e68113d00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f2e68113d00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.88s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length - rasp.indices + 1).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx * -1, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "83699250d8c54ee894e253e5c8d490eb", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f1334b3bd30>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f1334b3bd30>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx ** 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.21s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx ** 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices - 1 * -1, opp_idx, rasp.Comparison.TRUE).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "071d029ddac5499597bcc7aaefb88561", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [44, 4], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f51fe54bca0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f51fe54bca0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length | rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx >> 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for >>: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.34s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.EQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length | rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx >> 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "3e09140c519b4727966a6f6cc3a75ff0", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f88b9523d30>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f88b9523d30>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ^: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.02s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,8 +36,8 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx | 2).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "1e23b077e10242248cc680b653fa96a3", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "89d094127ae64554b269169c0783b406", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fe333337e50>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fe333337e50>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ^ rasp.indices - 1).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ^: 'Map' and 'Map'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.30s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -16,7 +16,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,8 +36,8 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length ^ rasp.indices - 1).named(\"opp_idx\")\n+    opp_idx = (opp_idx + 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "b3f371c8cfb747aa90e8f161a35eaeb6", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f2681ef7c40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f2681ef7c40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.75s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx | 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices + 1 * -1, opp_idx, rasp.Comparison.LEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "85051a71594740528950be8394135496", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fae41bebc40>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fae41bebc40>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx % 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for %: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.36s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,9 +37,9 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx % 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx * -1, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "cd1c443394d64c5c9fad8f376560b19e", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_FloorDiv", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 3, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "d088ff05cfff4f928c4d9e1d2cfbd63a", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [44, 4], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f261fdf3d60>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f261fdf3d60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length << rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for <<: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.14s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.GEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length << rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.GEQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "2477bc8d2ceb43a4bfab4dd850142a93", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f26a1b2bc40>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f26a1b2bc40>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ** rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.40s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length ** rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx * 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices + 1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "26bea4af730c423f8f850e6c14ca4ff5", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fc2ded3fc70>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fc2ded3fc70>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.63s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length | rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 2).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.TRUE).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "da689b0072744effae561b4195d8c5d3", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fa83670bca0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fa83670bca0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx % 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for %: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.41s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,9 +37,9 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx % 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "0ff73beb8ffa45feb0734a2d13f1c81b", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.65s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -16,7 +16,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,8 +36,8 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length / rasp.indices + 1).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 2).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "df2354332ffe4ade9206d35f1cc0c99b", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.58s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length / rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx - 0).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "c62488f56b804cafaa2fed0ad3fc5b78", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f9da682fd00>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f9da682fd00>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx ** 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.29s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,9 +37,9 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx ** 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices + 1, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "2bb8594ee259400ea218714480652b9b", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f977e1efd00>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f977e1efd00>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx >> 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for >>: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.32s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -16,7 +16,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx >> 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices + 1 * -1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "48d64b31a7184a40bccdf068d26a710c", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f4653a37d30>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f4653a37d30>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length >> rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for >>: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.10s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length >> rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "132bba7eaf0743d1bcc70b6831af8b9d", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fa7dea2bbb0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fa7dea2bbb0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length >> rasp.indices + 1).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for >>: 'SelectorWidth' and 'Map'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.42s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.EQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length >> rasp.indices + 1).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices + 1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "a8f5f4d2f4324dd9989a53e2069e53db", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f0b8b763c70>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f0b8b763c70>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.13s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length & rasp.indices - 1).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices + 1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "4cbd7cf66056483690dd56d148c60fb3", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 3, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f6cc610bc70>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f6cc610bc70>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.21s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.GT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length + rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices + 1 * -1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "7a588258b1e44093aa7b4fd3db93ba45", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f78fd1e3d60>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f78fd1e3d60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length % rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for %: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.22s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length % rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx * -1, rasp.Comparison.LEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "3259e4cc88fc4128a8f94a80b223feb6", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7ff7343ffbe0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7ff7343ffbe0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.79s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx * 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices + 1, opp_idx, rasp.Comparison.LEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "e9ad005ceb7f447ea57600c4576c406d", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 12, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f058494bdc0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f058494bdc0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx % 2).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for %: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.54s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx % 2).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.NEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "829af1962a7847b8a76838b2653334bd", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "f618ae1f84394503bcafb494a6a55fcd", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f36d981fa60>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f36d981fa60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices - 1).named(\"opp_idx\")\n>       opp_idx = (opp_idx ^ 2).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for ^: 'Map' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.22s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length - rasp.indices - 1).named(\"opp_idx\")\n+    opp_idx = (opp_idx ^ 2).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.GT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "5287c2a55a3d4cec8cd953e8817423a3", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [44, 4], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7ff712a1fbe0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7ff712a1fbe0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length % rasp.indices + 1).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for %: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.47s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.EQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length % rasp.indices + 1).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "66056586002048e3b53401dc3fb9e5ad", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f7526e33df0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f7526e33df0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.98s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx * 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices * -1, opp_idx, rasp.Comparison.GT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "ae4ae0759b4447fcaea4448fc60fda3d", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f2925623d00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f2925623d00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.64s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.EQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,9 +37,9 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx & 2).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "b3dd4385a737441b8bc4aaef91276996", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_FloorDiv", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [19, 4], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "48f31a8d42ef4bc0a533acb210e8879b", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "ed2443b0dcaf460e8ca3315395437709", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f3b11f13c10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f3b11f13c10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.12s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length + rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices * -1, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "c52555471b254556999ee018969d34df", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f0a2e543dc0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f0a2e543dc0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx ** 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.32s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,9 +37,9 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx ** 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.TRUE).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "75c12f2e863b42d6834920b3fe32c2bd", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [19, 4], "end_pos": [19, 64], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f31e0403e20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f31e0403e20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.87s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -16,7 +16,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -37,9 +37,9 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx | 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.TRUE).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "cb5b2c6f55a64661a1e7a1f008b12e80", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fce24fe3ca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fce24fe3ca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.14s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.EQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx * 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx * -1, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "48065eb30a3b4542bf2ee284c887ba67", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [19, 4], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f30fd537df0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f30fd537df0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices + 1).named(\"opp_idx\")\n>       opp_idx = (opp_idx % 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for %: 'Map' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.45s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,9 +14,9 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.GEQ\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,8 +36,8 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length - rasp.indices + 1).named(\"opp_idx\")\n+    opp_idx = (opp_idx % 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "2f0be1acdee6438db21ef84c1c8c8166", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "e2e176b04742439781fd3034cdb4e95e", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.39s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.GEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length / rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx + 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices * -1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "61f0921321534906b0a9dabeb41e7fa6", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.40s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -16,7 +16,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length / rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx * 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "83b82163e2c4441588964dbe504e1585", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f817f30bd60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f817f30bd60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.41s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,9 +14,9 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length | rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "352c69c929d647afbdbc91751cb4571e", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "a2a45d66ba6e4c6d8697663565c2998c", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f017ef1fb80>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f017ef1fb80>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length & rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx >> 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for >>: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.27s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length & rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx >> 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices + 1, opp_idx, rasp.Comparison.LEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "abe626411cac477d816bc346dbd2959d", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f0e8c35fc10>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f0e8c35fc10>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length & rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx >> 2).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for >>: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.23s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.EQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,8 +36,8 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length & rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx >> 2).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "904617956bd64125a14906a014dbfb54", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f0e9132bbb0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f0e9132bbb0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length % rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for %: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.30s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,10 +36,10 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (length % rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx * 0).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "7f273f4963aa497a92f72ca4af2796c4", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f9ea7713dc0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f9ea7713dc0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx ^ 0).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for ^: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.25s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -37,8 +37,8 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (opp_idx ^ 0).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.GEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "d132dc3d1cf84a92be243ef8bab09de3", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fbe619ffdc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fbe619ffdc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 25.19s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length - rasp.indices + 1).named(\"opp_idx\")\n+    opp_idx = (opp_idx * 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices * -1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "f6563938d546438fb0724bc9e116a695", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}, {"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f612ca3fca0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f612ca3fca0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length << rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for <<: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.28s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,9 +36,9 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    opp_idx = (length << rasp.indices).named(\"opp_idx\")\n+    opp_idx = (opp_idx ** 1).named(\"opp_idx-1\")\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx * -1, rasp.Comparison.GEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]

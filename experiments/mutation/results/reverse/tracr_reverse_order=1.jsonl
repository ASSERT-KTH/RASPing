[{"job_id": "2b6f62a96b1d411a81185c47fcf323ab", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f8f251ebc40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f8f251ebc40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.93s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,7 +36,7 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length + rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\""}]
[{"job_id": "809958b1964e44f49f38188b523a08bf", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fa11021fc10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fa11021fc10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.49s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,7 +37,7 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx + 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "d378e1e0b4354b35baef69d840ae5bd3", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f7791737c70>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f7791737c70>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.08s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,7 +36,7 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length * rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\""}]
[{"job_id": "db798368c8224a95b5076cc7c62e2065", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fa750b17c10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fa750b17c10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.09s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,7 +37,7 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx * 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "08d03d45538144fd803ac08e0bbfa8c0", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.84s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,7 +36,7 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length / rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\""}]
[{"job_id": "0dec62f38669459fad4409b79023425c", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fc57a74bc10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fc57a74bc10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.44s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,7 +37,7 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx / 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "f5712c3decd5411a8822bedb801b24e5", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_FloorDiv", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f4eb935bc10>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f4eb935bc10>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length // rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for //: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.35s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,7 +36,7 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length // rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\""}]
[{"job_id": "22786bf659044f57b0b251420cf8380e", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_FloorDiv", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f204fc37c40>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f204fc37c40>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx // 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for //: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.50s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,7 +37,7 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx // 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "33c72332cfb2420dbba33229f9498bca", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fe6f063fc40>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7fe6f063fc40>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length % rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for %: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.22s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,7 +36,7 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length % rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\""}]
[{"job_id": "e9af6474d99d447db5c55649964cb2a3", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f9ab6113c10>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f9ab6113c10>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx % 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for %: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 2.56s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,7 +37,7 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx % 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "9d66893e8b564817bae05044e3cc77a9", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f67214f7cd0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f67214f7cd0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ** rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.61s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,7 +36,7 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length ** rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\""}]
[{"job_id": "e3e6f2f4f4de4cbba80a5a3efdef4f46", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f6cb3023d30>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f6cb3023d30>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx ** 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.24s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,7 +37,7 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx ** 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "85669ca202bb4caf9f427397bf07a6bc", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f4ce9de7c10>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f4ce9de7c10>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length >> rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for >>: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.35s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,7 +36,7 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length >> rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\""}]
[{"job_id": "468694a8866948878aea751327d39a52", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f27d721fd00>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f27d721fd00>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx >> 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for >>: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.06s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,7 +37,7 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx >> 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "01a32669669e4a88855add793b49005e", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f6b3bdebc10>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f6b3bdebc10>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length << rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for <<: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.72s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,7 +36,7 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length << rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\""}]
[{"job_id": "fdd7a689229045b8aca4dedbf009793d", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f4f2d7ebca0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f4f2d7ebca0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx << 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for <<: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.16s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,7 +37,7 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx << 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "d27d5f67f69a45459920946530c4b9c2", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f280933bc40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f280933bc40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.38s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,7 +36,7 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length | rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\""}]
[{"job_id": "9aaf65fc02f74322bbc7dc023d473a03", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7ff5b3437c10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7ff5b3437c10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.33s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,7 +37,7 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx | 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "32eb1b4425bb4453a1efb318801c2a04", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f90ee42bca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f90ee42bca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 17.93s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,7 +36,7 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length & rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\""}]
[{"job_id": "3d2a89f920d54461b799daea36c11b5a", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f03073cfcd0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f03073cfcd0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 18.32s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,7 +37,7 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx & 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "12342b0f6338450e9baa0a12e4dd2357", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 0, "start_pos": [39, 22], "end_pos": [39, 23], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f38c7603cd0>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f38c7603cd0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n>       opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\nE       TypeError: unsupported operand type(s) for ^: 'SelectorWidth' and 'IndicesType'\n\nsource/reverse.py:39: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.59s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,7 +36,7 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length ^ rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\""}]
[{"job_id": "8512f920b9fa48f3a1ad731ad836bb9b", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 1, "start_pos": [40, 23], "end_pos": [40, 24], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssE\n\n==================================== ERRORS ====================================\n___________________ ERROR at setup of TestReverse.test_model ___________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f7251947c70>\nmethod = <bound method TestReverse.test_model of <tests.test_reverse.TestReverse object at 0x7f7251947c70>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_reverse(rasp.tokens), \"reverse\")\n\ntests/test_reverse.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsop = tokens\n\n    def make_reverse(sop: rasp.SOp) -> rasp.SOp:\n        \"\"\"Create an SOp that reverses a sequence, using length primitive.\n    \n        Example usage:\n          reverse = make_reverse(rasp.tokens)\n          reverse(\"Hello\")\n          >> ['o', 'l', 'l', 'e', 'H']\n    \n        Args:\n          sop: an SOp\n    \n        Returns:\n          reverse : SOp that reverses the input sequence.\n        \"\"\"\n        opp_idx = (length - rasp.indices).named(\"opp_idx\")\n>       opp_idx = (opp_idx ^ 1).named(\"opp_idx-1\")\nE       TypeError: unsupported operand type(s) for ^: 'SequenceMap' and 'int'\n\nsource/reverse.py:40: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_reverse.py::TestReverse::test_model - TypeError: unsupported...\n==================== 2 skipped, 1 warning, 1 error in 3.22s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,7 +37,7 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx ^ 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "1a2d6d1fc3af4c7db95d3014e8b6dccd", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f0a1bfe7d90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f0a1bfe7d90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.64s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,7 +37,7 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx - 2).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "942ae86b495749d884223cb1e777b2ae", "mutations": [{"module_path": "source/reverse.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f336f72bc70>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f336f72bc70>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.70s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,7 +37,7 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx - 0).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "94d212cd28f54effb023911894369d16", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f2e114f7af0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f2e114f7af0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.51s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.EQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n "}]
[{"job_id": "eec864e7beef4ad79854c69d2109cd04", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f55199fba60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f55199fba60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.97s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n "}]
[{"job_id": "d9de178bacb54987b5df51b137344c31", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f3d12febd00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f3d12febd00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.79s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n "}]
[{"job_id": "c64a951e956c46a58099021dc202a146", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 3, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f63f5137ca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f63f5137ca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.45s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.GT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n "}]
[{"job_id": "3ba910899b084633b912db4ec2b06765", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f0f0d21fc70>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f0f0d21fc70>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.42s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.GEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n "}]
[{"job_id": "e30a869fa4af46bab3d2f87586c9e262", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f7097c37c10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f7097c37c10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.26s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n "}]
[{"job_id": "54ca160efa9d43e4a1592a3f9b2ac3d2", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [17, 34], "end_pos": [17, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f6992b0bbb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f6992b0bbb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.69s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.FALSE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n "}]
[{"job_id": "89deb8bd68c54174ab84e8fe86c3b2c9", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fd14ab2fc10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fd14ab2fc10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.93s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -38,7 +38,7 @@\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "ee02bc28782d406bb65867ed10112b96", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fe61620fbe0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fe61620fbe0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.85s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -38,7 +38,7 @@\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "39045b39a0bb41d9b0a1e47cb98b783e", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f234f347c10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f234f347c10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.68s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -38,7 +38,7 @@\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.LEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "de8b281ea8bc4bd3bb7d0027834724a8", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f5cddb3bc40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f5cddb3bc40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.35s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -38,7 +38,7 @@\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.GT).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "fba0dc7d2af042c183020251184f3297", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f9de872baf0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f9de872baf0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.75s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -38,7 +38,7 @@\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.GEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "f1c6c83a5400444b8cf0c7db0a96b497", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 12, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f118e3dfd30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f118e3dfd30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.48s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -38,7 +38,7 @@\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.NEQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "b47a9ea4434845699a80acdb2b05b1b7", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [41, 58], "end_pos": [41, 76], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fd0b42efc40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fd0b42efc40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.10s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -38,7 +38,7 @@\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.TRUE).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "183c779cd0124ed38b2f8893db768dd2", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f397c22bbe0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f397c22bbe0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.00s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,7 +37,7 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx - 2).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "ab3e70d5ccc142058288ff2a34b05336", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [40, 25], "end_pos": [40, 26], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fed33a23cd0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fed33a23cd0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.16s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -37,7 +37,7 @@\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n-    opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n+    opp_idx = (opp_idx - 0).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )"}]
[{"job_id": "412e0ff120c4422bbee1863c8a1a5e49", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fc29e523d30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fc29e523d30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.97s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,7 +36,7 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length - rasp.indices + 1).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\""}]
[{"job_id": "994d39613e6444989ad381a9d3665bba", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f758b537b80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f758b537b80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.08s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -38,7 +38,7 @@\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices + 1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "8aada664d0204144b2d3624ae38efe91", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [39, 24], "end_pos": [39, 36], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fef78d47d00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fef78d47d00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.03s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -36,7 +36,7 @@\n     Returns:\n       reverse : SOp that reverses the input sequence.\n     \"\"\"\n-    opp_idx = (length - rasp.indices).named(\"opp_idx\")\n+    opp_idx = (length - rasp.indices - 1).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\""}]
[{"job_id": "161cf0d3816c4d5b98bc4051602fa72a", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [41, 35], "end_pos": [41, 47], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f0525f3fd00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f0525f3fd00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.76s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -38,7 +38,7 @@\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices - 1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "c8e72643ef8444a98b9777bd3c8a208e", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [19, 4], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f3dcbdefd30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f3dcbdefd30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 24.41s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -16,7 +16,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()"}]
[{"job_id": "63c0b594a3754cd2938a5bf1b03fc5e3", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [44, 4], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f365023fa90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f365023fa90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.84s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -41,5 +41,5 @@\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]
[{"job_id": "f77614c735d9489c81f889d03bc32c25", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 23.55s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n "}]
[{"job_id": "3ec6260809534a1f81c184084c678b58", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [16, 24], "end_pos": [18, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 24.16s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -14,7 +14,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n "}]
[{"job_id": "231a32a5efd24a10840857bd72e478a1", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f9cb7d63c40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f9cb7d63c40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.67s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -38,7 +38,7 @@\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices * -1, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "bb95f59c533c40cbbb3a2146ba458fcc", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [41, 23], "end_pos": [43, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fc59a7efc10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fc59a7efc10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.08s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -38,7 +38,7 @@\n     \"\"\"\n     opp_idx = (length - rasp.indices).named(\"opp_idx\")\n     opp_idx = (opp_idx - 1).named(\"opp_idx-1\")\n-    reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n+    reverse_selector = rasp.Select(rasp.indices, opp_idx * -1, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n     return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")"}]
[{"job_id": "06e667e882a048f8b86dd8600d8470d2", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fb8ae63fca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fb8ae63fca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.81s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -41,5 +41,5 @@\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop * -1).named(\"reverse\")\n "}]
[{"job_id": "f225b1df641244568ca63d1eec6d8a2a", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [19, 11], "end_pos": [19, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7fd5b4623c10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7fd5b4623c10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.41s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -16,7 +16,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()"}]
[{"job_id": "94c3fb9c82b749fabf5a482161e4e884", "mutations": [{"module_path": "source/reverse.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [44, 11], "end_pos": [44, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_reverse.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n____________________________ TestReverse.test_model ____________________________\n\nself = <tests.test_reverse.TestReverse object at 0x7f32ddc3fc40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_reverse.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_reverse.TestReverse object at 0x7f32ddc3fc40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_reverse.py::TestReverse::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.81s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/reverse.py\n+++ bsource/reverse.py\n@@ -41,5 +41,5 @@\n     reverse_selector = rasp.Select(rasp.indices, opp_idx, rasp.Comparison.EQ).named(\n         \"reverse_selector\"\n     )\n-    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\")\n+    return rasp.Aggregate(reverse_selector, sop).named(\"reverse\") * -1\n "}]

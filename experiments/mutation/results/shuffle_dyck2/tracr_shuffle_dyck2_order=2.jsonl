[{"job_id": "d8f22a541df842aa8b1313f3387e4101", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 14, "start_pos": [109, 28], "end_pos": [109, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.84\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f0891a3fd60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f0891a3fd60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 41.65s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -106,7 +106,7 @@\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 2:]:\n         any_negative = any_negative | (balance < 0)\n \n     # Convert to numerical SOp"}]
[{"job_id": "a3632d76f6ed4759bb9e565880d90c1d", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [17, 24], "end_pos": [19, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.82\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f6b30f23f10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f6b30f23f10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 56.81s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length / 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "e2868ad3815c44f79f389ab4d171b7b9", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_IsNot", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ZeroIterationForLoop", "occurrence": 1, "start_pos": [109, 19], "end_pos": [109, 31], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f7c2af23d90>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f7c2af23d90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\nsource/shuffle_dyck2.py:102: in make_shuffle_dyck\n    balance = make_pair_balance(\nsource/shuffle_dyck2.py:73: in make_pair_balance\n    bools_close = rasp.numerical(sop is not close_token).named(\"bools_close\")\n../../.venv/lib/python3.10/site-packages/tracr/rasp/rasp.py:721: in numerical\n    return annotate(sop, encoding=Encoding.NUMERICAL)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nexpr = True, annotations = {'encoding': <Encoding.NUMERICAL: 'numerical'>}\n\n    def annotate(expr: RASPExprT, **annotations) -> RASPExprT:\n      \"\"\"Creates a new expr with added annotations.\"\"\"\n>     new = expr.copy()\nE     AttributeError: 'bool' object has no attribute 'copy'\n\n../../.venv/lib/python3.10/site-packages/tracr/rasp/rasp.py:160: AttributeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AttributeEr...\n==================== 2 skipped, 1 warning, 1 error in 3.46s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop is not close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n@@ -106,7 +106,7 @@\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n-    for balance in balances[1:]:\n+    for balance in []:\n         any_negative = any_negative | (balance < 0)\n \n     # Convert to numerical SOp"}]
[{"job_id": "a29d4c4bb0164fc2889f81cfd422f95e", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 20, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 21, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fa900753e20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fa900753e20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 54.54s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.FALSE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.LT).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "750312872cd2442ea1d8d26a7669c955", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/AddNot", "occurrence": 0, "start_pos": [95, 11], "end_pos": [95, 26], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 5, "start_pos": [76, 76], "end_pos": [76, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f682e723df0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f682e723df0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n>       assert not len(pairs) >= 1\nE       AssertionError\n\nsource/shuffle_dyck2.py:95: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.36s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, - 0))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert not len(pairs) >= 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []"}]
[{"job_id": "0baa8abe6a7a483181f2600737578ba3", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Is", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 8, "start_pos": [100, 28], "end_pos": [100, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fee48347dc0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fee48347dc0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n>           assert len(pair) == 3\nE           AssertionError\n\nsource/shuffle_dyck2.py:100: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.27s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop is open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) == 3\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token"}]
[{"job_id": "1a19c93a901f4cbba0c6fb9f0c6c2004", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceUnaryOperator_Delete_USub", "occurrence": 0, "start_pos": [76, 75], "end_pos": [76, 76], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [45, 4], "end_pos": [45, 86], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fe0b5e2fdf0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fe0b5e2fdf0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 45.28s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -42,7 +42,7 @@\n     \"\"\"\n     bools = rasp.numerical(bools)\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\") * -1\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, 1))\n     return pair_balance.named(\"pair_balance\")\n \n "}]
[{"job_id": "35ea60d98a6f4057a19d4e8cbb3004e5", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 3, "start_pos": [76, 72], "end_pos": [76, 73], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 2, "start_pos": [132, 16], "end_pos": [132, 72], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fe057a3bd30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fe057a3bd30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 21.53s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 0, -1))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -129,7 +129,7 @@\n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n-    last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n+    last_zero = rasp.Aggregate(select_last, all_zero * -1).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n     return (last_zero & not_has_neg).named(\"shuffle_dyck\")"}]
[{"job_id": "b4fa31f768134aca9cea3bf045aeeb14", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 3, "start_pos": [76, 72], "end_pos": [76, 73], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [44, 24], "end_pos": [44, 36], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f316e30fe80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f316e30fe80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 26.22s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices - 1, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 0, -1))\n     return pair_balance.named(\"pair_balance\")\n \n "}]
[{"job_id": "e134dc99a4cc4be681254f3dc3f84773", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_GtE_Eq", "occurrence": 0, "start_pos": [95, 22], "end_pos": [95, 24], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 3, "start_pos": [135, 4], "end_pos": [135, 58], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fbbb220fe20>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fbbb220fe20>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n>       assert len(pairs) == 1\nE       AssertionError\n\nsource/shuffle_dyck2.py:95: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.30s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) == 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -132,7 +132,7 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero & not_has_neg).named(\"shuffle_dyck\") * -1\n \n \n def make_shuffle_dyck2() -> rasp.SOp:"}]
[{"job_id": "aff16320dcec491d9669b922262a8aca", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 12, "start_pos": [126, 28], "end_pos": [126, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fd21700bee0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fd21700bee0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[ 2:]:\n            all_zero = all_zero & (balance == 0)\n    \n>       select_last = rasp.Select(rasp.indices, length >> 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\nE       TypeError: unsupported operand type(s) for >>: 'SelectorWidth' and 'int'\n\nsource/shuffle_dyck2.py:129: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.29s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -123,10 +123,10 @@\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 2:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length >> 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "e3b923b06877479288c9edfaafb3c855", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Lt_Gt", "occurrence": 1, "start_pos": [110, 47], "end_pos": [110, 48], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 3, "start_pos": [117, 43], "end_pos": [117, 55], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f9c0d747dc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f9c0d747dc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 57.28s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -107,14 +107,14 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance > 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices - 1, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "462f4b6142ce4648b6cc48a9250bbc29", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_BitXor", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f4426203ca0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f4426203ca0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n>           all_zero = all_zero ^ (balance == 0)\nE           TypeError: unsupported operand type(s) for ^: 'Map' and 'Map'\n\nsource/shuffle_dyck2.py:127: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.30s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -124,9 +124,9 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero ^ (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length / 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "884280ad06e747579ecbe77edc2eb8a9", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 3, "start_pos": [117, 43], "end_pos": [117, 55], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [44, 12], "end_pos": [44, 72], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "timeout", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices * -1, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices - 1, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "2a6231a531674be98f7103f1a6349de4", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 14, "start_pos": [109, 28], "end_pos": [109, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 5, "start_pos": [71, 12], "end_pos": [71, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssUnsupported RASP expressions:\nbalance_(): LinearSequenceMap only supports numerical inputs/outputs.\nbalance_{}: LinearSequenceMap only supports numerical inputs/outputs.\nbalance_(): LinearSequenceMap only supports numerical inputs/outputs.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.15s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -68,7 +68,7 @@\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n-    opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n+    opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\") * -1\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n@@ -106,7 +106,7 @@\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 2:]:\n         any_negative = any_negative | (balance < 0)\n \n     # Convert to numerical SOp"}]
[{"job_id": "1bc844538d73429fa6c10551aea02e8b", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Div", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fdb77b0fdc0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fdb77b0fdc0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n>       select_last = rasp.Select(rasp.indices, length ** 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SelectorWidth' and 'int'\n\nsource/shuffle_dyck2.py:129: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.32s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -126,13 +126,13 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length ** 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero / not_has_neg).named(\"shuffle_dyck\")\n \n \n def make_shuffle_dyck2() -> rasp.SOp:"}]
[{"job_id": "0ce88315ce79441fa403d0e7a602354f", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Lt_NotEq", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ZeroIterationForLoop", "occurrence": 2, "start_pos": [126, 19], "end_pos": [126, 31], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fdffad5bd30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fdffad5bd30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 42.52s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] != 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -123,7 +123,7 @@\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n-    for balance in balances[1:]:\n+    for balance in []:\n         all_zero = all_zero & (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named("}]
[{"job_id": "2b09e7502d2c4e3fbfdde39cc4166604", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 26, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7efc54c03d30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7efc54c03d30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 48.98s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop >= close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.NEQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "8262bb0e3cf74e0ea78a943bb38f156e", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Sub", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 14, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.22\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fa9375e7c40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fa9375e7c40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 48.37s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.EQ).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n@@ -132,7 +132,7 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero - not_has_neg).named(\"shuffle_dyck\")\n \n \n def make_shuffle_dyck2() -> rasp.SOp:"}]
[{"job_id": "3ccdc12a841948d096b5be5dec3c6640", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f0e629f3d90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f0e629f3d90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 46.77s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.FALSE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] > 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "309259b4466a4e4e95b69aa7a96fed32", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_IsNot", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 4, "start_pos": [76, 76], "end_pos": [76, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f233a73be80>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f233a73be80>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\nsource/shuffle_dyck2.py:102: in make_shuffle_dyck\n    balance = make_pair_balance(\nsource/shuffle_dyck2.py:73: in make_pair_balance\n    bools_close = rasp.numerical(sop is not close_token).named(\"bools_close\")\n../../.venv/lib/python3.10/site-packages/tracr/rasp/rasp.py:721: in numerical\n    return annotate(sop, encoding=Encoding.NUMERICAL)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nexpr = True, annotations = {'encoding': <Encoding.NUMERICAL: 'numerical'>}\n\n    def annotate(expr: RASPExprT, **annotations) -> RASPExprT:\n      \"\"\"Creates a new expr with added annotations.\"\"\"\n>     new = expr.copy()\nE     AttributeError: 'bool' object has no attribute 'copy'\n\n../../.venv/lib/python3.10/site-packages/tracr/rasp/rasp.py:160: AttributeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AttributeEr...\n==================== 2 skipped, 1 warning, 1 error in 3.38s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -70,10 +70,10 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop is not close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, - 2))\n     return pair_balance.named(\"pair_balance\")\n \n "}]
[{"job_id": "b4cbce95130d41f4af5c5d194b9e9dcd", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 15, "start_pos": [109, 28], "end_pos": [109, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 18, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "timeout", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -106,7 +106,7 @@\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 0:]:\n         any_negative = any_negative | (balance < 0)\n \n     # Convert to numerical SOp\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GEQ).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "f04ae39721e741e5a71f2f1130e70cab", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_LtE", "occurrence": 4, "start_pos": [127, 39], "end_pos": [127, 41], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [45, 4], "end_pos": [45, 86], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "timeout", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -42,7 +42,7 @@\n     \"\"\"\n     bools = rasp.numerical(bools)\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\") * -1\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance <= 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "dfc2e4b16dba49cab0ca9cff6d4ab9d4", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Mod", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 6, "start_pos": [129, 18], "end_pos": [131, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f6e9cbf7e20>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f6e9cbf7e20>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices * -1, length - 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n        not_has_neg = (~has_neg).named(\"not_has_neg\")\n>       return (last_zero % not_has_neg).named(\"shuffle_dyck\")\nE       TypeError: unsupported operand type(s) for %: 'Aggregate' and 'Map'\n\nsource/shuffle_dyck2.py:135: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.23s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -126,13 +126,13 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices * -1, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero % not_has_neg).named(\"shuffle_dyck\")\n \n \n def make_shuffle_dyck2() -> rasp.SOp:"}]
[{"job_id": "7ed0a95d5ff041c1814b36364ebd708a", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Sub", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 3, "start_pos": [135, 4], "end_pos": [135, 58], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.84\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f427e95bdc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f427e95bdc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 53.49s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero - (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n@@ -132,7 +132,7 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero & not_has_neg).named(\"shuffle_dyck\") * -1\n \n \n def make_shuffle_dyck2() -> rasp.SOp:"}]
[{"job_id": "347be898ce4a4a2bae77f8eb01dfbeda", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_NotEq", "occurrence": 2, "start_pos": [100, 25], "end_pos": [100, 27], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 14, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f821b15be80>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f821b15be80>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n>           assert len(pair) != 2\nE           AssertionError\n\nsource/shuffle_dyck2.py:100: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.20s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) != 2\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.EQ).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "c28f4430d26748d38e2b1b2abdfb51e9", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 13, "start_pos": [108, 33], "end_pos": [108, 34], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 13, "start_pos": [127, 42], "end_pos": [127, 43], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f9bc7103cd0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f9bc7103cd0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 48.72s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] < -1\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance == -1)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "394aac8104bd4f3dbf30f63f9cabc354", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 2, "start_pos": [77, 4], "end_pos": [77, 45], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fcf1420fd90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fcf1420fd90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 50.18s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -74,7 +74,7 @@\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n-    return pair_balance.named(\"pair_balance\")\n+    return pair_balance.named(\"pair_balance\") * -1\n \n \n def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:"}]
[{"job_id": "3d40bb5839cd4815b7c809a88f5ccfa4", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Add", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.88\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fefd011fc10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fefd011fc10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 52.42s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GT)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero + (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "35e988ad511d49a5bf113ae7ea7fa312", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Lt_LtE", "occurrence": 1, "start_pos": [110, 47], "end_pos": [110, 48], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ZeroIterationForLoop", "occurrence": 2, "start_pos": [126, 19], "end_pos": [126, 31], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f6854b33dc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f6854b33dc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 37.61s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance <= 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -123,7 +123,7 @@\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n-    for balance in balances[1:]:\n+    for balance in []:\n         all_zero = all_zero & (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named("}]
[{"job_id": "e83d29d87cff4749bd2b59ad06e8fcbd", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ZeroIterationForLoop", "occurrence": 0, "start_pos": [99, 16], "end_pos": [99, 21], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 7, "start_pos": [109, 28], "end_pos": [109, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fced9befdf0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fced9befdf0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in []:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n>       any_negative = balances[0] < 0\nE       IndexError: list index out of range\n\nsource/shuffle_dyck2.py:108: IndexError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - IndexError:...\n==================== 2 skipped, 1 warning, 1 error in 3.31s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -96,7 +96,7 @@\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n-    for pair in pairs:\n+    for pair in []:\n         assert len(pair) == 2\n         open_token, close_token = pair\n         balance = make_pair_balance(\n@@ -106,7 +106,7 @@\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 0:]:\n         any_negative = any_negative | (balance < 0)\n \n     # Convert to numerical SOp"}]
[{"job_id": "90d856fc943f4d5296460987ce638735", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 15, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.04\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fdb9f763d90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fdb9f763d90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 51.95s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.FALSE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LT).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "037e6450ff8b4de78ef20f91e43f92bc", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_NotEq", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [43, 12], "end_pos": [43, 33], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssUnsupported RASP expressions:\nopens: An aggregate's output encoding must match its input encoding. Input: Encoding.NUMERICAL   Output: Encoding.CATEGORICAL  \ncloses: An aggregate's output encoding must match its input encoding. Input: Encoding.NUMERICAL   Output: Encoding.CATEGORICAL  \nopens: An aggregate's output encoding must match its input encoding. Input: Encoding.NUMERICAL   Output: Encoding.CATEGORICAL  \ncloses: An aggregate's output encoding must match its input encoding. Input: Encoding.NUMERICAL   Output: Encoding.CATEGORICAL  \nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.51s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -40,7 +40,7 @@\n       frac_prevs: SOp mapping an input to a sequence, where every element\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n-    bools = rasp.numerical(bools)\n+    bools = rasp.numerical(bools) * -1\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop != open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")"}]
[{"job_id": "cccd81c6cf564e97a5c6c2bc9a73f3f7", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Is", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [44, 12], "end_pos": [44, 72], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fb509a37d90>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fb509a37d90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\nsource/shuffle_dyck2.py:102: in make_shuffle_dyck\n    balance = make_pair_balance(\nsource/shuffle_dyck2.py:70: in make_pair_balance\n    bools_open = rasp.numerical(sop is open_token).named(\"bools_open\")\n../../.venv/lib/python3.10/site-packages/tracr/rasp/rasp.py:721: in numerical\n    return annotate(sop, encoding=Encoding.NUMERICAL)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nexpr = False, annotations = {'encoding': <Encoding.NUMERICAL: 'numerical'>}\n\n    def annotate(expr: RASPExprT, **annotations) -> RASPExprT:\n      \"\"\"Creates a new expr with added annotations.\"\"\"\n>     new = expr.copy()\nE     AttributeError: 'bool' object has no attribute 'copy'\n\n../../.venv/lib/python3.10/site-packages/tracr/rasp/rasp.py:160: AttributeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AttributeEr...\n==================== 2 skipped, 1 warning, 1 error in 3.49s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices * -1, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop is open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")"}]
[{"job_id": "7d6ddc6c1a0546c1a4568592562a0cdc", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Lt_GtE", "occurrence": 1, "start_pos": [110, 47], "end_pos": [110, 48], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [44, 12], "end_pos": [44, 72], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "timeout", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices * -1, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance >= 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "fee867d604344885b6d43bcb2cf60654", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Lt", "occurrence": 4, "start_pos": [127, 39], "end_pos": [127, 41], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Lt_NotEq", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fc972e1bdf0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fc972e1bdf0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 47.67s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] != 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance < 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "345dea88a5ff4c58bdbf86f4e49abe6a", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 6, "start_pos": [95, 25], "end_pos": [95, 26], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.94\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f48be963e20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f48be963e20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 55.30s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) >= 2\n \n     # Compute running balance of each type of parenthesis\n     balances = []"}]
[{"job_id": "2cd447dc69f34456a5f59ec5b9420d56", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_NotEq", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceUnaryOperator_Delete_USub", "occurrence": 0, "start_pos": [76, 75], "end_pos": [76, 76], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fa0fb743e20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fa0fb743e20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 33.76s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, 1))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] != 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "51d489178e4845b8a023c8852416bc67", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_NotEq", "occurrence": 4, "start_pos": [127, 39], "end_pos": [127, 41], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 4, "start_pos": [129, 30], "end_pos": [129, 42], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f131c21fca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f131c21fca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 49.95s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -124,9 +124,9 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance != 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices - 1, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "0a7069209f6a439cb304db1705117ad0", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_BitXor", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fd5af54fe20>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fd5af54fe20>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n>           all_zero = all_zero ^ (balance == 0)\nE           TypeError: unsupported operand type(s) for ^: 'Map' and 'Map'\n\nsource/shuffle_dyck2.py:127: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.11s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop >= close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero ^ (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "f0eb185f29254844ab7855243894d51e", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Lt_Eq", "occurrence": 1, "start_pos": [110, 47], "end_pos": [110, 48], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [17, 24], "end_pos": [19, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f0940b53ee0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f0940b53ee0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 49.35s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance == 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "6457891b53f648329881d5bd18d40472", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Div", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [44, 38], "end_pos": [44, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.48s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices + 1, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -132,7 +132,7 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero / not_has_neg).named(\"shuffle_dyck\")\n \n \n def make_shuffle_dyck2() -> rasp.SOp:"}]
[{"job_id": "cc844233d1ce4d9b9e75d8532e25bdaf", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_LShift", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_LtE", "occurrence": 2, "start_pos": [100, 25], "end_pos": [100, 27], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fa865337dc0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fa865337dc0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) <= 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n        not_has_neg = (~has_neg).named(\"not_has_neg\")\n>       return (last_zero << not_has_neg).named(\"shuffle_dyck\")\nE       TypeError: unsupported operand type(s) for <<: 'Aggregate' and 'Map'\n\nsource/shuffle_dyck2.py:135: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.31s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) <= 2\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token\n@@ -132,7 +132,7 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero << not_has_neg).named(\"shuffle_dyck\")\n \n \n def make_shuffle_dyck2() -> rasp.SOp:"}]
[{"job_id": "ffd1600417e94f2ab68e45d701386a27", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_LShift", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_NotEq", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f8d0232fdc0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f8d0232fdc0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n        not_has_neg = (~has_neg).named(\"not_has_neg\")\n>       return (last_zero << not_has_neg).named(\"shuffle_dyck\")\nE       TypeError: unsupported operand type(s) for <<: 'Aggregate' and 'Map'\n\nsource/shuffle_dyck2.py:135: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.01s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop != close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n@@ -132,7 +132,7 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero << not_has_neg).named(\"shuffle_dyck\")\n \n \n def make_shuffle_dyck2() -> rasp.SOp:"}]
[{"job_id": "79d329d2974947fbb2bfe002c99cfef9", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Lt", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 3, "start_pos": [95, 25], "end_pos": [95, 26], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fa55e43bc10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fa55e43bc10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 34.01s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop < open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) >= 2\n \n     # Compute running balance of each type of parenthesis\n     balances = []"}]
[{"job_id": "12325bc486164d5a9c55ca0422ffaa80", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 26, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 4, "start_pos": [139, 4], "end_pos": [139, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f9acaa1bcd0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f9acaa1bcd0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 54.21s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.NEQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n@@ -136,5 +136,5 @@\n \n \n def make_shuffle_dyck2() -> rasp.SOp:\n-    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n+    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\") * -1\n "}]
[{"job_id": "c79949cf004540bf80f81df319a204d9", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_NotEq", "occurrence": 2, "start_pos": [100, 25], "end_pos": [100, 27], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fd066f4fe20>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fd066f4fe20>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n>           assert len(pair) != 2\nE           AssertionError\n\nsource/shuffle_dyck2.py:100: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.33s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) != 2\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token"}]
[{"job_id": "3831d59d83364042b86cec6f45e8a2fa", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fa2cd3f3e80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fa2cd3f3e80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 48.39s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop >= close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))"}]
[{"job_id": "788aa5aa10c647fc97dae5ec98bc6a0f", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 3, "start_pos": [76, 72], "end_pos": [76, 73], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fcb42743df0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fcb42743df0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n>       select_last = rasp.Select(rasp.indices, length ^ 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\nE       TypeError: unsupported operand type(s) for ^: 'SelectorWidth' and 'int'\n\nsource/shuffle_dyck2.py:129: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.53s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 0, -1))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length ^ 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "24b5e38d94a144919c30442d76382862", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 25, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 10, "start_pos": [113, 34], "end_pos": [113, 69], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ss('Attention patterns can currently only average binary variables. Not:', {0, -1})\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.67s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -110,7 +110,7 @@\n         any_negative = any_negative | (balance < 0)\n \n     # Convert to numerical SOp\n-    any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n+    any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative) * -1).named(\n         \"any_negative\"\n     )\n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.GEQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "1ca3113fc53446bab4c64f4af537c443", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_GtE_LtE", "occurrence": 0, "start_pos": [95, 22], "end_pos": [95, 24], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 10, "start_pos": [108, 28], "end_pos": [108, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f140552fe50>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f140552fe50>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n>       assert len(pairs) <= 1\nE       AssertionError\n\nsource/shuffle_dyck2.py:95: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.29s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) <= 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[ 1] < 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n "}]
[{"job_id": "fc1513f254ab42d4877b1616a5fa44f7", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 3, "start_pos": [76, 72], "end_pos": [76, 73], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 2, "start_pos": [76, 76], "end_pos": [76, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.04\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fc1dc203e20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fc1dc203e20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 21.58s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 0, - 0))\n     return pair_balance.named(\"pair_balance\")\n \n "}]
[{"job_id": "103d9f813b7b4db9835418b9f7441122", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [44, 12], "end_pos": [44, 72], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "timeout", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices * -1, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop > open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")"}]
[{"job_id": "bf6208bd09dc4ded85921e2d234ce93f", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceUnaryOperator_USub_Not", "occurrence": 0, "start_pos": [76, 75], "end_pos": [76, 76], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 14, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.94\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f31c511bdf0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f31c511bdf0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 21.82s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, not 1))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.EQ).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "8bd463925c6b466fb74523b66abbe18f", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [45, 63], "end_pos": [45, 64], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [44, 12], "end_pos": [44, 72], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssUnsupported RASP expressions:\nopens: Numerical aggregate only supports 0 as default value.\ncloses: Numerical aggregate only supports 0 as default value.\nopens: Numerical aggregate only supports 0 as default value.\ncloses: Numerical aggregate only supports 0 as default value.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.24s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,8 +41,8 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    prevs = rasp.Select(rasp.indices, rasp.indices * -1, rasp.Comparison.LEQ)\n+    return rasp.numerical(rasp.Aggregate(prevs, bools, default= 1)).named(\"frac_prevs\")\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:"}]
[{"job_id": "b14b17d1c1e54bbfb90c7daa0d49663f", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_BitOr", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 3, "start_pos": [117, 43], "end_pos": [117, 55], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "timeout", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices - 1, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero | (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "43e7e059a80d45a98af1dc22dbf96feb", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 4, "start_pos": [127, 39], "end_pos": [127, 41], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [45, 26], "end_pos": [45, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssUnsupported RASP expressions:\nopens: An aggregate's output encoding must match its input encoding. Input: Encoding.NUMERICAL   Output: Encoding.CATEGORICAL  \ncloses: An aggregate's output encoding must match its input encoding. Input: Encoding.NUMERICAL   Output: Encoding.CATEGORICAL  \nopens: An aggregate's output encoding must match its input encoding. Input: Encoding.NUMERICAL   Output: Encoding.CATEGORICAL  \ncloses: An aggregate's output encoding must match its input encoding. Input: Encoding.NUMERICAL   Output: Encoding.CATEGORICAL  \nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 2.96s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -42,7 +42,7 @@\n     \"\"\"\n     bools = rasp.numerical(bools)\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    return rasp.numerical(rasp.Aggregate(prevs, bools * -1, default=0)).named(\"frac_prevs\")\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance > 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "e16fa0c3882e475f858b161775d674cc", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_GtE_Lt", "occurrence": 0, "start_pos": [95, 22], "end_pos": [95, 24], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fb327e17c10>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fb327e17c10>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n>       assert len(pairs) < 1\nE       AssertionError\n\nsource/shuffle_dyck2.py:95: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.27s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) < 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length & 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "f1ebd57e5bda4a1d889b7b33996114eb", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_Div", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 24, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.51s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative / (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.GT).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "3bff9365f0184ac48cf3a0fa0fd34164", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 3, "start_pos": [45, 26], "end_pos": [45, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssUnsupported RASP expressions:\naggregate: An aggregate's output encoding must match its input encoding. Input: Encoding.CATEGORICAL   Output: Encoding.NUMERICAL  \naggregate: An aggregate's output encoding must match its input encoding. Input: Encoding.CATEGORICAL   Output: Encoding.NUMERICAL  \naggregate: An aggregate's output encoding must match its input encoding. Input: Encoding.CATEGORICAL   Output: Encoding.NUMERICAL  \naggregate: An aggregate's output encoding must match its input encoding. Input: Encoding.CATEGORICAL   Output: Encoding.NUMERICAL  \nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.11s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,8 +41,8 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GT)\n+    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0) * -1).named(\"frac_prevs\")\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:"}]
[{"job_id": "dc6f677a0451404a8ed44f876398ad8c", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 16, "start_pos": [110, 49], "end_pos": [110, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f044a90fe50>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f044a90fe50>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 50.74s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop >= close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance < 1)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "0d89d7fe6947438c894edc066ab9b5c7", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 28, "start_pos": [129, 53], "end_pos": [129, 54], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 21, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f267fb23d60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f267fb23d60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 54.27s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 2, rasp.Comparison.LT).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "5c5a10c791734a5c98c9f994ce0c99be", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 10, "start_pos": [125, 24], "end_pos": [125, 25], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [17, 24], "end_pos": [19, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.98\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f1b3eb4fdc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f1b3eb4fdc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 56.41s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[ -1] == 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "d373f81785da482a9392b2bc89a76ce9", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 2, "start_pos": [76, 76], "end_pos": [76, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f978dd37df0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f978dd37df0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n>       select_last = rasp.Select(rasp.indices, length << 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\nE       TypeError: unsupported operand type(s) for <<: 'SelectorWidth' and 'int'\n\nsource/shuffle_dyck2.py:129: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.37s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, - 0))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length << 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "6ca71da77dea46dfbabd231d7cf6145d", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 11, "start_pos": [108, 28], "end_pos": [108, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f77e2c17e20>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f77e2c17e20>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[ -1] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n>       select_last = rasp.Select(rasp.indices, length ** 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SelectorWidth' and 'int'\n\nsource/shuffle_dyck2.py:129: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.28s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[ -1] < 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length ** 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "0d3f25e39a424104853f31a64ccc9bff", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 4, "start_pos": [129, 30], "end_pos": [129, 42], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f8a4bb5fd30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f8a4bb5fd30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 56.01s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -122,11 +122,11 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] > 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices - 1, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "b489b7110cd84ef984693873364c8ec8", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_BitOr", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 17, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.04\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fb6a102fdf0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fb6a102fdf0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 55.18s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GT).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n@@ -132,7 +132,7 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero | not_has_neg).named(\"shuffle_dyck\")\n \n \n def make_shuffle_dyck2() -> rasp.SOp:"}]
[{"job_id": "084be8084ef942208a2104d4da6de323", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_NotEq", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [45, 63], "end_pos": [45, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssUnsupported RASP expressions:\nopens: Numerical aggregate only supports 0 as default value.\ncloses: Numerical aggregate only supports 0 as default value.\nopens: Numerical aggregate only supports 0 as default value.\ncloses: Numerical aggregate only supports 0 as default value.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.38s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -42,7 +42,7 @@\n     \"\"\"\n     bools = rasp.numerical(bools)\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    return rasp.numerical(rasp.Aggregate(prevs, bools, default= 1)).named(\"frac_prevs\")\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop != open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")"}]
[{"job_id": "957fd3f21643445ead6a7c593b8185f5", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 23, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fb10a643d90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fb10a643d90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 54.46s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GT)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.LEQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "c32f6d4a55974e688385e7187ecb7247", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceUnaryOperator_Invert_USub", "occurrence": 0, "start_pos": [134, 19], "end_pos": [134, 20], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/AddNot", "occurrence": 1, "start_pos": [100, 15], "end_pos": [100, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f71f1b4fdf0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f71f1b4fdf0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n>           assert not len(pair) == 2\nE           AssertionError\n\nsource/shuffle_dyck2.py:100: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.48s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert not len(pair) == 2\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token\n@@ -131,7 +131,7 @@\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n-    not_has_neg = (~has_neg).named(\"not_has_neg\")\n+    not_has_neg = (-has_neg).named(\"not_has_neg\")\n     return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n \n "}]
[{"job_id": "f3edeb554fa94370bf170f9058f31d9c", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_NotEq", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 6, "start_pos": [95, 25], "end_pos": [95, 26], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "timeout", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) >= 2\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] != 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "dff65e598de848b0b64e0561e4000317", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 23, "start_pos": [125, 30], "end_pos": [125, 31], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 4, "start_pos": [70, 17], "end_pos": [70, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ss('Attention patterns can currently only average binary variables. Not:', {0, -1})\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.48s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\") * -1\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] == -1\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "c4aea05be08946e98424e33eefe1ff46", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 11, "start_pos": [125, 30], "end_pos": [125, 31], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 2, "start_pos": [77, 4], "end_pos": [77, 45], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f18363f3ca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f18363f3ca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 48.57s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -74,7 +74,7 @@\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n-    return pair_balance.named(\"pair_balance\")\n+    return pair_balance.named(\"pair_balance\") * -1\n \n \n def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] == 1\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "351116e84eac41e8b4a75a0a732949f6", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_LShift", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Lt", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f5aa635bcd0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f5aa635bcd0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n>           any_negative = any_negative << (balance < 0)\nE           TypeError: unsupported operand type(s) for <<: 'Map' and 'Map'\n\nsource/shuffle_dyck2.py:110: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.36s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative << (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] < 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "c9bb2472d9834db5b4067e39bf290b0d", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_NotEq", "occurrence": 2, "start_pos": [100, 25], "end_pos": [100, 27], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 4, "start_pos": [100, 28], "end_pos": [100, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 49.94s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) != 3\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token"}]
[{"job_id": "7038554d2cb048a691d7868f80643acf", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_GtE_Eq", "occurrence": 0, "start_pos": [95, 22], "end_pos": [95, 24], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f2ee2d23dc0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f2ee2d23dc0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n>       assert len(pairs) == 1\nE       AssertionError\n\nsource/shuffle_dyck2.py:95: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.29s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop > close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) == 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []"}]
[{"job_id": "17d39640745d4091bf6416072891aaa2", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 27, "start_pos": [127, 42], "end_pos": [127, 43], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 4, "start_pos": [100, 28], "end_pos": [100, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7ff34d943d00>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7ff34d943d00>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n>           assert len(pair) == 3\nE           AssertionError\n\nsource/shuffle_dyck2.py:100: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.43s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) == 3\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance == -1)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "ecf032af1c2543baa354d71ac041d583", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_LShift", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 3, "start_pos": [95, 25], "end_pos": [95, 26], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f6e55d5fe20>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f6e55d5fe20>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 0\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n        not_has_neg = (~has_neg).named(\"not_has_neg\")\n>       return (last_zero << not_has_neg).named(\"shuffle_dyck\")\nE       TypeError: unsupported operand type(s) for <<: 'Aggregate' and 'Map'\n\nsource/shuffle_dyck2.py:135: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.16s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) >= 0\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -132,7 +132,7 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero << not_has_neg).named(\"shuffle_dyck\")\n \n \n def make_shuffle_dyck2() -> rasp.SOp:"}]
[{"job_id": "8d97a2ffdee24f70a3a8dba71d1b9cc2", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 22, "start_pos": [125, 30], "end_pos": [125, 31], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 28, "start_pos": [129, 53], "end_pos": [129, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fd838d23d60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fd838d23d60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 46.75s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -122,11 +122,11 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] == 1\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 2, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "0a8986fbedca4884b6cf3f68056e6a87", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_FloorDiv", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 8, "start_pos": [110, 49], "end_pos": [110, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f9be7a33d60>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f9be7a33d60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 1)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n>           all_zero = all_zero // (balance == 0)\nE           TypeError: unsupported operand type(s) for //: 'Map' and 'Map'\n\nsource/shuffle_dyck2.py:127: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.29s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance < 1)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero // (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "deeb5732b6744d8fb3a5ca7a55c15397", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Lt_LtE", "occurrence": 1, "start_pos": [110, 47], "end_pos": [110, 48], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 8, "start_pos": [110, 49], "end_pos": [110, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f47f301beb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f47f301beb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 47.72s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance <= 1)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "facd6db70d5f4c25b89aa489f9895d50", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_FloorDiv", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 4, "start_pos": [127, 39], "end_pos": [127, 41], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fea81e4be50>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fea81e4be50>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n>           all_zero = all_zero // (balance >= 0)\nE           TypeError: unsupported operand type(s) for //: 'Map' and 'Map'\n\nsource/shuffle_dyck2.py:127: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.45s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero // (balance >= 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "10bdd6b4ac374695a31dc9c3f8fc9a40", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_Mod", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [44, 12], "end_pos": [44, 72], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7efd06343cd0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7efd06343cd0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n>           any_negative = any_negative % (balance < 0)\nE           TypeError: unsupported operand type(s) for %: 'Map' and 'Map'\n\nsource/shuffle_dyck2.py:110: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.29s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices * -1, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative % (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "cfe7639b00f6461d9d68f2c70fb5f77c", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Add", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 12, "start_pos": [108, 33], "end_pos": [108, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f078eb5fdc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f078eb5fdc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 50.32s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] < 1\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero + (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "03a3b05edd9c48ffbeff803325f8af05", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_FloorDiv", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 8, "start_pos": [110, 49], "end_pos": [110, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f769fe03cd0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f769fe03cd0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 1)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n        not_has_neg = (~has_neg).named(\"not_has_neg\")\n>       return (last_zero // not_has_neg).named(\"shuffle_dyck\")\nE       TypeError: unsupported operand type(s) for //: 'Aggregate' and 'Map'\n\nsource/shuffle_dyck2.py:135: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.26s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance < 1)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -132,7 +132,7 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero // not_has_neg).named(\"shuffle_dyck\")\n \n \n def make_shuffle_dyck2() -> rasp.SOp:"}]
[{"job_id": "6a8f1e065693477ea7efc6b19f831a44", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 13, "start_pos": [127, 42], "end_pos": [127, 43], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 3, "start_pos": [135, 4], "end_pos": [135, 58], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7febbba43e20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7febbba43e20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 48.57s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance == 1)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n@@ -132,7 +132,7 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero & not_has_neg).named(\"shuffle_dyck\") * -1\n \n \n def make_shuffle_dyck2() -> rasp.SOp:"}]
[{"job_id": "a0d29e0991024ddfa539069cb260fba6", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 10, "start_pos": [108, 28], "end_pos": [108, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 4, "start_pos": [117, 17], "end_pos": [119, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 53.41s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[ 1] < 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices * -1, rasp.indices, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "8fbb2ace9fe14e8588d4f1b7ff90b3c1", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 3, "start_pos": [95, 25], "end_pos": [95, 26], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 7, "start_pos": [109, 28], "end_pos": [109, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fc17bbffd30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fc17bbffd30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 38.75s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) >= 2\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -106,7 +106,7 @@\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 2:]:\n         any_negative = any_negative | (balance < 0)\n \n     # Convert to numerical SOp"}]
[{"job_id": "52f509363e664eeba4cc2b87437d1789", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Div", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 6, "start_pos": [108, 33], "end_pos": [108, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.43s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] < -1\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -132,7 +132,7 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero / not_has_neg).named(\"shuffle_dyck\")\n \n \n def make_shuffle_dyck2() -> rasp.SOp:"}]
[{"job_id": "a70de6da119b48c28e4ee8e37b7df338", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_LtE", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [44, 24], "end_pos": [44, 36], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "timeout", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices + 1, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop <= open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")"}]
[{"job_id": "781041bbd4fe443289b61cb403044773", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 9, "start_pos": [113, 19], "end_pos": [115, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fec193efe20>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fec193efe20>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        ) * -1\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n>       select_last = rasp.Select(rasp.indices, length % 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\nE       TypeError: unsupported operand type(s) for %: 'SelectorWidth' and 'int'\n\nsource/shuffle_dyck2.py:129: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.33s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -112,7 +112,7 @@\n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n         \"any_negative\"\n-    )\n+    ) * -1\n \n     select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n         \"select_all\"\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length % 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "87f348bc9e6e411495e757f1266899e3", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Is", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 6, "start_pos": [73, 18], "end_pos": [73, 73], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f1a96d5bac0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f1a96d5bac0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\nsource/shuffle_dyck2.py:102: in make_shuffle_dyck\n    balance = make_pair_balance(\nsource/shuffle_dyck2.py:70: in make_pair_balance\n    bools_open = rasp.numerical(sop is open_token).named(\"bools_open\")\n../../.venv/lib/python3.10/site-packages/tracr/rasp/rasp.py:721: in numerical\n    return annotate(sop, encoding=Encoding.NUMERICAL)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nexpr = False, annotations = {'encoding': <Encoding.NUMERICAL: 'numerical'>}\n\n    def annotate(expr: RASPExprT, **annotations) -> RASPExprT:\n      \"\"\"Creates a new expr with added annotations.\"\"\"\n>     new = expr.copy()\nE     AttributeError: 'bool' object has no attribute 'copy'\n\n../../.venv/lib/python3.10/site-packages/tracr/rasp/rasp.py:160: AttributeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AttributeEr...\n==================== 2 skipped, 1 warning, 1 error in 3.52s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -67,10 +67,10 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop is open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\") * -1\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))"}]
[{"job_id": "0e9c260da73a4fa98b3072cb96cd45a0", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_IsNot", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_GtE_Eq", "occurrence": 0, "start_pos": [95, 22], "end_pos": [95, 24], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f489331beb0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f489331beb0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n>       assert len(pairs) == 1\nE       AssertionError\n\nsource/shuffle_dyck2.py:95: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.24s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop is not open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) == 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []"}]
[{"job_id": "d1f2814ba9104cbbb5e873c4541e1c22", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 10, "start_pos": [113, 34], "end_pos": [113, 69], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ss('Attention patterns can currently only average binary variables. Not:', {0, -1})\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.32s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop > close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n@@ -110,7 +110,7 @@\n         any_negative = any_negative | (balance < 0)\n \n     # Convert to numerical SOp\n-    any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n+    any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative) * -1).named(\n         \"any_negative\"\n     )\n "}]
[{"job_id": "5a7087fcdb2a47398c586637faa46f8a", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_NotEq", "occurrence": 2, "start_pos": [100, 25], "end_pos": [100, 27], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 10, "start_pos": [125, 24], "end_pos": [125, 25], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fbfebd47d60>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fbfebd47d60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n>           assert len(pair) != 2\nE           AssertionError\n\nsource/shuffle_dyck2.py:100: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.25s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) != 2\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[ -1] == 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "2b1fc78fc95e42ffa6ce9e60085730f6", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_NotEq", "occurrence": 4, "start_pos": [127, 39], "end_pos": [127, 41], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fdff320fe20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fdff320fe20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 53.57s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop >= open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance != 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "9c57d4cf863f4175b14a5621c170d463", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Lt_LtE", "occurrence": 1, "start_pos": [110, 47], "end_pos": [110, 48], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 5, "start_pos": [76, 76], "end_pos": [76, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f97b903be20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f97b903be20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 23.59s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, - 0))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance <= 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "29cc1c9e38784bbc877230071aeddcc6", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_BitXor", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 4, "start_pos": [127, 39], "end_pos": [127, 41], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f910d833d60>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f910d833d60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n>           any_negative = any_negative ^ (balance < 0)\nE           TypeError: unsupported operand type(s) for ^: 'Map' and 'Map'\n\nsource/shuffle_dyck2.py:110: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.33s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative ^ (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance >= 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "176e4716872945f7848f2d21fdd8f412", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_GtE_NotEq", "occurrence": 0, "start_pos": [95, 22], "end_pos": [95, 24], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 2, "start_pos": [76, 76], "end_pos": [76, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.94\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f271c35be20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f271c35be20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 23.53s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, - 0))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) != 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []"}]
[{"job_id": "3c1617be034040a6a25cc6d965181f0a", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [44, 24], "end_pos": [44, 36], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [44, 12], "end_pos": [44, 72], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "timeout", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices - 1, rasp.indices * -1, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n "}]
[{"job_id": "1a7730cfe6534f6bb3506251207ab34f", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_BitAnd", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 25, "start_pos": [126, 28], "end_pos": [126, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "timeout", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative & (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -123,7 +123,7 @@\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 0:]:\n         all_zero = all_zero & (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named("}]
[{"job_id": "34c18ad9acbd4caeb0537b1700580f75", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_BitXor", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 18, "start_pos": [120, 78], "end_pos": [120, 79], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f1b0b20be80>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f1b0b20be80>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default= 1)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n>           all_zero = all_zero ^ (balance == 0)\nE           TypeError: unsupported operand type(s) for ^: 'Map' and 'Map'\n\nsource/shuffle_dyck2.py:127: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.25s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -117,14 +117,14 @@\n     select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n-    has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n+    has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default= 1)).named(\n         \"has_neg\"\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero ^ (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "73d1e35e59934b52a9e79dd23d1b52fa", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Lt_Gt", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 16, "start_pos": [110, 49], "end_pos": [110, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f86e3f1bf40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f86e3f1bf40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 48.89s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -105,9 +105,9 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] > 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance < 1)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "4f07adbace794edaad983e37264bf5a3", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 25, "start_pos": [126, 28], "end_pos": [126, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 2, "start_pos": [117, 29], "end_pos": [117, 41], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "timeout", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices + 1, rasp.indices, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n@@ -123,7 +123,7 @@\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 0:]:\n         all_zero = all_zero & (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named("}]
[{"job_id": "8bdf19e4a8c246c0b5eaf99d2bb97492", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 9, "start_pos": [120, 78], "end_pos": [120, 79], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fd291c2bdf0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fd291c2bdf0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default= -1)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n>       select_last = rasp.Select(rasp.indices, length << 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\nE       TypeError: unsupported operand type(s) for <<: 'SelectorWidth' and 'int'\n\nsource/shuffle_dyck2.py:129: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.36s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -117,7 +117,7 @@\n     select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n-    has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n+    has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default= -1)).named(\n         \"has_neg\"\n     )\n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length << 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "908b2d5352a04472b0e7903b41eb667f", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 7, "start_pos": [109, 28], "end_pos": [109, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 2, "start_pos": [45, 11], "end_pos": [45, 86], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "timeout", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -42,7 +42,7 @@\n     \"\"\"\n     bools = rasp.numerical(bools)\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\") * -1\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:\n@@ -106,7 +106,7 @@\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 0:]:\n         any_negative = any_negative | (balance < 0)\n \n     # Convert to numerical SOp"}]
[{"job_id": "42c2f56366c94b92a56d6378ddad75dd", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Sub", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 2, "start_pos": [100, 25], "end_pos": [100, 27], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fdbdd943d90>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fdbdd943d90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n>           assert len(pair) > 2\nE           AssertionError\n\nsource/shuffle_dyck2.py:100: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.27s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) > 2\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero - (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "acd2a69268cf4a5b871205ae0d246394", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Lt_LtE", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 12, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f0c29c07c10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f0c29c07c10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 46.26s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.NEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] <= 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n "}]
[{"job_id": "3d9364c0852f48f0b473ca8c38edd151", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 2, "start_pos": [100, 25], "end_pos": [100, 27], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7efdc764bd90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7efdc764bd90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 48.41s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.EQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) >= 2\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token"}]
[{"job_id": "b8b6ebf4c9e94a70ad31827d029b39c5", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_BitXor", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7ff30be43d90>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7ff30be43d90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices, length / 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n        not_has_neg = (~has_neg).named(\"not_has_neg\")\n>       return (last_zero ^ not_has_neg).named(\"shuffle_dyck\")\nE       TypeError: unsupported operand type(s) for ^: 'Aggregate' and 'Map'\n\nsource/shuffle_dyck2.py:135: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.49s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -126,13 +126,13 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length / 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero ^ not_has_neg).named(\"shuffle_dyck\")\n \n \n def make_shuffle_dyck2() -> rasp.SOp:"}]
[{"job_id": "153f8894b7e748e397d7e9766d7af693", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [45, 63], "end_pos": [45, 64], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 14, "start_pos": [129, 53], "end_pos": [129, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssUnsupported RASP expressions:\nopens: Numerical aggregate only supports 0 as default value.\ncloses: Numerical aggregate only supports 0 as default value.\nopens: Numerical aggregate only supports 0 as default value.\ncloses: Numerical aggregate only supports 0 as default value.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.42s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -42,7 +42,7 @@\n     \"\"\"\n     bools = rasp.numerical(bools)\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    return rasp.numerical(rasp.Aggregate(prevs, bools, default= 1)).named(\"frac_prevs\")\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 2, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "507fb940d3e245a7a9d2f5d1146e58f6", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Lt_Eq", "occurrence": 1, "start_pos": [110, 47], "end_pos": [110, 48], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fcec2f5bc40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fcec2f5bc40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 51.16s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance == 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length * 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "dc2b14b6dd2b4cf9a843229f9e05d534", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 15, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [45, 63], "end_pos": [45, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssUnsupported RASP expressions:\nopens: Numerical aggregate only supports 0 as default value.\ncloses: Numerical aggregate only supports 0 as default value.\nopens: Numerical aggregate only supports 0 as default value.\ncloses: Numerical aggregate only supports 0 as default value.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.54s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -42,7 +42,7 @@\n     \"\"\"\n     bools = rasp.numerical(bools)\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    return rasp.numerical(rasp.Aggregate(prevs, bools, default= -1)).named(\"frac_prevs\")\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LT).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "3848387f2b7340e69d22c2fd8692498e", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitAnd", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.9\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7ff5fe717d00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7ff5fe717d00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 39.55s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length & 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "110c627f045d4294a14370d345712709", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 11, "start_pos": [125, 30], "end_pos": [125, 31], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 4, "start_pos": [139, 4], "end_pos": [139, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fc1e7243ca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fc1e7243ca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 55.04s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] == 1\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n@@ -136,5 +136,5 @@\n \n \n def make_shuffle_dyck2() -> rasp.SOp:\n-    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n+    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\") * -1\n "}]
[{"job_id": "2e183301cfe243d69efcf083fd205824", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Mul", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 26, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f5d46b47d60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f5d46b47d60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 50.74s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -126,13 +126,13 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.NEQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero * not_has_neg).named(\"shuffle_dyck\")\n \n \n def make_shuffle_dyck2() -> rasp.SOp:"}]
[{"job_id": "d3c35441e7b846ef8b14ce3115cd26a8", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 14, "start_pos": [109, 28], "end_pos": [109, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 1, "start_pos": [120, 29], "end_pos": [120, 80], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssUnsupported RASP expressions:\nhas_neg: An aggregate's output encoding must match its input encoding. Input: Encoding.NUMERICAL   Output: Encoding.CATEGORICAL  \nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.52s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -106,7 +106,7 @@\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 2:]:\n         any_negative = any_negative | (balance < 0)\n \n     # Convert to numerical SOp\n@@ -117,7 +117,7 @@\n     select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n-    has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n+    has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative * -1, default=0)).named(\n         \"has_neg\"\n     )\n "}]
[{"job_id": "00f405c0b94741e4ba65e745ce3021e7", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceUnaryOperator_Invert_UAdd", "occurrence": 0, "start_pos": [134, 19], "end_pos": [134, 20], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [45, 26], "end_pos": [45, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f481aa47d60>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f481aa47d60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n>       not_has_neg = (+has_neg).named(\"not_has_neg\")\nE       TypeError: bad operand type for unary +: 'Aggregate'\n\nsource/shuffle_dyck2.py:134: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.24s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -42,7 +42,7 @@\n     \"\"\"\n     bools = rasp.numerical(bools)\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    return rasp.numerical(rasp.Aggregate(prevs, bools * -1, default=0)).named(\"frac_prevs\")\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:\n@@ -131,7 +131,7 @@\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n-    not_has_neg = (~has_neg).named(\"not_has_neg\")\n+    not_has_neg = (+has_neg).named(\"not_has_neg\")\n     return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n \n "}]
[{"job_id": "dff2a8e03cec404ba66517dab4b0556c", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 6, "start_pos": [129, 18], "end_pos": [131, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f0e23043df0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f0e23043df0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n>       select_last = rasp.Select(rasp.indices * -1, length % 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\nE       TypeError: unsupported operand type(s) for %: 'SelectorWidth' and 'int'\n\nsource/shuffle_dyck2.py:129: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.30s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices * -1, length % 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "067665f3dbc749b69d87e0934c2d64fe", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 18, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 8, "start_pos": [76, 19], "end_pos": [76, 79], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.9\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fc642543dc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fc642543dc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 49.39s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1)) * -1\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GEQ).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "6a1d60205dd641b29255dbc574af128e", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_NotEq", "occurrence": 4, "start_pos": [127, 39], "end_pos": [127, 41], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 11, "start_pos": [108, 28], "end_pos": [108, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.86\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fd79fe43d30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fd79fe43d30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 48.32s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[ -1] < 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance != 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "2f8abaa30da743cb9e579eca5ec7e3cb", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 2, "start_pos": [100, 25], "end_pos": [100, 27], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 11, "start_pos": [108, 28], "end_pos": [108, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 53.06s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) >= 2\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[ -1] < 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n "}]
[{"job_id": "72553f9811154b9493580401d21b024c", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 2, "start_pos": [100, 25], "end_pos": [100, 27], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 12, "start_pos": [108, 33], "end_pos": [108, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fda47fffcd0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fda47fffcd0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n>           assert len(pair) > 2\nE           AssertionError\n\nsource/shuffle_dyck2.py:100: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.24s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) > 2\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] < 1\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n "}]
[{"job_id": "8e5ab09b2a1646f9b301fa497c565796", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Pow", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f0b8591fe80>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f0b8591fe80>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n>           all_zero = all_zero ** (balance == 0)\nE           TypeError: unsupported operand type(s) for ** or pow(): 'Map' and 'Map'\n\nsource/shuffle_dyck2.py:127: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.35s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -124,9 +124,9 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero ** (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length / 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "c775ae680fa7425e999ae027212364bf", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_BitXor", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_LtE", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f1532fefd60>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f1532fefd60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] <= 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n        not_has_neg = (~has_neg).named(\"not_has_neg\")\n>       return (last_zero ^ not_has_neg).named(\"shuffle_dyck\")\nE       TypeError: unsupported operand type(s) for ^: 'Aggregate' and 'Map'\n\nsource/shuffle_dyck2.py:135: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.29s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] <= 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n@@ -132,7 +132,7 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero ^ not_has_neg).named(\"shuffle_dyck\")\n \n \n def make_shuffle_dyck2() -> rasp.SOp:"}]
[{"job_id": "d76609ed33f44aae832254fe90cc185b", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_Div", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_NotEq", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.56s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop != close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative / (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "57f8a663fc3049e7b613e90de8fcec00", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Lt_NotEq", "occurrence": 1, "start_pos": [110, 47], "end_pos": [110, 48], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f1d79e07d60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f1d79e07d60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 47.51s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop >= close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance != 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "0cc6b38ce41b40d88150c085cc4df4d4", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_GtE_Lt", "occurrence": 0, "start_pos": [95, 22], "end_pos": [95, 24], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 14, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f22c93ffdc0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f22c93ffdc0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n>       assert len(pairs) < 1\nE       AssertionError\n\nsource/shuffle_dyck2.py:95: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.29s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) < 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.EQ).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "b7797e2286cb4d6385c06f8695ccf5d9", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_RShift", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f118502fd90>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f118502fd90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n        not_has_neg = (~has_neg).named(\"not_has_neg\")\n>       return (last_zero >> not_has_neg).named(\"shuffle_dyck\")\nE       TypeError: unsupported operand type(s) for >>: 'Aggregate' and 'Map'\n\nsource/shuffle_dyck2.py:135: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.31s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -132,7 +132,7 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero >> not_has_neg).named(\"shuffle_dyck\")\n \n \n def make_shuffle_dyck2() -> rasp.SOp:"}]
[{"job_id": "43d30395abe748d1b48ac2b9bf818b8d", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_LShift", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f9873c2fe80>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f9873c2fe80>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n>           all_zero = all_zero << (balance == 0)\nE           TypeError: unsupported operand type(s) for <<: 'Map' and 'Map'\n\nsource/shuffle_dyck2.py:127: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.32s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop >= close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero << (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "f2b014de90b241f3a6a4855b89c8d799", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_BitOr", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 17, "start_pos": [110, 49], "end_pos": [110, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.76\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f3fa7937df0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f3fa7937df0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 46.68s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance < -1)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero | (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "87b18be6f9064dfa9740e91537fdd9b3", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ZeroIterationForLoop", "occurrence": 1, "start_pos": [109, 19], "end_pos": [109, 31], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 3, "start_pos": [117, 43], "end_pos": [117, 55], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f15d7d1fb20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f15d7d1fb20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 36.01s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -106,7 +106,7 @@\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n-    for balance in balances[1:]:\n+    for balance in []:\n         any_negative = any_negative | (balance < 0)\n \n     # Convert to numerical SOp\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices + 1, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "a67afcc538af425999d598581405c5e3", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_RShift", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 3, "start_pos": [76, 72], "end_pos": [76, 73], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7ff2d3613dc0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7ff2d3613dc0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n>       select_last = rasp.Select(rasp.indices, length >> 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\nE       TypeError: unsupported operand type(s) for >>: 'SelectorWidth' and 'int'\n\nsource/shuffle_dyck2.py:129: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.25s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 0, -1))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length >> 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "6cf52a6bb58649a6ab9f4d2bfb6cfc0a", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 13, "start_pos": [127, 42], "end_pos": [127, 43], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 5, "start_pos": [71, 12], "end_pos": [71, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssUnsupported RASP expressions:\nbalance_(): LinearSequenceMap only supports numerical inputs/outputs.\nbalance_{}: LinearSequenceMap only supports numerical inputs/outputs.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.53s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -68,7 +68,7 @@\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n-    opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n+    opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\") * -1\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance == 1)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "ba5fa8ff6d2641aaa917c3093bed46cf", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_LtE", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 11, "start_pos": [120, 14], "end_pos": [122, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 55.49s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -119,10 +119,10 @@\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n         \"has_neg\"\n-    )\n+    ) * -1\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] <= 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "67f22b00d67b41a9a895b5996dd788e6", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 24, "start_pos": [126, 28], "end_pos": [126, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 2, "start_pos": [77, 4], "end_pos": [77, 45], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fa125157d90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fa125157d90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 44.11s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -74,7 +74,7 @@\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n-    return pair_balance.named(\"pair_balance\")\n+    return pair_balance.named(\"pair_balance\") * -1\n \n \n def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n@@ -123,7 +123,7 @@\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 2:]:\n         all_zero = all_zero & (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named("}]
[{"job_id": "997da7769937400f8b705f9777350cf1", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ZeroIterationForLoop", "occurrence": 2, "start_pos": [126, 19], "end_pos": [126, 31], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7ff79bd37d30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7ff79bd37d30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 38.84s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.EQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -123,7 +123,7 @@\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n-    for balance in balances[1:]:\n+    for balance in []:\n         all_zero = all_zero & (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named("}]
[{"job_id": "86cd015deb6346ee96a651f2d61640db", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 5, "start_pos": [71, 12], "end_pos": [71, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssUnsupported RASP expressions:\nbalance_(): LinearSequenceMap only supports numerical inputs/outputs.\nbalance_{}: LinearSequenceMap only supports numerical inputs/outputs.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.30s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -68,7 +68,7 @@\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n-    opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n+    opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\") * -1\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length * 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "a8cc84e2634f42e1b961659d288f3f69", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Add", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 4, "start_pos": [129, 30], "end_pos": [129, 42], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "timeout", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -124,9 +124,9 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero + (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices - 1, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "ed5b9ccae47749189d88f9b0c6dc84ad", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 2, "start_pos": [117, 29], "end_pos": [117, 41], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 3, "start_pos": [45, 26], "end_pos": [45, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssUnsupported RASP expressions:\naggregate: An aggregate's output encoding must match its input encoding. Input: Encoding.CATEGORICAL   Output: Encoding.NUMERICAL  \naggregate: An aggregate's output encoding must match its input encoding. Input: Encoding.CATEGORICAL   Output: Encoding.NUMERICAL  \naggregate: An aggregate's output encoding must match its input encoding. Input: Encoding.CATEGORICAL   Output: Encoding.NUMERICAL  \naggregate: An aggregate's output encoding must match its input encoding. Input: Encoding.CATEGORICAL   Output: Encoding.NUMERICAL  \nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.70s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -42,7 +42,7 @@\n     \"\"\"\n     bools = rasp.numerical(bools)\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0) * -1).named(\"frac_prevs\")\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices - 1, rasp.indices, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "60224f7da1354dd381783c706ca6bc7a", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_Pow", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 4, "start_pos": [70, 17], "end_pos": [70, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f81ffdffd90>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f81ffdffd90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n>           any_negative = any_negative ** (balance < 0)\nE           TypeError: unsupported operand type(s) for ** or pow(): 'Map' and 'Map'\n\nsource/shuffle_dyck2.py:110: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.52s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\") * -1\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative ** (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "31dfc47e26f5416792e4898083c30b71", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_FloorDiv", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 3, "start_pos": [95, 25], "end_pos": [95, 26], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f32b9b5bd30>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f32b9b5bd30>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 0\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n>       select_last = rasp.Select(rasp.indices, length // 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\nE       TypeError: unsupported operand type(s) for //: 'SelectorWidth' and 'int'\n\nsource/shuffle_dyck2.py:129: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.28s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) >= 0\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length // 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "637003c17c72442f935931b815d8de79", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_BitAnd", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceUnaryOperator_USub_Not", "occurrence": 0, "start_pos": [76, 75], "end_pos": [76, 76], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.94\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f9d5b553dc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f9d5b553dc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 20.94s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, not 1))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative & (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "5e8acaf621d24b7c8017a93d1028560b", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_GtE_Lt", "occurrence": 0, "start_pos": [95, 22], "end_pos": [95, 24], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7efe1ef5feb0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7efe1ef5feb0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n>       assert len(pairs) < 1\nE       AssertionError\n\nsource/shuffle_dyck2.py:95: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.26s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.EQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) < 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []"}]
[{"job_id": "888181dedaae4c429c28c70d90c7eb79", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 4, "start_pos": [139, 4], "end_pos": [139, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fa4cc947d90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fa4cc947d90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 34.16s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop > close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n@@ -136,5 +136,5 @@\n \n \n def make_shuffle_dyck2() -> rasp.SOp:\n-    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n+    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\") * -1\n "}]
[{"job_id": "5f89e116cf1748c097e026486041e6be", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 17, "start_pos": [110, 49], "end_pos": [110, 50], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 28, "start_pos": [129, 53], "end_pos": [129, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.92\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f5e93a23ca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f5e93a23ca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 47.50s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance < -1)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 2, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "74e943fcc9e3408f93acf2f5f0ac1142", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Lt", "occurrence": 2, "start_pos": [100, 25], "end_pos": [100, 27], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 15, "start_pos": [109, 28], "end_pos": [109, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f68d0d33e50>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f68d0d33e50>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n>           assert len(pair) < 2\nE           AssertionError\n\nsource/shuffle_dyck2.py:100: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.40s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) < 2\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token\n@@ -106,7 +106,7 @@\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 0:]:\n         any_negative = any_negative | (balance < 0)\n \n     # Convert to numerical SOp"}]
[{"job_id": "576af7052aeb42adbe9d96f783ef2ed7", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 20, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 10, "start_pos": [125, 24], "end_pos": [125, 25], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.7\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f945291be50>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f945291be50>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 55.75s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.FALSE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[ -1] == 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "77f11808a0ce4096ac66cecfc3c9fb42", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Lt", "occurrence": 2, "start_pos": [100, 25], "end_pos": [100, 27], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 7, "start_pos": [74, 13], "end_pos": [74, 73], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f768d32bc70>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f768d32bc70>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n>           assert len(pair) < 2\nE           AssertionError\n\nsource/shuffle_dyck2.py:100: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 2.97s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -71,7 +71,7 @@\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n-    closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n+    closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\") * -1\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n     return pair_balance.named(\"pair_balance\")\n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) < 2\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token"}]
[{"job_id": "3ae0f861fa464a4dbbf1eecd5c4235d9", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 18, "start_pos": [120, 78], "end_pos": [120, 79], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 4, "start_pos": [139, 4], "end_pos": [139, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssUnsupported RASP expressions:\nhas_neg: Numerical aggregate only supports 0 as default value.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.36s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -117,7 +117,7 @@\n     select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n-    has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n+    has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default= 1)).named(\n         \"has_neg\"\n     )\n \n@@ -136,5 +136,5 @@\n \n \n def make_shuffle_dyck2() -> rasp.SOp:\n-    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n+    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\") * -1\n "}]
[{"job_id": "f11993d30cdd4d80a65c311764f63f7f", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Pow", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 8, "start_pos": [110, 49], "end_pos": [110, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f951964fc10>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f951964fc10>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 1)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n>           all_zero = all_zero ** (balance == 0)\nE           TypeError: unsupported operand type(s) for ** or pow(): 'Map' and 'Map'\n\nsource/shuffle_dyck2.py:127: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.22s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance < 1)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero ** (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "f6e92c338e2c46c5a80520a1f6547700", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 2, "start_pos": [76, 76], "end_pos": [76, 77], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [45, 63], "end_pos": [45, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssUnsupported RASP expressions:\nopens: Numerical aggregate only supports 0 as default value.\ncloses: Numerical aggregate only supports 0 as default value.\nopens: Numerical aggregate only supports 0 as default value.\ncloses: Numerical aggregate only supports 0 as default value.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.64s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -42,7 +42,7 @@\n     \"\"\"\n     bools = rasp.numerical(bools)\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    return rasp.numerical(rasp.Aggregate(prevs, bools, default= -1)).named(\"frac_prevs\")\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, - 2))\n     return pair_balance.named(\"pair_balance\")\n \n "}]
[{"job_id": "4d097863cc2f4e349ddf200ca931565f", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Mul", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Lt_NotEq", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f85e251bd60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f85e251bd60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 53.29s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] != 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero * (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "4f8522c983134a40ac265c015856ed64", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Add", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.88\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f472a51fe80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f472a51fe80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 53.49s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GT)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero + (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "fb9a19690e21457ca85627c5f50160f0", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceUnaryOperator_Invert_Not", "occurrence": 0, "start_pos": [134, 19], "end_pos": [134, 20], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f331f643d30>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f331f643d30>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n>       not_has_neg = (not has_neg).named(\"not_has_neg\")\nE       AttributeError: 'bool' object has no attribute 'named'\n\nsource/shuffle_dyck2.py:134: AttributeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AttributeEr...\n==================== 2 skipped, 1 warning, 1 error in 3.28s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LT)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -131,7 +131,7 @@\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n-    not_has_neg = (~has_neg).named(\"not_has_neg\")\n+    not_has_neg = (not has_neg).named(\"not_has_neg\")\n     return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n \n "}]
[{"job_id": "816eaf3d70664cc1934a28564d315be5", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Sub", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 4, "start_pos": [100, 28], "end_pos": [100, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f8e6b243df0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f8e6b243df0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n>           assert len(pair) == 1\nE           AssertionError\n\nsource/shuffle_dyck2.py:100: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.38s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) == 1\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero - (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "067fd6297de345c4a51253cb3c63fe65", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_NotEq", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 3, "start_pos": [95, 25], "end_pos": [95, 26], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.94\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fb704c2bdc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fb704c2bdc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 53.07s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) >= 0\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] != 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "c0a58530cd3c4e13abececa633c9c0f7", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 22, "start_pos": [125, 30], "end_pos": [125, 31], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f414a72bca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f414a72bca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 38.22s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop > close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] == 1\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "78532dc51ffd4799939763bb488f8559", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Lt_NotEq", "occurrence": 1, "start_pos": [110, 47], "end_pos": [110, 48], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [44, 38], "end_pos": [44, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "timeout", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices - 1, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance != 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "a3eb220c4e4d4faa93efb444c87f2d2f", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 19, "start_pos": [120, 78], "end_pos": [120, 79], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 14, "start_pos": [129, 53], "end_pos": [129, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssUnsupported RASP expressions:\nhas_neg: Numerical aggregate only supports 0 as default value.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.67s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -117,7 +117,7 @@\n     select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n-    has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n+    has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default= -1)).named(\n         \"has_neg\"\n     )\n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 0, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "b1822c2c385b47508041ce03bc9ebadf", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_LShift", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [44, 12], "end_pos": [44, 72], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fd67b7f3ee0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fd67b7f3ee0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n>           all_zero = all_zero << (balance == 0)\nE           TypeError: unsupported operand type(s) for <<: 'Map' and 'Map'\n\nsource/shuffle_dyck2.py:127: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.21s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices * -1, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero << (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "bd58b48013bb4835850070b8b079483b", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_BitXor", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 25, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f80f581fd30>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f80f581fd30>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n>           all_zero = all_zero ^ (balance == 0)\nE           TypeError: unsupported operand type(s) for ^: 'Map' and 'Map'\n\nsource/shuffle_dyck2.py:127: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.27s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -124,9 +124,9 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero ^ (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.GEQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "ec821227494441c89d13fa6a69637f20", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 10, "start_pos": [125, 24], "end_pos": [125, 25], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.88\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f656655fdc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f656655fdc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 45.77s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[ -1] == 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "5eb9f3ddac9c4d1188101bc2a1c99c65", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 24, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 7, "start_pos": [74, 13], "end_pos": [74, 73], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssUnsupported RASP expressions:\nbalance_(): LinearSequenceMap only supports numerical inputs/outputs.\nbalance_{}: LinearSequenceMap only supports numerical inputs/outputs.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.19s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -71,7 +71,7 @@\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n-    closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n+    closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\") * -1\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n     return pair_balance.named(\"pair_balance\")\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.GT).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "2253beb206734d48901eac8b80b2e4f9", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_BitXor", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 4, "start_pos": [129, 30], "end_pos": [129, 42], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f022192fe50>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f022192fe50>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n>           all_zero = all_zero ^ (balance == 0)\nE           TypeError: unsupported operand type(s) for ^: 'Map' and 'Map'\n\nsource/shuffle_dyck2.py:127: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.25s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -124,9 +124,9 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero ^ (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices - 1, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "557683da74294ac2bee40d38e1fc6ed5", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 8, "start_pos": [100, 28], "end_pos": [100, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 5, "start_pos": [71, 12], "end_pos": [71, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f82c55e3d90>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f82c55e3d90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n>           assert len(pair) == 3\nE           AssertionError\n\nsource/shuffle_dyck2.py:100: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.28s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -68,7 +68,7 @@\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n-    opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n+    opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\") * -1\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) == 3\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token"}]
[{"job_id": "b263a3803df64b789f8048e632c22ed0", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 14, "start_pos": [129, 53], "end_pos": [129, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f90a4c03d60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f90a4c03d60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 45.17s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GT)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 2, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "6eb684f74aba40639a17d62023eec4cb", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 5, "start_pos": [108, 28], "end_pos": [108, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.98\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fdd3dfefee0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fdd3dfefee0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 50.65s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[ 1] < 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] >= 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "bed0f61497d84b6cae0aff37aac31cc3", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f9681563dc0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f9681563dc0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n>       select_last = rasp.Select(rasp.indices, length ** 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SelectorWidth' and 'int'\n\nsource/shuffle_dyck2.py:129: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.41s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.EQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length ** 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "54937a77d2db47b28343260ea6613beb", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 2, "start_pos": [76, 72], "end_pos": [76, 73], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 4, "start_pos": [100, 28], "end_pos": [100, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f378ff37e80>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f378ff37e80>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n>           assert len(pair) == 1\nE           AssertionError\n\nsource/shuffle_dyck2.py:100: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.28s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 2, -1))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) == 1\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token"}]
[{"job_id": "972fce107993418987d239e53963f84e", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_BitXor", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_LtE", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7ff70af5be80>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7ff70af5be80>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n>           all_zero = all_zero ^ (balance == 0)\nE           TypeError: unsupported operand type(s) for ^: 'Map' and 'Map'\n\nsource/shuffle_dyck2.py:127: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.22s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop <= close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero ^ (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "c987c043b8a14374974d19977566e4f6", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 6, "start_pos": [108, 33], "end_pos": [108, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f64d943bcd0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f64d943bcd0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 48.89s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] < 1\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n "}]
[{"job_id": "4da84b3592134f908cf5a2271a9743a5", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_FloorDiv", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 4, "start_pos": [100, 28], "end_pos": [100, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f3c711efe80>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f3c711efe80>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n>           assert len(pair) == 3\nE           AssertionError\n\nsource/shuffle_dyck2.py:100: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.13s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) == 3\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero // (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "f7ff830a474f4f4681d91cf8db86edad", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f120cd3be50>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f120cd3be50>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 53.05s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.EQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n "}]
[{"job_id": "7ca3ff236b4a4967ace6497ffc9fc90b", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 11, "start_pos": [125, 30], "end_pos": [125, 31], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fd439343d00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fd439343d00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 50.87s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -122,11 +122,11 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] == 1\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length / 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "f891c39e31d04ba9a7b2cac0838011eb", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 3, "start_pos": [135, 4], "end_pos": [135, 58], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.78\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fe286823dc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fe286823dc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 57.05s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -126,13 +126,13 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length | 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero & not_has_neg).named(\"shuffle_dyck\") * -1\n \n \n def make_shuffle_dyck2() -> rasp.SOp:"}]
[{"job_id": "9e7dbfdbc3c34ef1b00163343871c2ac", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_LShift", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 3, "start_pos": [95, 25], "end_pos": [95, 26], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fbba5f1fe50>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fbba5f1fe50>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 0\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n>           any_negative = any_negative << (balance < 0)\nE           TypeError: unsupported operand type(s) for <<: 'Map' and 'Map'\n\nsource/shuffle_dyck2.py:110: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 2.90s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) >= 0\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative << (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "f0fc82ba3ecd455ba8e544763b3d8e65", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Add", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_RShift", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f128f11fee0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f128f11fee0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n>           all_zero = all_zero >> (balance == 0)\nE           TypeError: unsupported operand type(s) for >>: 'Map' and 'Map'\n\nsource/shuffle_dyck2.py:127: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.01s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero >> (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n@@ -132,7 +132,7 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero + not_has_neg).named(\"shuffle_dyck\")\n \n \n def make_shuffle_dyck2() -> rasp.SOp:"}]
[{"job_id": "4eb0b0ac56a84412b6bcb7ae57c7f837", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_RShift", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 1, "start_pos": [76, 72], "end_pos": [76, 73], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssE\n\n==================================== ERRORS ====================================\n________________ ERROR at setup of TestShuffleDyck2.test_model _________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7feb5032beb0>\nmethod = <bound method TestShuffleDyck2.test_model of <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7feb5032beb0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck2(), \"shuffle_dyck2\")\n\ntests/test_shuffle_dyck2.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck2.py:139: in make_shuffle_dyck2\n    return make_shuffle_dyck(pairs=[\"()\", \"{}\"]).named(\"shuffle_dyck2\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()', '{}']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n>           any_negative = any_negative >> (balance < 0)\nE           TypeError: unsupported operand type(s) for >>: 'Map' and 'Map'\n\nsource/shuffle_dyck2.py:110: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - TypeError: ...\n==================== 2 skipped, 1 warning, 1 error in 3.30s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 0, -1))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative >> (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "43e60b8004894718a0c31c3959d7ec4b", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 2, "start_pos": [76, 76], "end_pos": [76, 77], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [20, 4], "end_pos": [20, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.94\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f785792ff10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f785792ff10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 58.21s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -17,7 +17,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, - 2))\n     return pair_balance.named(\"pair_balance\")\n \n "}]
[{"job_id": "cf6f053d27b44e708c3114bd1bdd6995", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 4, "start_pos": [117, 17], "end_pos": [119, 5], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 7, "start_pos": [74, 13], "end_pos": [74, 73], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssUnsupported RASP expressions:\nbalance_(): LinearSequenceMap only supports numerical inputs/outputs.\nbalance_{}: LinearSequenceMap only supports numerical inputs/outputs.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.36s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -71,7 +71,7 @@\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n-    closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n+    closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\") * -1\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n     return pair_balance.named(\"pair_balance\")\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices * -1, rasp.indices, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "6f476a508f8244b0a5e2c453ca2e6e3b", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 15, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 3, "start_pos": [117, 43], "end_pos": [117, 55], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.94\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f1278643b20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f1278643b20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 56.17s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices - 1, rasp.Comparison.LT).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "dd5257980d314e9c86bd0e532cb98ee8", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Lt_NotEq", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 7, "start_pos": [109, 28], "end_pos": [109, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fc7b8947d30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fc7b8947d30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 32.92s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -105,8 +105,8 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n-    for balance in balances[1:]:\n+    any_negative = balances[0] != 0\n+    for balance in balances[ 2:]:\n         any_negative = any_negative | (balance < 0)\n \n     # Convert to numerical SOp"}]
[{"job_id": "1598629fc9a846c6847bc673fec44319", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_Div", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [44, 38], "end_pos": [44, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.18s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices + 1, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative / (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "8125ce2bdaa0401db71caf831aa361f6", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 10, "start_pos": [125, 24], "end_pos": [125, 25], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f7f10a07dc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f7f10a07dc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 46.20s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[ 1] > 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "17cb75ca0af14d28944a4e67a9ce6e21", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 10, "start_pos": [108, 28], "end_pos": [108, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 20, "start_pos": [125, 24], "end_pos": [125, 25], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.94\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f172e223cd0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f172e223cd0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 49.70s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[ 1] < 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[ 1] == 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "13c9e9f6ef2444369ff2ea43de2da904", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_LtE", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [44, 12], "end_pos": [44, 72], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "timeout", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices * -1, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop <= close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))"}]
[{"job_id": "25e5568c029e428281a0c1dd0e13cd21", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 14, "start_pos": [129, 53], "end_pos": [129, 54], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 3, "start_pos": [135, 4], "end_pos": [135, 58], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.94\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fb42b74fca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fb42b74fca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 53.17s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -126,13 +126,13 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 2, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero & not_has_neg).named(\"shuffle_dyck\") * -1\n \n \n def make_shuffle_dyck2() -> rasp.SOp:"}]
[{"job_id": "32713289fb234dbf813cf0b26eba821e", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_LtE", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Lt_Gt", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f80065f7d60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f80065f7d60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 50.69s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop <= close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] > 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n "}]
[{"job_id": "724d4479412746ddacb654a714e6a08d", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/NumberReplacer", "occurrence": 14, "start_pos": [109, 28], "end_pos": [109, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fa288c37c70>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fa288c37c70>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 34.34s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -106,7 +106,7 @@\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 2:]:\n         any_negative = any_negative | (balance < 0)\n \n     # Convert to numerical SOp"}]
[{"job_id": "fa901fa6a67e4ca79aefde801f94caac", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Div", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 4, "start_pos": [70, 17], "end_pos": [70, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ss('Attention patterns can currently only average binary variables. Not:', {0, -1})\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.07s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\") * -1\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero / (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "9ffb783a9c3b4bf4b01e18d27114ff4d", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_NotEq", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Lt_NotEq", "occurrence": 1, "start_pos": [110, 47], "end_pos": [110, 48], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fdb06b5bd60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fdb06b5bd60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 54.40s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance != 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] != 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "c2f94a11b4634834982edb294755e519", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 4, "start_pos": [127, 39], "end_pos": [127, 41], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-integer", "occurrence": 10, "start_pos": [125, 24], "end_pos": [125, 25], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fa772e33df0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7fa772e33df0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 54.83s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -122,9 +122,9 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[ 1] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance > 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "4a5fbb1771624b6ca28b33c2151ee514", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 4, "start_pos": [127, 39], "end_pos": [127, 41], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.9\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f23497fbeb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f23497fbeb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 48.40s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance > 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "3332e030c2d44676b0a299fa91222ed7", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 16, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.52\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f1177e2be50>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f1177e2be50>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 53.31s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "b7b5e9bc8a714ee98d5764c124f40f55", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 3, "start_pos": [95, 25], "end_pos": [95, 26], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.94\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f7cc9623e80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f7cc9623e80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 45.40s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) >= 0\n \n     # Compute running balance of each type of parenthesis\n     balances = []"}]
[{"job_id": "4f4e499874ec4d97aaf3cd171ad67ad6", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Lt_GtE", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 4, "start_pos": [129, 30], "end_pos": [129, 42], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.9\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f85517f7e20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f85517f7e20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 53.33s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] >= 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices - 1, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "5216fc15040f4838ae6da3c030b339b4", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 23, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck2.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n_________________________ TestShuffleDyck2.test_model __________________________\n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f65da10bd00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck2.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck2.TestShuffleDyck2 object at 0x7f65da10bd00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck2.py::TestShuffleDyck2::test_model - AssertionE...\n=================== 1 failed, 2 skipped, 1 warning in 50.99s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length * 1, rasp.Comparison.LEQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "3b4fc68e25494279919eaf47de742c69", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Lt_GtE", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/decrement-integer", "occurrence": 7, "start_pos": [109, 28], "end_pos": [109, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "timeout", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -105,8 +105,8 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n-    for balance in balances[1:]:\n+    any_negative = balances[0] >= 0\n+    for balance in balances[ 0:]:\n         any_negative = any_negative | (balance < 0)\n \n     # Convert to numerical SOp"}]
[{"job_id": "c526fbb7fa064b76a7615ce3e830e2dd", "mutations": [{"module_path": "source/shuffle_dyck2.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck2.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [44, 24], "end_pos": [44, 36], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "timeout", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck2.py\n+++ bsource/shuffle_dyck2.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices + 1, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] > 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]

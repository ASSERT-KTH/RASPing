[{"job_id": "df986c17cc384feaaad7977ceb70ad81", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.74\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7ff6ce953df0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7ff6ce953df0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 27.71s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.GEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length * 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "18b82c32f46144ea92355970bdde3654", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/AddNot", "occurrence": 0, "start_pos": [95, 11], "end_pos": [95, 26], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-integer", "occurrence": 14, "start_pos": [129, 53], "end_pos": [129, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f98e5417d00>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f98e5417d00>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n>       assert not len(pairs) >= 1\nE       AssertionError\n\nsource/shuffle_dyck.py:95: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.24s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert not len(pairs) >= 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 0, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "4490f1628ec44b35bd6c52d22503617a", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 29, "start_pos": [129, 53], "end_pos": [129, 54], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 7, "start_pos": [129, 18], "end_pos": [131, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.78\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fb8dc607c70>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fb8dc607c70>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 27.23s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 0 * -1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "14481333bd4047d8a3b699c57b8592cb", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [44, 38], "end_pos": [44, 50], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [20, 11], "end_pos": [20, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.66\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fa77f43fdc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fa77f43fdc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 34.77s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -17,7 +17,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices + 1, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n "}]
[{"job_id": "a9a2023f2d074917a35f0eaa6b9ebc15", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 27, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f4ff1d53d00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f4ff1d53d00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.47s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LT)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.TRUE).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "92a71fed831d43aabd74109c847f02ed", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Div", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 6, "start_pos": [129, 18], "end_pos": [131, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.78\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f7612e33d60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f7612e33d60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 31.93s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -124,9 +124,9 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero / (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices * -1, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "dd1fe262b1954418a21b38e918da3137", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_Pow", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.78\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f9451f13d30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f9451f13d30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.26s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative ** (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length + 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "f3aa8cbc39354603b89b1d31fa8c61b2", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_RShift", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Lt", "occurrence": 4, "start_pos": [127, 39], "end_pos": [127, 41], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7efc97a23d90>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7efc97a23d90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance < 0)\n    \n        select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n        not_has_neg = (~has_neg).named(\"not_has_neg\")\n>       return (last_zero >> not_has_neg).named(\"shuffle_dyck\")\nE       TypeError: unsupported operand type(s) for >>: 'Aggregate' and 'Map'\n\nsource/shuffle_dyck.py:135: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - TypeError: un...\n==================== 2 skipped, 1 warning, 1 error in 3.27s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance < 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n@@ -132,5 +132,5 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero >> not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "01f0ec7124984b6aba25a8d5e9b9be68", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceUnaryOperator_USub_Invert", "occurrence": 0, "start_pos": [76, 75], "end_pos": [76, 76], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [44, 24], "end_pos": [44, 36], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7faf2c953d00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7faf2c953d00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.70s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices - 1, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, ~1))\n     return pair_balance.named(\"pair_balance\")\n \n "}]
[{"job_id": "0f12a2daccaa4be1991555a09543ff59", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_LShift", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 3, "start_pos": [45, 26], "end_pos": [45, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7ff849647d90>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7ff849647d90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n        not_has_neg = (~has_neg).named(\"not_has_neg\")\n>       return (last_zero << not_has_neg).named(\"shuffle_dyck\")\nE       TypeError: unsupported operand type(s) for <<: 'Aggregate' and 'Map'\n\nsource/shuffle_dyck.py:135: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - TypeError: un...\n==================== 2 skipped, 1 warning, 1 error in 3.40s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -42,7 +42,7 @@\n     \"\"\"\n     bools = rasp.numerical(bools)\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0) * -1).named(\"frac_prevs\")\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:\n@@ -132,5 +132,5 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero << not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "2f4d8eb2d236426eb324c8a3ed4de8a7", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 24, "start_pos": [126, 28], "end_pos": [126, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f964512bd60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f964512bd60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.98s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop >= open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -123,7 +123,7 @@\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 2:]:\n         all_zero = all_zero & (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named("}]
[{"job_id": "3b7c76d293d642fdb6b56dd6d829383e", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Lt", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [45, 63], "end_pos": [45, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\nopens: Numerical aggregate only supports 0 as default value.\ncloses: Numerical aggregate only supports 0 as default value.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.24s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -42,7 +42,7 @@\n     \"\"\"\n     bools = rasp.numerical(bools)\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    return rasp.numerical(rasp.Aggregate(prevs, bools, default= 1)).named(\"frac_prevs\")\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] < 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "3ded1d86f46b4ea58ceca77250bbae47", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 21, "start_pos": [125, 24], "end_pos": [125, 25], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.78\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f948e557c70>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f948e557c70>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.22s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -122,11 +122,11 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[ -1] == 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length | 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "7a1b3c74d53644e884fc57d5d22cae6c", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 22, "start_pos": [125, 30], "end_pos": [125, 31], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 10, "start_pos": [125, 24], "end_pos": [125, 25], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fd3ba15bd90>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fd3ba15bd90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n>       all_zero = balances[ 1] == 1\nE       IndexError: list index out of range\n\nsource/shuffle_dyck.py:125: IndexError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - IndexError: l...\n==================== 2 skipped, 1 warning, 1 error in 3.33s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[ 1] == 1\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "b1de7d1c977a408fbff01930d1bbcf2d", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 12, "start_pos": [108, 33], "end_pos": [108, 34], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 22, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f8b7bf1bd90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f8b7bf1bd90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 31.41s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] < 1\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.LT).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "f72227e01b11420888a5e12ef0ca8197", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_IsNot", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-integer", "occurrence": 7, "start_pos": [109, 28], "end_pos": [109, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f4fa9affc40>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f4fa9affc40>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck.py:102: in make_shuffle_dyck\n    balance = make_pair_balance(\nsource/shuffle_dyck.py:70: in make_pair_balance\n    bools_open = rasp.numerical(sop is not open_token).named(\"bools_open\")\n../../.venv/lib/python3.10/site-packages/tracr/rasp/rasp.py:721: in numerical\n    return annotate(sop, encoding=Encoding.NUMERICAL)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nexpr = True, annotations = {'encoding': <Encoding.NUMERICAL: 'numerical'>}\n\n    def annotate(expr: RASPExprT, **annotations) -> RASPExprT:\n      \"\"\"Creates a new expr with added annotations.\"\"\"\n>     new = expr.copy()\nE     AttributeError: 'bool' object has no attribute 'copy'\n\n../../.venv/lib/python3.10/site-packages/tracr/rasp/rasp.py:160: AttributeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AttributeErro...\n==================== 2 skipped, 1 warning, 1 error in 3.36s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop is not open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -106,7 +106,7 @@\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 0:]:\n         any_negative = any_negative | (balance < 0)\n \n     # Convert to numerical SOp"}]
[{"job_id": "d2fcb47117c34029b33cbb7935dd97c3", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [44, 38], "end_pos": [44, 50], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 2, "start_pos": [117, 29], "end_pos": [117, 41], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.98\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f6643f1fd60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f6643f1fd60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 31.79s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices + 1, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices + 1, rasp.indices, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "80a9ae13ebf84f1ba9072673c23c6c9a", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 3, "start_pos": [117, 43], "end_pos": [117, 55], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.74\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f9425e43cd0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f9425e43cd0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.91s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices - 1, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "a641f753ae564e2fbeb8d1277edcaa68", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 5, "start_pos": [76, 76], "end_pos": [76, 77], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-integer", "occurrence": 5, "start_pos": [108, 28], "end_pos": [108, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fea6c00fca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fea6c00fca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.97s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, - 0))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[ -1] < 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n "}]
[{"job_id": "cd8092b3e5df40d9bac84c3fb2ea61eb", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_RShift", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 15, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.88\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f8359607d00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f8359607d00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 30.49s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LT).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero >> (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "fe6d96ae5a9c43c8946f128f8ad0de36", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Lt", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 24, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.04\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fe26e017df0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fe26e017df0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 27.13s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop < close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.GT).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "ac168a5eca9542c4b415ce6d7be7999a", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 10, "start_pos": [108, 28], "end_pos": [108, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 5, "start_pos": [71, 12], "end_pos": [71, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f9dbff23d00>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f9dbff23d00>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n>       any_negative = balances[ 1] < 0\nE       IndexError: list index out of range\n\nsource/shuffle_dyck.py:108: IndexError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - IndexError: l...\n==================== 2 skipped, 1 warning, 1 error in 3.29s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -68,7 +68,7 @@\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n-    opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n+    opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\") * -1\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[ 1] < 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n "}]
[{"job_id": "495c3a34e34d4a4ca5aba9500d5c5d67", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [45, 63], "end_pos": [45, 64], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 26, "start_pos": [127, 42], "end_pos": [127, 43], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\nopens: Numerical aggregate only supports 0 as default value.\ncloses: Numerical aggregate only supports 0 as default value.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 2.94s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -42,7 +42,7 @@\n     \"\"\"\n     bools = rasp.numerical(bools)\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    return rasp.numerical(rasp.Aggregate(prevs, bools, default= -1)).named(\"frac_prevs\")\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance == 1)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "db9df6057b624967aa2ce2fcd0269f78", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_NotEq", "occurrence": 2, "start_pos": [100, 25], "end_pos": [100, 27], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 8, "start_pos": [100, 28], "end_pos": [100, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 27.98s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) != 3\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token"}]
[{"job_id": "dd4fbaa7a703426c88da5eefd4cc98fb", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Lt_LtE", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 7, "start_pos": [74, 13], "end_pos": [74, 73], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\nbalance_(): LinearSequenceMap only supports numerical inputs/outputs.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.34s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -71,7 +71,7 @@\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n-    closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n+    closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\") * -1\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n     return pair_balance.named(\"pair_balance\")\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] <= 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n "}]
[{"job_id": "22fda6b673ef412a934b37aab5bc3161", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Lt_NotEq", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 26, "start_pos": [127, 42], "end_pos": [127, 43], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fd04e51fd60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fd04e51fd60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 26.44s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] != 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance == 1)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "9607cc965cc14019a7ff4011102bfdc8", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_FloorDiv", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceUnaryOperator_Delete_USub", "occurrence": 0, "start_pos": [76, 75], "end_pos": [76, 76], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fbfad91fdf0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fbfad91fdf0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 26.42s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, 1))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative // (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "f94de83f2d21480fad8a0c4a259406c9", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 2, "start_pos": [76, 72], "end_pos": [76, 73], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 18, "start_pos": [120, 78], "end_pos": [120, 79], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\nhas_neg: Numerical aggregate only supports 0 as default value.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.23s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 2, -1))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -117,7 +117,7 @@\n     select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n-    has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n+    has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default= 1)).named(\n         \"has_neg\"\n     )\n "}]
[{"job_id": "ad2771ed10014e689f22ba970ee4ba9c", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_RShift", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 12, "start_pos": [126, 28], "end_pos": [126, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fb89bd57c10>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fb89bd57c10>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[ 2:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n        not_has_neg = (~has_neg).named(\"not_has_neg\")\n>       return (last_zero >> not_has_neg).named(\"shuffle_dyck\")\nE       TypeError: unsupported operand type(s) for >>: 'Aggregate' and 'Map'\n\nsource/shuffle_dyck.py:135: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - TypeError: un...\n==================== 2 skipped, 1 warning, 1 error in 3.05s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -123,7 +123,7 @@\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 2:]:\n         all_zero = all_zero & (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n@@ -132,5 +132,5 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero >> not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "f302eb5da33241e3ba0e3d555611ad67", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceUnaryOperator_USub_Not", "occurrence": 0, "start_pos": [76, 75], "end_pos": [76, 76], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fcb1aa43df0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fcb1aa43df0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.97s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, not 1))\n     return pair_balance.named(\"pair_balance\")\n \n "}]
[{"job_id": "2ff5a0e17be1486da2680068fdb838d9", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_GtE_Eq", "occurrence": 0, "start_pos": [95, 22], "end_pos": [95, 24], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 20, "start_pos": [125, 24], "end_pos": [125, 25], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f01ff807d00>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f01ff807d00>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) == 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n>       all_zero = balances[ 1] == 0\nE       IndexError: list index out of range\n\nsource/shuffle_dyck.py:125: IndexError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - IndexError: l...\n==================== 2 skipped, 1 warning, 1 error in 3.25s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) == 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[ 1] == 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "4c407d9815234e4f9906280b67fe743f", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 17, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f2a9e6ffd30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f2a9e6ffd30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.14s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.EQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GT).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "6ef01d7d891a4e20a1769575cc9d0ed7", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Lt", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 27, "start_pos": [127, 42], "end_pos": [127, 43], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f0aee1f7df0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f0aee1f7df0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 32.57s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -122,9 +122,9 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] < 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance == -1)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "8d957613873d4d5faf733794b8a735bb", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceUnaryOperator_Delete_USub", "occurrence": 0, "start_pos": [76, 75], "end_pos": [76, 76], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fb9dd9f7df0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fb9dd9f7df0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 25.65s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, 1))\n     return pair_balance.named(\"pair_balance\")\n \n "}]
[{"job_id": "bba43d661dab4201a5c85b2c93009b16", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 13, "start_pos": [108, 33], "end_pos": [108, 34], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 10, "start_pos": [125, 24], "end_pos": [125, 25], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f6699533d60>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f6699533d60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < -1\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n>       all_zero = balances[ 1] == 0\nE       IndexError: list index out of range\n\nsource/shuffle_dyck.py:125: IndexError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - IndexError: l...\n==================== 2 skipped, 1 warning, 1 error in 3.31s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] < -1\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[ 1] == 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "f0b3018721d44ae3b97efbbc65136b95", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Add", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [20, 4], "end_pos": [20, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.78\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7ff6dcf33e50>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7ff6dcf33e50>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.28s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -17,7 +17,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero + (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "a8f9a174fa5642d9a7f160f0600148d7", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-integer", "occurrence": 10, "start_pos": [125, 24], "end_pos": [125, 25], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [44, 12], "end_pos": [44, 72], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.54\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7ffb18b53df0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7ffb18b53df0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 32.00s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices * -1, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[ -1] == 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "3e19fa4273e146348b59a756d4e529f8", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_GtE_LtE", "occurrence": 0, "start_pos": [95, 22], "end_pos": [95, 24], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 12, "start_pos": [108, 33], "end_pos": [108, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f4b4e023d90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f4b4e023d90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 31.81s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) <= 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] < 1\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n "}]
[{"job_id": "2ceeb5fc4629478fbb85bd996f2971de", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 3, "start_pos": [117, 43], "end_pos": [117, 55], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fdc8935fd30>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fdc8935fd30>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices + 1, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n>       select_last = rasp.Select(rasp.indices, length ** 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SelectorWidth' and 'int'\n\nsource/shuffle_dyck.py:129: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - TypeError: un...\n==================== 2 skipped, 1 warning, 1 error in 3.49s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices + 1, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length ** 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "e3db1a175b4f458d8a1bb059b8d5a0a4", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Pow", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Lt", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fd9f3233d90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fd9f3233d90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 25.49s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -122,9 +122,9 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] < 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero ** (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "85f42d29a407407586c0a306199e3194", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_BitXor", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_LtE", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 29.72s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop <= open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero ^ (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "d7d0a9387af84aae8f0d69215830c707", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_Add", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Pow", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 30.02s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative + (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero ** (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "5fdb3e778ca94e5899bc549bf3dcd0f5", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 2, "start_pos": [76, 72], "end_pos": [76, 73], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 17, "start_pos": [110, 49], "end_pos": [110, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f8ed7a07d90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f8ed7a07d90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.03s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 2, -1))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance < -1)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "7d43a8acab934411820b5befc703ed0b", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Lt_Eq", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceUnaryOperator_Invert_USub", "occurrence": 0, "start_pos": [134, 19], "end_pos": [134, 20], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f52ac223d90>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f52ac223d90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] == 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n>       not_has_neg = (-has_neg).named(\"not_has_neg\")\nE       TypeError: bad operand type for unary -: 'Aggregate'\n\nsource/shuffle_dyck.py:134: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - TypeError: ba...\n==================== 2 skipped, 1 warning, 1 error in 3.34s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] == 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -131,6 +131,6 @@\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n-    not_has_neg = (~has_neg).named(\"not_has_neg\")\n+    not_has_neg = (-has_neg).named(\"not_has_neg\")\n     return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "cb589c936c1a497689444bbb436679f4", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_Sub", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 16, "start_pos": [110, 49], "end_pos": [110, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 29.93s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative - (balance < 1)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "b2964404ac934853b154e6e3dc78c761", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Sub", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Mod", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "56d957ff9d7c4c9a8c589e05de30492f", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Lt", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f0d4c943dc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f0d4c943dc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 24.42s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -122,11 +122,11 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] < 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length | 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "fa20645565724425b76d067bb103a5eb", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_GtE_Gt", "occurrence": 0, "start_pos": [95, 22], "end_pos": [95, 24], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 6, "start_pos": [73, 18], "end_pos": [73, 73], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f5be2337e20>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f5be2337e20>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n>       assert len(pairs) > 1\nE       AssertionError\n\nsource/shuffle_dyck.py:95: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.32s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\") * -1\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) > 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []"}]
[{"job_id": "a6cf663b09c34a3d8f498ef7ba51818e", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 3, "start_pos": [117, 43], "end_pos": [117, 55], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f93f59ebe50>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f93f59ebe50>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 30.18s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices - 1, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "67979549c6a94c9491a57f5e5e31268b", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_GtE_Eq", "occurrence": 0, "start_pos": [95, 22], "end_pos": [95, 24], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 14, "start_pos": [129, 53], "end_pos": [129, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.94\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f490e14fd90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f490e14fd90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.03s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) == 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 2, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "48387edd621d4cc7aeeb4e20dd5f90ac", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-integer", "occurrence": 1, "start_pos": [76, 72], "end_pos": [76, 73], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f6af9f23dc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f6af9f23dc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.57s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.GEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 0, -1))\n     return pair_balance.named(\"pair_balance\")\n \n "}]
[{"job_id": "43663b398a174e1fa7563d0131f8fa14", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_BitXor", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.78\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f5f4f523b80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f5f4f523b80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.12s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative ^ (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] >= 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "554d291e0f644039849740ab390ae94a", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 4, "start_pos": [127, 39], "end_pos": [127, 41], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.78\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f7573403dc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f7573403dc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.33s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -124,9 +124,9 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance > 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length + 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "241bd3dfcc0045dc95aba4ff1ec5c5d4", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_GtE_LtE", "occurrence": 0, "start_pos": [95, 22], "end_pos": [95, 24], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 29, "start_pos": [129, 53], "end_pos": [129, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.78\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f43fda0fd30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f43fda0fd30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.31s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) <= 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 0, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "291a43ad31874bd9a416073f4e790df9", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Mod", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceUnaryOperator_Delete_USub", "occurrence": 0, "start_pos": [76, 75], "end_pos": [76, 76], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fbc89147be0>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fbc89147be0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n        not_has_neg = (~has_neg).named(\"not_has_neg\")\n>       return (last_zero % not_has_neg).named(\"shuffle_dyck\")\nE       TypeError: unsupported operand type(s) for %: 'Aggregate' and 'Map'\n\nsource/shuffle_dyck.py:135: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - TypeError: un...\n==================== 2 skipped, 1 warning, 1 error in 3.27s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, 1))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -132,5 +132,5 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero % not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "5b7397b1bfbc4ed39883d74a135a5928", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_Div", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.74\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7ff52354fe50>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7ff52354fe50>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.33s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GT)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative / (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "5e81293f41c54b9e9731b22bb07225c9", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Mod", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 11, "start_pos": [125, 30], "end_pos": [125, 31], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f02cb8ffe20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f02cb8ffe20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 27.92s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -122,9 +122,9 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] == 1\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero % (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "c973a46b366f4d99ab882fb8e18961ad", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 23, "start_pos": [125, 30], "end_pos": [125, 31], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 23, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f5499b2fdf0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f5499b2fdf0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 27.44s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -122,11 +122,11 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] == -1\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.LEQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "f2b80a4be8df4aef8a301a61e698c019", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_LShift", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_LShift", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 30.47s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative << (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero << (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "23186f485c8b4c9492bf8f5ab065d0c1", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_Add", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.04\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f5c7471fcd0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f5c7471fcd0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.68s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop > open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative + (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "5d58516039b3412fbca870f331e3c645", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_BitXor", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 16, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f500f607c70>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f500f607c70>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n        not_has_neg = (~has_neg).named(\"not_has_neg\")\n>       return (last_zero ^ not_has_neg).named(\"shuffle_dyck\")\nE       TypeError: unsupported operand type(s) for ^: 'Aggregate' and 'Map'\n\nsource/shuffle_dyck.py:135: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - TypeError: un...\n==================== 2 skipped, 1 warning, 1 error in 3.40s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n@@ -132,5 +132,5 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero ^ not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "3abfdbce8e73454fbb1a5b1642dcfb15", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceUnaryOperator_Delete_Invert", "occurrence": 0, "start_pos": [134, 19], "end_pos": [134, 20], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 14, "start_pos": [129, 53], "end_pos": [129, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\nshuffle_dyck: (Non-linear) SequenceMap only supports categorical inputs/outputs.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.22s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -126,11 +126,11 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 2, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n-    not_has_neg = (~has_neg).named(\"not_has_neg\")\n+    not_has_neg = (has_neg).named(\"not_has_neg\")\n     return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "4a5bdff753fc40519c5d79bf0c834d80", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 5, "start_pos": [71, 12], "end_pos": [71, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\nbalance_(): LinearSequenceMap only supports numerical inputs/outputs.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.02s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.EQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -68,7 +68,7 @@\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n-    opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n+    opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\") * -1\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")"}]
[{"job_id": "c24aa4007abc4c1e8371b8a5df940cb7", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_BitOr", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 24, "start_pos": [126, 28], "end_pos": [126, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 29.49s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -123,8 +123,8 @@\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n-    for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+    for balance in balances[ 2:]:\n+        all_zero = all_zero | (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "de4f70e4d4ad4614abfca033104a4bb0", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Lt_Gt", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [20, 4], "end_pos": [20, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.78\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f8a4fdf3e80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f8a4fdf3e80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.45s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -17,7 +17,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] > 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n "}]
[{"job_id": "3ddafe9950da4fea9257dde2bf29101c", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_RShift", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Lt_GtE", "occurrence": 1, "start_pos": [110, 47], "end_pos": [110, 48], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 30.91s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative >> (balance >= 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "6f25c9a4dea74c0490a5be647cd664d6", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Lt_Gt", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [45, 63], "end_pos": [45, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\nopens: Numerical aggregate only supports 0 as default value.\ncloses: Numerical aggregate only supports 0 as default value.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.30s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -42,7 +42,7 @@\n     \"\"\"\n     bools = rasp.numerical(bools)\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    return rasp.numerical(rasp.Aggregate(prevs, bools, default= 1)).named(\"frac_prevs\")\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] > 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n "}]
[{"job_id": "92bf933ab8ca40d39d84b8572603404b", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_FloorDiv", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [44, 12], "end_pos": [44, 72], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.54\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f34c6f2faf0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f34c6f2faf0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 32.26s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices * -1, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative // (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "e1b764444ca94bd88c7bdbc9325f0b57", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_RShift", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Lt", "occurrence": 4, "start_pos": [127, 39], "end_pos": [127, 41], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 29.95s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero >> (balance < 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "cd0499e299244aae87303ff945dc3053", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 9, "start_pos": [113, 19], "end_pos": [115, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\nhas_neg: An aggregate's output encoding must match its input encoding. Input: Encoding.NUMERICAL   Output: Encoding.CATEGORICAL  \nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.42s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -112,7 +112,7 @@\n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n         \"any_negative\"\n-    )\n+    ) * -1\n \n     select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n         \"select_all\"\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length / 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "ab9cf4b781f5474786f95d80400b7330", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_GtE_Lt", "occurrence": 0, "start_pos": [95, 22], "end_pos": [95, 24], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 11, "start_pos": [125, 30], "end_pos": [125, 31], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fce25917df0>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fce25917df0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n>       assert len(pairs) < 1\nE       AssertionError\n\nsource/shuffle_dyck.py:95: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 2.81s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) < 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] == 1\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "2d6734eec4ed4b0bbf1debc0d6de9f82", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_LShift", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 13, "start_pos": [127, 42], "end_pos": [127, 43], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 30.62s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative << (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance == 1)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "e59aacff789f477b9ba7de1ca2bf49ac", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [44, 24], "end_pos": [44, 36], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.78\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fc7b7f1fd90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fc7b7f1fd90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 34.02s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices + 1, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length * 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "71c69d646bf74303bd0833cb4d79a6bc", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 14, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.72\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fd431237dc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fd431237dc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.66s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.EQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.EQ).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "50fb79170ec84403bc17ec00e6c4eaa3", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [44, 12], "end_pos": [44, 72], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 3, "start_pos": [45, 26], "end_pos": [45, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\naggregate: An aggregate's output encoding must match its input encoding. Input: Encoding.CATEGORICAL   Output: Encoding.NUMERICAL  \naggregate: An aggregate's output encoding must match its input encoding. Input: Encoding.CATEGORICAL   Output: Encoding.NUMERICAL  \nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.24s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,8 +41,8 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    prevs = rasp.Select(rasp.indices * -1, rasp.indices, rasp.Comparison.LEQ)\n+    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0) * -1).named(\"frac_prevs\")\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:"}]
[{"job_id": "c7cba98c51bd43c59b9da387935657e8", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitXor", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [44, 38], "end_pos": [44, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f426aa37d60>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f426aa37d60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n>       select_last = rasp.Select(rasp.indices, length ^ 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\nE       TypeError: unsupported operand type(s) for ^: 'SelectorWidth' and 'int'\n\nsource/shuffle_dyck.py:129: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - TypeError: un...\n==================== 2 skipped, 1 warning, 1 error in 3.08s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices + 1, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length ^ 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "feb8b532158644ecbb276795d3fc758d", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 12, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [44, 12], "end_pos": [44, 72], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.86\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f7ae360fd90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f7ae360fd90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 33.91s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices * -1, rasp.Comparison.NEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n "}]
[{"job_id": "6a31a929ee6b4096b9a0eaf7a9cafb82", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 10, "start_pos": [108, 28], "end_pos": [108, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 20, "start_pos": [125, 24], "end_pos": [125, 25], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fd74fe27c40>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fd74fe27c40>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n>       any_negative = balances[ 1] < 0\nE       IndexError: list index out of range\n\nsource/shuffle_dyck.py:108: IndexError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - IndexError: l...\n==================== 2 skipped, 1 warning, 1 error in 3.29s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[ 1] < 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[ 1] == 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "72d43bfcf94d47d19d56f20586393b6c", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_LtE", "occurrence": 4, "start_pos": [127, 39], "end_pos": [127, 41], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 18, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.88\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fc9bdf5fca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fc9bdf5fca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.62s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GEQ).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance <= 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "d7eeb6ad5c8a45ca8b14af4decc21128", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-integer", "occurrence": 7, "start_pos": [109, 28], "end_pos": [109, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fc120043d90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fc120043d90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 41.88s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.EQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -106,7 +106,7 @@\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 0:]:\n         any_negative = any_negative | (balance < 0)\n \n     # Convert to numerical SOp"}]
[{"job_id": "965022cdc88f4d8398b9f11b7c8cb401", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_BitXor", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 11, "start_pos": [125, 30], "end_pos": [125, 31], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f4085e33ee0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f4085e33ee0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 26.75s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative ^ (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] == 1\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "5bddc6fd556e49f6a2d4f700d5d8a94a", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 27, "start_pos": [127, 42], "end_pos": [127, 43], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 12, "start_pos": [126, 28], "end_pos": [126, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 28.72s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -123,8 +123,8 @@\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n-    for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+    for balance in balances[ 2:]:\n+        all_zero = all_zero & (balance == -1)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "12898881450242a59a81d3fe7d9d037c", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [44, 38], "end_pos": [44, 50], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 12, "start_pos": [120, 29], "end_pos": [120, 80], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\naggregate: An aggregate's output encoding must match its input encoding. Input: Encoding.CATEGORICAL   Output: Encoding.NUMERICAL  \nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.51s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices - 1, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -117,7 +117,7 @@\n     select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n-    has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n+    has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0) * -1).named(\n         \"has_neg\"\n     )\n "}]
[{"job_id": "ba62ae08a50a4157bbb09fb71a0b7296", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 10, "start_pos": [108, 28], "end_pos": [108, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 4, "start_pos": [129, 30], "end_pos": [129, 42], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f0b6f823d90>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f0b6f823d90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n>       any_negative = balances[ 1] < 0\nE       IndexError: list index out of range\n\nsource/shuffle_dyck.py:108: IndexError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - IndexError: l...\n==================== 2 skipped, 1 warning, 1 error in 3.22s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[ 1] < 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices + 1, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "fe2c8415f1364738a36c107365e93362", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [20, 4], "end_pos": [20, 64], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 5, "start_pos": [117, 17], "end_pos": [119, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.78\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f95b142be80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f95b142be80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.44s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -17,7 +17,7 @@\n     all_true_selector = rasp.Select(\n         rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n-    return rasp.SelectorWidth(all_true_selector).named(\"length\")\n+    return rasp.SelectorWidth(all_true_selector).named(\"length\") * -1\n \n \n length = make_length()\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices * -1, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "fcd0b12f50b94933a0ccac7ad30729a0", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_Sub_LShift", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 9, "start_pos": [113, 19], "end_pos": [115, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fa815823d90>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fa815823d90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        ) * -1\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n>       select_last = rasp.Select(rasp.indices, length << 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\nE       TypeError: unsupported operand type(s) for <<: 'SelectorWidth' and 'int'\n\nsource/shuffle_dyck.py:129: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - TypeError: un...\n==================== 2 skipped, 1 warning, 1 error in 3.28s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -112,7 +112,7 @@\n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n         \"any_negative\"\n-    )\n+    ) * -1\n \n     select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n         \"select_all\"\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length << 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "a7b80b8971e04c45be2cd644d39b1a4b", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Add", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/AddNot", "occurrence": 1, "start_pos": [100, 15], "end_pos": [100, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fb5f6333e20>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fb5f6333e20>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n>           assert not len(pair) == 2\nE           AssertionError\n\nsource/shuffle_dyck.py:100: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.28s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert not len(pair) == 2\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length + 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "9c864bd69e214d1d9999804bacaf2694", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 3, "start_pos": [117, 43], "end_pos": [117, 55], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 5, "start_pos": [117, 17], "end_pos": [119, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 34.91s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices - 1 * -1, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "06c30cd43c504394827386f82c1b4c80", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceUnaryOperator_Delete_Invert", "occurrence": 0, "start_pos": [134, 19], "end_pos": [134, 20], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 24, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\nshuffle_dyck: (Non-linear) SequenceMap only supports categorical inputs/outputs.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.38s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -126,11 +126,11 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.GT).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n-    not_has_neg = (~has_neg).named(\"not_has_neg\")\n+    not_has_neg = (has_neg).named(\"not_has_neg\")\n     return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "9a9c19448d5e4fe2946d2b9c1d580cf8", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [45, 26], "end_pos": [45, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\nopens: An aggregate's output encoding must match its input encoding. Input: Encoding.NUMERICAL   Output: Encoding.CATEGORICAL  \ncloses: An aggregate's output encoding must match its input encoding. Input: Encoding.NUMERICAL   Output: Encoding.CATEGORICAL  \nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 2.94s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,8 +41,8 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LT)\n+    return rasp.numerical(rasp.Aggregate(prevs, bools * -1, default=0)).named(\"frac_prevs\")\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:"}]
[{"job_id": "ad73cd377cc947bb8e1c4924b52f253a", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_BitOr", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.62\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f999e94fee0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f999e94fee0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.02s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.GEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -132,5 +132,5 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero | not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "bad87c348d14423d922bbdf8ed5b1bd9", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Sub", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 18, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.88\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f4af6c13dc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f4af6c13dc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.88s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GEQ).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero - (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "df80b1c4148a42fba586430c7133c3c5", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_LShift", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 11, "start_pos": [108, 28], "end_pos": [108, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 25.55s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -105,9 +105,9 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[ -1] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative << (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "53df058f766942cab0baf6ca934d5be5", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_FloorDiv", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-integer", "occurrence": 8, "start_pos": [110, 49], "end_pos": [110, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 29.22s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative // (balance < -1)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "9c09c3d491254914b3642b3df9cc7d83", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Div", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-integer", "occurrence": 12, "start_pos": [126, 28], "end_pos": [126, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.22s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -123,8 +123,8 @@\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n-    for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+    for balance in balances[ 0:]:\n+        all_zero = all_zero / (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "29e97db0cb33478080c549536ea3531d", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Add", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Lt_Eq", "occurrence": 1, "start_pos": [110, 47], "end_pos": [110, 48], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.62\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f5da7847ca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f5da7847ca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.65s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance == 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -132,5 +132,5 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero + not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "f720505d16e548a7a1e2b0c824a4ed45", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Is", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 19, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f45a3223c10>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f45a3223c10>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck.py:102: in make_shuffle_dyck\n    balance = make_pair_balance(\nsource/shuffle_dyck.py:70: in make_pair_balance\n    bools_open = rasp.numerical(sop is open_token).named(\"bools_open\")\n../../.venv/lib/python3.10/site-packages/tracr/rasp/rasp.py:721: in numerical\n    return annotate(sop, encoding=Encoding.NUMERICAL)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nexpr = False, annotations = {'encoding': <Encoding.NUMERICAL: 'numerical'>}\n\n    def annotate(expr: RASPExprT, **annotations) -> RASPExprT:\n      \"\"\"Creates a new expr with added annotations.\"\"\"\n>     new = expr.copy()\nE     AttributeError: 'bool' object has no attribute 'copy'\n\n../../.venv/lib/python3.10/site-packages/tracr/rasp/rasp.py:160: AttributeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AttributeErro...\n==================== 2 skipped, 1 warning, 1 error in 2.80s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop is open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.NEQ).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "05c719df42404a1cac0d3e50605b9bb6", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_RShift", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 19, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.98\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f415db1bbb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f415db1bbb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.38s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,14 +107,14 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative >> (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.NEQ).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "ef46daefbd1e4c15aa40f6f0b9ffe0b1", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Lt_Eq", "occurrence": 1, "start_pos": [110, 47], "end_pos": [110, 48], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 14, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.88\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f46fd55fd00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f46fd55fd00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 31.66s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,14 +107,14 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance == 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.EQ).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "9f4fba33083a4deb94860de6c3cd8b8b", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_BitXor", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-integer", "occurrence": 12, "start_pos": [126, 28], "end_pos": [126, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 36.77s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative ^ (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -123,7 +123,7 @@\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 0:]:\n         all_zero = all_zero & (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named("}]
[{"job_id": "b90d928c33784b72b102196b71933f09", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Lt", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 27, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f371f433c40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f371f433c40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.27s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop < open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.TRUE).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "fa92b31fb0d343bca2c56d5db3e7a985", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-integer", "occurrence": 8, "start_pos": [110, 49], "end_pos": [110, 50], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 5, "start_pos": [117, 17], "end_pos": [119, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 32.84s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,14 +107,14 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance < -1)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices * -1, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "4787e0d347c34876a8f6ff34f278aa81", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Pow", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_NotEq", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fbe8463bd90>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fbe8463bd90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n>       select_last = rasp.Select(rasp.indices, length ** 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\nE       TypeError: unsupported operand type(s) for ** or pow(): 'SelectorWidth' and 'int'\n\nsource/shuffle_dyck.py:129: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - TypeError: un...\n==================== 2 skipped, 1 warning, 1 error in 3.06s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop != open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length ** 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "6b890084a3a841bba8ed5d829d9c47ac", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 5, "start_pos": [76, 76], "end_pos": [76, 77], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f7e261e7d30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f7e261e7d30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.95s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, - 0))\n     return pair_balance.named(\"pair_balance\")\n \n "}]
[{"job_id": "7172f331e2f349d28355d6cf99496deb", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Lt", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [17, 24], "end_pos": [19, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f726d743eb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f726d743eb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 30.50s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] < 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "5201689a616c401e9ac420586234ca56", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceUnaryOperator_Delete_Invert", "occurrence": 0, "start_pos": [134, 19], "end_pos": [134, 20], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [45, 63], "end_pos": [45, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\nshuffle_dyck: (Non-linear) SequenceMap only supports categorical inputs/outputs.\nopens: Numerical aggregate only supports 0 as default value.\ncloses: Numerical aggregate only supports 0 as default value.\nopens: Numerical aggregate only supports 0 as default value.\ncloses: Numerical aggregate only supports 0 as default value.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.23s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -42,7 +42,7 @@\n     \"\"\"\n     bools = rasp.numerical(bools)\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    return rasp.numerical(rasp.Aggregate(prevs, bools, default= 1)).named(\"frac_prevs\")\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:\n@@ -131,6 +131,6 @@\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n-    not_has_neg = (~has_neg).named(\"not_has_neg\")\n+    not_has_neg = (has_neg).named(\"not_has_neg\")\n     return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "ff25a668d2b4473f9c5adc1139a0c23b", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceUnaryOperator_USub_Invert", "occurrence": 0, "start_pos": [76, 75], "end_pos": [76, 76], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 7, "start_pos": [109, 28], "end_pos": [109, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7faaeae23dc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7faaeae23dc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.63s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, ~1))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -106,7 +106,7 @@\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 2:]:\n         any_negative = any_negative | (balance < 0)\n \n     # Convert to numerical SOp"}]
[{"job_id": "0e8a3f49a8484b49ad02a30ffec1607e", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 3, "start_pos": [95, 25], "end_pos": [95, 26], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 4, "start_pos": [129, 30], "end_pos": [129, 42], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f7ca374bd60>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f7ca374bd60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n>       assert len(pairs) >= 2\nE       AssertionError\n\nsource/shuffle_dyck.py:95: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.28s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) >= 2\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices - 1, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "10f2abd28ae34673accf2d47db860f8a", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 2, "start_pos": [77, 4], "end_pos": [77, 45], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [45, 26], "end_pos": [45, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\nopens: An aggregate's output encoding must match its input encoding. Input: Encoding.NUMERICAL   Output: Encoding.CATEGORICAL  \ncloses: An aggregate's output encoding must match its input encoding. Input: Encoding.NUMERICAL   Output: Encoding.CATEGORICAL  \nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.17s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -42,7 +42,7 @@\n     \"\"\"\n     bools = rasp.numerical(bools)\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    return rasp.numerical(rasp.Aggregate(prevs, bools * -1, default=0)).named(\"frac_prevs\")\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:\n@@ -74,7 +74,7 @@\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n-    return pair_balance.named(\"pair_balance\")\n+    return pair_balance.named(\"pair_balance\") * -1\n \n \n def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:"}]
[{"job_id": "b0c0e8d25fce4ad08cdcc80692ecd9d8", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [44, 38], "end_pos": [44, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.94\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f35bad07d30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f35bad07d30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 32.54s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.EQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices + 1, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n "}]
[{"job_id": "4e8911e69e73470eae6418b3b1c3b36f", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [17, 24], "end_pos": [19, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.94\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f04bb9fbee0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f04bb9fbee0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.76s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LT)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n "}]
[{"job_id": "6df4cf20a7a643c5bdd551dd3bac1bf3", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 21, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 10, "start_pos": [125, 24], "end_pos": [125, 25], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f2e46607e20>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f2e46607e20>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n>       all_zero = balances[ 1] == 0\nE       IndexError: list index out of range\n\nsource/shuffle_dyck.py:125: IndexError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - IndexError: l...\n==================== 2 skipped, 1 warning, 1 error in 3.34s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -122,11 +122,11 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[ 1] == 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.LT).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "df9a511eaf98401c990aff28017966f6", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_BitXor", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Mod", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 28.66s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative ^ (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero % (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "5151320986df4c0ea72b97cbf676a657", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_NotEq", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-integer", "occurrence": 14, "start_pos": [129, 53], "end_pos": [129, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7effebd23dc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7effebd23dc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 30.32s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -122,11 +122,11 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] != 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 0, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "aa2464ef23f04f679384553c91bac85c", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceUnaryOperator_USub_UAdd", "occurrence": 0, "start_pos": [76, 75], "end_pos": [76, 76], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.04\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f0a0db4fd30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f0a0db4fd30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 25.96s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, +1))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length * 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "71c366d7857141658feb30b40b123fa1", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Lt_GtE", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 1, "start_pos": [76, 72], "end_pos": [76, 73], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7ff7d443bc10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7ff7d443bc10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.19s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 2, -1))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] >= 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n "}]
[{"job_id": "183223771d534fa7b104d536c743243b", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Is", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 23, "start_pos": [125, 30], "end_pos": [125, 31], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f83237d7d60>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f83237d7d60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck.py:102: in make_shuffle_dyck\n    balance = make_pair_balance(\nsource/shuffle_dyck.py:70: in make_pair_balance\n    bools_open = rasp.numerical(sop is open_token).named(\"bools_open\")\n../../.venv/lib/python3.10/site-packages/tracr/rasp/rasp.py:721: in numerical\n    return annotate(sop, encoding=Encoding.NUMERICAL)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nexpr = False, annotations = {'encoding': <Encoding.NUMERICAL: 'numerical'>}\n\n    def annotate(expr: RASPExprT, **annotations) -> RASPExprT:\n      \"\"\"Creates a new expr with added annotations.\"\"\"\n>     new = expr.copy()\nE     AttributeError: 'bool' object has no attribute 'copy'\n\n../../.venv/lib/python3.10/site-packages/tracr/rasp/rasp.py:160: AttributeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AttributeErro...\n==================== 2 skipped, 1 warning, 1 error in 3.37s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop is open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] == -1\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "785d74db1b284b9a8e1f8b0c066fae53", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Div", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Lt_NotEq", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7faaf441fd30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7faaf441fd30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 24.67s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] != 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero / (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "be525d4582404febb3b004b89ade09b6", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Sub", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 10, "start_pos": [125, 24], "end_pos": [125, 25], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f61e6133cd0>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f61e6133cd0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n>       all_zero = balances[ 1] == 0\nE       IndexError: list index out of range\n\nsource/shuffle_dyck.py:125: IndexError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - IndexError: l...\n==================== 2 skipped, 1 warning, 1 error in 3.40s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -122,9 +122,9 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[ 1] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero - (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "cafe24ddf08f468382f40e9282508892", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_BitAnd", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ZeroIterationForLoop", "occurrence": 1, "start_pos": [109, 19], "end_pos": [109, 31], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 28.79s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -106,8 +106,8 @@\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n-    for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+    for balance in []:\n+        any_negative = any_negative & (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "a5b88976a7304c3187eb955213785b50", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceUnaryOperator_Invert_Not", "occurrence": 0, "start_pos": [134, 19], "end_pos": [134, 20], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-integer", "occurrence": 8, "start_pos": [110, 49], "end_pos": [110, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f2d4cf5bd90>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f2d4cf5bd90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < -1)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n>       not_has_neg = (not has_neg).named(\"not_has_neg\")\nE       AttributeError: 'bool' object has no attribute 'named'\n\nsource/shuffle_dyck.py:134: AttributeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AttributeErro...\n==================== 2 skipped, 1 warning, 1 error in 3.46s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance < -1)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -131,6 +131,6 @@\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n-    not_has_neg = (~has_neg).named(\"not_has_neg\")\n+    not_has_neg = (not has_neg).named(\"not_has_neg\")\n     return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "5044b144b88546ae9dc322493448fa7d", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Add", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.74\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f70eea43d90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f70eea43d90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 30.02s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero + (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "6086bf9b67794b11af903b400553cbff", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Lt_LtE", "occurrence": 1, "start_pos": [110, 47], "end_pos": [110, 48], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 20, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.88\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f5c89b2fdc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f5c89b2fdc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 30.51s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,14 +107,14 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance <= 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.FALSE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "c527f4cd842c4b309e8404ba991ff229", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-integer", "occurrence": 13, "start_pos": [127, 42], "end_pos": [127, 43], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 8, "start_pos": [76, 19], "end_pos": [76, 79], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fdb0a72bd60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fdb0a72bd60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.66s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1)) * -1\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance == -1)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "df0f95bc19cb41758e92e19e0954cda0", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 7, "start_pos": [95, 25], "end_pos": [95, 26], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 10, "start_pos": [125, 24], "end_pos": [125, 25], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f875a24bc10>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f875a24bc10>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 0\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n>       all_zero = balances[ 1] == 0\nE       IndexError: list index out of range\n\nsource/shuffle_dyck.py:125: IndexError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - IndexError: l...\n==================== 2 skipped, 1 warning, 1 error in 3.38s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) >= 0\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[ 1] == 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "1a3b58ea7fdf4c92aa4396ec31f2a411", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_LtE", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 4, "start_pos": [70, 17], "end_pos": [70, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ss('Attention patterns can currently only average binary variables. Not:', {0, -1})\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.28s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\") * -1\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] <= 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "28946b583671455491af283d50a462be", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_BitAnd", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_NotEq", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.04\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fbf17203be0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fbf17203be0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 27.95s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop != open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative & (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "3c71403435ba49cabd95bbd06b983395", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_LtE", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 9, "start_pos": [120, 78], "end_pos": [120, 79], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\nhas_neg: Numerical aggregate only supports 0 as default value.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.41s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop <= open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -117,7 +117,7 @@\n     select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n-    has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n+    has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default= 1)).named(\n         \"has_neg\"\n     )\n "}]
[{"job_id": "5123bf25281b4ff18c81249eb90980db", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 23, "start_pos": [125, 30], "end_pos": [125, 31], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 13, "start_pos": [127, 42], "end_pos": [127, 43], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7ff987623d30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7ff987623d30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 25.53s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -122,9 +122,9 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] == -1\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance == 1)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "071d5bc884c248b98ef8a05eaf09114d", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 4, "start_pos": [127, 39], "end_pos": [127, 41], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f1da3f1fe50>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f1da3f1fe50>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.21s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance >= 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "b59494bc0d2143f89510a15fa7eedbfc", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/AddNot", "occurrence": 0, "start_pos": [95, 11], "end_pos": [95, 26], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 13, "start_pos": [127, 42], "end_pos": [127, 43], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f1766423d60>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f1766423d60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n>       assert not len(pairs) >= 1\nE       AssertionError\n\nsource/shuffle_dyck.py:95: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.52s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert not len(pairs) >= 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance == 1)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "47c3c7e00f7f47ff8a7d46bf5b3d9396", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 7, "start_pos": [95, 25], "end_pos": [95, 26], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 10, "start_pos": [108, 28], "end_pos": [108, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fde8414bd90>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fde8414bd90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 0\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n>       any_negative = balances[ 1] < 0\nE       IndexError: list index out of range\n\nsource/shuffle_dyck.py:108: IndexError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - IndexError: l...\n==================== 2 skipped, 1 warning, 1 error in 3.58s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) >= 0\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[ 1] < 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n "}]
[{"job_id": "07eb2118100a4083b71147c3d07f24c9", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_LtE", "occurrence": 2, "start_pos": [100, 25], "end_pos": [100, 27], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [44, 38], "end_pos": [44, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.94\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f1b4962bdc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f1b4962bdc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 34.54s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices - 1, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) <= 2\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token"}]
[{"job_id": "665e8e011be94ed1a9913defe3a2d7c0", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 3, "start_pos": [76, 72], "end_pos": [76, 73], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [17, 24], "end_pos": [19, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f3d9e42be20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f3d9e42be20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.85s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens * -1, rasp.tokens, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 0, -1))\n     return pair_balance.named(\"pair_balance\")\n \n "}]
[{"job_id": "b2de0a56028c4746a52ec039a67005bf", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceUnaryOperator_Invert_Not", "occurrence": 0, "start_pos": [134, 19], "end_pos": [134, 20], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 11, "start_pos": [108, 28], "end_pos": [108, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f2677e3bd00>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f2677e3bd00>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[ -1] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n>       not_has_neg = (not has_neg).named(\"not_has_neg\")\nE       AttributeError: 'bool' object has no attribute 'named'\n\nsource/shuffle_dyck.py:134: AttributeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AttributeErro...\n==================== 2 skipped, 1 warning, 1 error in 3.01s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[ -1] < 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -131,6 +131,6 @@\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n-    not_has_neg = (~has_neg).named(\"not_has_neg\")\n+    not_has_neg = (not has_neg).named(\"not_has_neg\")\n     return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "e07657b0698546e292229205cd47651a", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_LtE", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 2, "start_pos": [100, 25], "end_pos": [100, 27], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f095b31fca0>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f095b31fca0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n>           assert len(pair) > 2\nE           AssertionError\n\nsource/shuffle_dyck.py:100: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.27s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) > 2\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] <= 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "11b20161d894416b9696c22737a5f050", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_BitOr", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 26, "start_pos": [127, 42], "end_pos": [127, 43], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.66\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fb959e03dc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fb959e03dc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.26s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance == 1)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n@@ -132,5 +132,5 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero | not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "5824d0b8e4b04646b2a4c292d376a25c", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_Mod", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 10, "start_pos": [125, 24], "end_pos": [125, 25], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f9fe0a0fdc0>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f9fe0a0fdc0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative % (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n>       all_zero = balances[ 1] == 0\nE       IndexError: list index out of range\n\nsource/shuffle_dyck.py:125: IndexError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - IndexError: l...\n==================== 2 skipped, 1 warning, 1 error in 3.64s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative % (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[ 1] == 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "b65446a7eab247edbb50200cf49e41dc", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_BitOr", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_GtE_LtE", "occurrence": 0, "start_pos": [95, 22], "end_pos": [95, 24], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 26.28s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) <= 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero | (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "2822a8dd54e244598649a34ebe2f2aa6", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fc7c962fd30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fc7c962fd30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 30.16s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.EQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop >= close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))"}]
[{"job_id": "d87c5c577c574532aa553754a3b7a2f1", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 3, "start_pos": [95, 25], "end_pos": [95, 26], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f14c7df3d60>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f14c7df3d60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n>       assert len(pairs) >= 2\nE       AssertionError\n\nsource/shuffle_dyck.py:95: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.17s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) >= 2\n \n     # Compute running balance of each type of parenthesis\n     balances = []"}]
[{"job_id": "90060298726c4f23b5a977d5e7147d97", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Lt", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-integer", "occurrence": 12, "start_pos": [126, 28], "end_pos": [126, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fd8f931bd00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fd8f931bd00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 41.45s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -122,8 +122,8 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n-    for balance in balances[1:]:\n+    all_zero = balances[0] < 0\n+    for balance in balances[ 0:]:\n         all_zero = all_zero & (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named("}]
[{"job_id": "394b4eed785f49c0b53d49f5a0e274cd", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mul", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-integer", "occurrence": 12, "start_pos": [126, 28], "end_pos": [126, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.78\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f8a6602bca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f8a6602bca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 39.31s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -123,10 +123,10 @@\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 0:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length * 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "4324948c5e684700b0b73242f4a23e9e", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_BitXor", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Lt_GtE", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fe0d5d4fc40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fe0d5d4fc40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 30.50s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -105,9 +105,9 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] >= 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative ^ (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "d8a9888c467f4adeb9135c7179833374", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 16, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 8, "start_pos": [110, 49], "end_pos": [110, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.98\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fc2f7353dc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fc2f7353dc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.21s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,14 +107,14 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance < 1)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "38cefff01827459aae4b7b59c3d6a519", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_IsNot", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 16, "start_pos": [110, 49], "end_pos": [110, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f90317f7d90>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f90317f7d90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck.py:102: in make_shuffle_dyck\n    balance = make_pair_balance(\nsource/shuffle_dyck.py:70: in make_pair_balance\n    bools_open = rasp.numerical(sop is not open_token).named(\"bools_open\")\n../../.venv/lib/python3.10/site-packages/tracr/rasp/rasp.py:721: in numerical\n    return annotate(sop, encoding=Encoding.NUMERICAL)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nexpr = True, annotations = {'encoding': <Encoding.NUMERICAL: 'numerical'>}\n\n    def annotate(expr: RASPExprT, **annotations) -> RASPExprT:\n      \"\"\"Creates a new expr with added annotations.\"\"\"\n>     new = expr.copy()\nE     AttributeError: 'bool' object has no attribute 'copy'\n\n../../.venv/lib/python3.10/site-packages/tracr/rasp/rasp.py:160: AttributeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AttributeErro...\n==================== 2 skipped, 1 warning, 1 error in 3.45s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop is not open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance < 1)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "04a0655c1e384dcaae6e723fa66a44be", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 3, "start_pos": [45, 26], "end_pos": [45, 65], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\naggregate: An aggregate's output encoding must match its input encoding. Input: Encoding.CATEGORICAL   Output: Encoding.NUMERICAL  \naggregate: An aggregate's output encoding must match its input encoding. Input: Encoding.CATEGORICAL   Output: Encoding.NUMERICAL  \nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.27s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -42,7 +42,7 @@\n     \"\"\"\n     bools = rasp.numerical(bools)\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0) * -1).named(\"frac_prevs\")\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:"}]
[{"job_id": "6c7edf318d3d401d8bd12c762c404002", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 5, "start_pos": [108, 28], "end_pos": [108, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fd712e17ee0>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fd712e17ee0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n>       any_negative = balances[ 1] < 0\nE       IndexError: list index out of range\n\nsource/shuffle_dyck.py:108: IndexError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - IndexError: l...\n==================== 2 skipped, 1 warning, 1 error in 3.38s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LT)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[ 1] < 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n "}]
[{"job_id": "72e472d1cdc947ecbd6d2b7c963ed79e", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 10, "start_pos": [125, 24], "end_pos": [125, 25], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f221acffdc0>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f221acffdc0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n>       all_zero = balances[ 1] == 0\nE       IndexError: list index out of range\n\nsource/shuffle_dyck.py:125: IndexError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - IndexError: l...\n==================== 2 skipped, 1 warning, 1 error in 3.18s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop >= close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[ 1] == 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "392a3afb78414f9a806c87efe357dfa4", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f1ce176ba00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f1ce176ba00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.66s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -67,10 +67,10 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop >= open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop > close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))"}]
[{"job_id": "0ff981fc5c35467793d139da25d79719", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 4, "start_pos": [127, 39], "end_pos": [127, 41], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.9\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f907195bdc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f907195bdc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.48s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance > 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "340d8a1ab06741e6a1f56b1a320741b5", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 17, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [17, 24], "end_pos": [19, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.88\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f4e7f403e80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f4e7f403e80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.42s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GT).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "30f67d21b97b464093841a33d67b4244", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_LtE", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 11, "start_pos": [120, 14], "end_pos": [122, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 29.03s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -119,10 +119,10 @@\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n         \"has_neg\"\n-    )\n+    ) * -1\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] <= 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "f8ae6d9c1785417391c4bea1c95b6129", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Mul", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 21, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f09e8953ca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f09e8953ca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 26.79s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -124,9 +124,9 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero * (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.LT).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "3d109c3d633e43188fa4d7578c79a655", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Div", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [17, 24], "end_pos": [19, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.78\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f4051bfbeb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f4051bfbeb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 31.63s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens * -1, rasp.Comparison.TRUE\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length / 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "1aa0abbc9c8148c6bd0ea1d0aee2f349", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_BitAnd", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-integer", "occurrence": 13, "start_pos": [127, 42], "end_pos": [127, 43], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 27.50s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative & (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance == -1)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "cdb4a8792d8c47e8bbede3e0fc370c6d", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_BitXor", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 26, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fb53ed5bd00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fb53ed5bd00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 27.64s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative ^ (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.NEQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "bee3ab5ebd5347bc94d9f62e7db062bd", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 26, "start_pos": [127, 42], "end_pos": [127, 43], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.74\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7ffb12333c10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7ffb12333c10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.84s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -122,9 +122,9 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] > 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance == 1)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "b7bdebcfc05845ccbf06e4fe28aa8517", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Lt_Gt", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 4, "start_pos": [70, 17], "end_pos": [70, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ss('Attention patterns can currently only average binary variables. Not:', {0, -1})\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.10s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\") * -1\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] > 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n "}]
[{"job_id": "3eba5117a08945aebc4d8d46e21cd02e", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 5, "start_pos": [108, 28], "end_pos": [108, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 12, "start_pos": [120, 29], "end_pos": [120, 80], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fe59f74fcd0>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fe59f74fcd0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n>       any_negative = balances[ 1] < 0\nE       IndexError: list index out of range\n\nsource/shuffle_dyck.py:108: IndexError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - IndexError: l...\n==================== 2 skipped, 1 warning, 1 error in 3.24s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[ 1] < 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -117,7 +117,7 @@\n     select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n-    has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n+    has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0) * -1).named(\n         \"has_neg\"\n     )\n "}]
[{"job_id": "4653a1c6d9014d7988d7ad4e2e3a68af", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_Sub", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Pow", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fb05dd27d30>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fb05dd27d30>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative - (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n        not_has_neg = (~has_neg).named(\"not_has_neg\")\n>       return (last_zero ** not_has_neg).named(\"shuffle_dyck\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'Aggregate' and 'Map'\n\nsource/shuffle_dyck.py:135: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - TypeError: un...\n==================== 2 skipped, 1 warning, 1 error in 3.46s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative - (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -132,5 +132,5 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero ** not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "3bcf3803124c4a2d9934cf0cf30d5162", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.74\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fed59423df0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fed59423df0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.16s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GT)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n "}]
[{"job_id": "15aa70fb151c49cab6a77fe47bb7576a", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceUnaryOperator_Delete_USub", "occurrence": 0, "start_pos": [76, 75], "end_pos": [76, 76], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 21, "start_pos": [125, 24], "end_pos": [125, 25], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f3a1b9f3d00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f3a1b9f3d00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 25.38s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, 1))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[ -1] == 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "5ede1c7c5ef64f38bcb88674830044be", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 22, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [43, 12], "end_pos": [43, 33], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\nopens: An aggregate's output encoding must match its input encoding. Input: Encoding.NUMERICAL   Output: Encoding.CATEGORICAL  \ncloses: An aggregate's output encoding must match its input encoding. Input: Encoding.NUMERICAL   Output: Encoding.CATEGORICAL  \nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.43s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -40,7 +40,7 @@\n       frac_prevs: SOp mapping an input to a sequence, where every element\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n-    bools = rasp.numerical(bools)\n+    bools = rasp.numerical(bools) * -1\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.LT).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "4de3050689b04dba91a30dda2a32ab3a", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Lt_Eq", "occurrence": 1, "start_pos": [110, 47], "end_pos": [110, 48], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 3, "start_pos": [117, 43], "end_pos": [117, 55], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 32.11s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,14 +107,14 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance == 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices + 1, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "5804e23549fa4963ab9e5d468592e289", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_BitOr", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Lt_Eq", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.66\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f9ec99dbdc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f9ec99dbdc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.72s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] == 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -132,5 +132,5 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero | not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "265e83da6a5e48c6901ef8a44b36c7a1", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [45, 63], "end_pos": [45, 64], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 7, "start_pos": [129, 18], "end_pos": [131, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\nopens: Numerical aggregate only supports 0 as default value.\ncloses: Numerical aggregate only supports 0 as default value.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.50s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -42,7 +42,7 @@\n     \"\"\"\n     bools = rasp.numerical(bools)\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    return rasp.numerical(rasp.Aggregate(prevs, bools, default= -1)).named(\"frac_prevs\")\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1 * -1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "986cb95b2a7c4637bc19a03e1b8e7cf6", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Lt", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 15, "start_pos": [109, 28], "end_pos": [109, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fcfb5c1bdc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fcfb5c1bdc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 24.21s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop < open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -106,7 +106,7 @@\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n-    for balance in balances[1:]:\n+    for balance in balances[ 0:]:\n         any_negative = any_negative | (balance < 0)\n \n     # Convert to numerical SOp"}]
[{"job_id": "f4d8051ea8ad4493aa49c9f9e1d6a7bd", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_Sub_Mod", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Add", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f90b854fc70>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f90b854fc70>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n>       select_last = rasp.Select(rasp.indices, length % 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\nE       TypeError: unsupported operand type(s) for %: 'SelectorWidth' and 'int'\n\nsource/shuffle_dyck.py:129: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - TypeError: un...\n==================== 2 skipped, 1 warning, 1 error in 3.33s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -126,11 +126,11 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length % 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero + not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "4c6f8a24c07d423eb59a7c74d9a3b483", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 9, "start_pos": [113, 19], "end_pos": [115, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\nhas_neg: An aggregate's output encoding must match its input encoding. Input: Encoding.NUMERICAL   Output: Encoding.CATEGORICAL  \nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.21s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -112,7 +112,7 @@\n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n         \"any_negative\"\n-    )\n+    ) * -1\n \n     select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n         \"select_all\"\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] >= 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "bd627ee8ee134e549e57f31ab9b88c50", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 20, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [44, 12], "end_pos": [44, 72], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.04\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f1e5351fd30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f1e5351fd30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 32.37s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices * -1, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.FALSE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "59f867ff22d14181b1fa33be1a6555a0", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_RShift", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 23, "start_pos": [125, 30], "end_pos": [125, 31], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f3b23023df0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f3b23023df0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 29.01s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -122,9 +122,9 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] == -1\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero >> (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "a2d91036234c471b990c4eaf73cd33b8", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 9, "start_pos": [113, 19], "end_pos": [115, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\nhas_neg: An aggregate's output encoding must match its input encoding. Input: Encoding.NUMERICAL   Output: Encoding.CATEGORICAL  \nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.23s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.EQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -112,7 +112,7 @@\n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n         \"any_negative\"\n-    )\n+    ) * -1\n \n     select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n         \"select_all\""}]
[{"job_id": "4ae9bf09c9d8471bbf494d27523d2c91", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 6, "start_pos": [95, 25], "end_pos": [95, 26], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 5, "start_pos": [71, 12], "end_pos": [71, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f7de642bd90>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f7de642bd90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n>       assert len(pairs) >= 2\nE       AssertionError\n\nsource/shuffle_dyck.py:95: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 2.65s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -68,7 +68,7 @@\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n-    opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n+    opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\") * -1\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) >= 2\n \n     # Compute running balance of each type of parenthesis\n     balances = []"}]
[{"job_id": "3963fb840ce543aea3d5175acef3f1ac", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_LtE", "occurrence": 0, "start_pos": [70, 36], "end_pos": [70, 38], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 22, "start_pos": [125, 30], "end_pos": [125, 31], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f0cbe337dc0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f0cbe337dc0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 27.08s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -67,7 +67,7 @@\n       pair_balance: SOp mapping an input to a sequence, where every element\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n-    bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n+    bools_open = rasp.numerical(sop <= open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] == 1\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "31c551c87f544266a50394dd91b843a2", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 4, "start_pos": [127, 39], "end_pos": [127, 41], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [44, 12], "end_pos": [44, 72], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.88\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f2c47dffdf0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f2c47dffdf0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 31.78s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices * -1, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero & (balance >= 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "6fe97342987a4f21af61b055d483ce84", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceUnaryOperator_USub_Invert", "occurrence": 0, "start_pos": [76, 75], "end_pos": [76, 76], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-integer", "occurrence": 4, "start_pos": [100, 28], "end_pos": [100, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f42c703bd60>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f42c703bd60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n>           assert len(pair) == 1\nE           AssertionError\n\nsource/shuffle_dyck.py:100: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.36s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, ~1))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) == 1\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token"}]
[{"job_id": "01d3a605118c41aca3b6bac7f06b86d0", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Lt_LtE", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.88\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fe42ccffcd0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fe42ccffcd0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 25.56s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.LT\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] <= 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n "}]
[{"job_id": "c4b1bea9eeee4f07ac8de9a1c85f63c2", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 28, "start_pos": [129, 53], "end_pos": [129, 54], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 5, "start_pos": [117, 17], "end_pos": [119, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.94\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f0c53407e50>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f0c53407e50>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 32.43s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices * -1, rasp.Comparison.TRUE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 2, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "8c37361292374a6dbf941d6ba92e9d9e", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_GtE_Lt", "occurrence": 0, "start_pos": [95, 22], "end_pos": [95, 24], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 2, "start_pos": [76, 76], "end_pos": [76, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fbb8a33bc40>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fbb8a33bc40>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n>       assert len(pairs) < 1\nE       AssertionError\n\nsource/shuffle_dyck.py:95: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.40s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, - 2))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) < 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []"}]
[{"job_id": "e7d8e9f6633140809ceb8b58f46333c5", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 13, "start_pos": [108, 33], "end_pos": [108, 34], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 14, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.88\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f947c74fd90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f947c74fd90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 31.28s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] < -1\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n \n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.EQ).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]
[{"job_id": "9fc78975d2dd4263a65c3f6f671ade63", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Gt", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 23, "start_pos": [129, 56], "end_pos": [129, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.78\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f806ca37df0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f806ca37df0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 30.87s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -122,11 +122,11 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] > 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.LEQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "935444243142493492caad6db66a6184", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_NotEq", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 11, "start_pos": [120, 14], "end_pos": [122, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.04\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f9e40517d30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f9e40517d30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 26.15s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop != close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n@@ -119,7 +119,7 @@\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n         \"has_neg\"\n-    )\n+    ) * -1\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0"}]
[{"job_id": "c92d3538284e4899abb87880ba8139b4", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_GtE_LtE", "occurrence": 0, "start_pos": [95, 22], "end_pos": [95, 24], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 2, "start_pos": [45, 11], "end_pos": [45, 86], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.84\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fb0a671fcd0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fb0a671fcd0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 31.35s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -42,7 +42,7 @@\n     \"\"\"\n     bools = rasp.numerical(bools)\n     prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n-    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n+    return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\") * -1\n \n \n def make_pair_balance(sop: rasp.SOp, open_token: str, close_token: str) -> rasp.SOp:\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) <= 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []"}]
[{"job_id": "3d970e40c6c743a78e569f8fa3f7ff37", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_RShift", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 28, "start_pos": [129, 53], "end_pos": [129, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.94\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f6173643cd0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f6173643cd0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.61s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative >> (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -126,7 +126,7 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length - 2, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")"}]
[{"job_id": "5b934608decc4e398e3da3a2b85fbc13", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 2, "start_pos": [77, 4], "end_pos": [77, 45], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 5, "start_pos": [71, 12], "end_pos": [71, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssUnsupported RASP expressions:\npair_balance: LinearSequenceMap only supports numerical inputs/outputs.\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 2.79s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -68,13 +68,13 @@\n         is the fraction of previous open tokens minus previous close tokens.\n     \"\"\"\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n-    opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n+    opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\") * -1\n \n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n-    return pair_balance.named(\"pair_balance\")\n+    return pair_balance.named(\"pair_balance\") * -1\n \n \n def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:"}]
[{"job_id": "7d9db53c269a430d8c4720b5090856f5", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Mul", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/increment-integer", "occurrence": 8, "start_pos": [110, 49], "end_pos": [110, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 28.52s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative | (balance < 1)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n@@ -132,5 +132,5 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero * not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "5e70e86b011141a3890672b25d493363", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceUnaryOperator_Invert_UAdd", "occurrence": 0, "start_pos": [134, 19], "end_pos": [134, 20], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 23, "start_pos": [125, 30], "end_pos": [125, 31], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f3e12c03e50>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f3e12c03e50>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == -1\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n>       not_has_neg = (+has_neg).named(\"not_has_neg\")\nE       TypeError: bad operand type for unary +: 'Aggregate'\n\nsource/shuffle_dyck.py:134: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - TypeError: ba...\n==================== 2 skipped, 1 warning, 1 error in 3.26s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] == -1\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n@@ -131,6 +131,6 @@\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n-    not_has_neg = (~has_neg).named(\"not_has_neg\")\n+    not_has_neg = (+has_neg).named(\"not_has_neg\")\n     return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "802db32a0a504182ba78a3fd2857bb0c", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_Pow", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/NumberReplacer", "occurrence": 3, "start_pos": [76, 72], "end_pos": [76, 73], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fe23f74bbe0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fe23f74bbe0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.79s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 0, -1))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative ** (balance < 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "bfe69525e3784ba3938d2f8b685f7e17", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceUnaryOperator_USub_Not", "occurrence": 0, "start_pos": [76, 75], "end_pos": [76, 76], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-integer", "occurrence": 10, "start_pos": [125, 24], "end_pos": [125, 25], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f5da1fffca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f5da1fffca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.62s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, not 1))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[ -1] == 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n "}]
[{"job_id": "bcfc3c57d46a4c22ae6c64d5c1c75383", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_BitOr", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_GtE", "occurrence": 3, "start_pos": [125, 27], "end_pos": [125, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.48\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f44dff37cd0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f44dff37cd0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 30.71s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -122,7 +122,7 @@\n     )\n \n     # Check if all balances are 0 at the end -> closed all parentheses\n-    all_zero = balances[0] == 0\n+    all_zero = balances[0] >= 0\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n@@ -132,5 +132,5 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero | not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "d092bd8f9be84cc6ad1d8bcc0ff39774", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_BitOr", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_GtE_Lt", "occurrence": 0, "start_pos": [95, 22], "end_pos": [95, 24], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fa13fbefd60>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fa13fbefd60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n>       assert len(pairs) < 1\nE       AssertionError\n\nsource/shuffle_dyck.py:95: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.35s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -92,7 +92,7 @@\n     Args:\n       pairs: List of pairs of open and close tokens that each should be balanced.\n     \"\"\"\n-    assert len(pairs) >= 1\n+    assert len(pairs) < 1\n \n     # Compute running balance of each type of parenthesis\n     balances = []\n@@ -132,5 +132,5 @@\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero | not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "2f46ac73aaea48ffbf90039792cd3c11", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Mul", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [44, 52], "end_pos": [44, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.94\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f4bb2be7d30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f4bb2be7d30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.39s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -41,7 +41,7 @@\n         is the fraction of previous \"True\" tokens.\n     \"\"\"\n     bools = rasp.numerical(bools)\n-    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LEQ)\n+    prevs = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.LT)\n     return rasp.numerical(rasp.Aggregate(prevs, bools, default=0)).named(\"frac_prevs\")\n \n \n@@ -124,7 +124,7 @@\n     # Check if all balances are 0 at the end -> closed all parentheses\n     all_zero = balances[0] == 0\n     for balance in balances[1:]:\n-        all_zero = all_zero & (balance == 0)\n+        all_zero = all_zero * (balance == 0)\n \n     select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n         \"select_last\""}]
[{"job_id": "3b9ad3009e82476fbd7f56cb2992593b", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Lt_Eq", "occurrence": 0, "start_pos": [108, 31], "end_pos": [108, 32], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [18, 34], "end_pos": [18, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  0.96\nF\n\n=================================== FAILURES ===================================\n__________________________ TestShuffleDyck.test_model __________________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f47b47ffcd0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_shuffle_dyck.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f47b47ffcd0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.93s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -15,7 +15,7 @@\n         is the length of that sequence.\n     \"\"\"\n     all_true_selector = rasp.Select(\n-        rasp.tokens, rasp.tokens, rasp.Comparison.TRUE\n+        rasp.tokens, rasp.tokens, rasp.Comparison.NEQ\n     ).named(\"all_true_selector\")\n     return rasp.SelectorWidth(all_true_selector).named(\"length\")\n \n@@ -105,7 +105,7 @@\n         balances.append(balance)\n \n     # Check if balances where negative anywhere -> parentheses not balanced\n-    any_negative = balances[0] < 0\n+    any_negative = balances[0] == 0\n     for balance in balances[1:]:\n         any_negative = any_negative | (balance < 0)\n "}]
[{"job_id": "b7b8c8eb7a5c452c88ed6db62c2677e9", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceUnaryOperator_Invert_UAdd", "occurrence": 0, "start_pos": [134, 19], "end_pos": [134, 20], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 20, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f8bce243df0>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f8bce243df0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.FALSE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n>       not_has_neg = (+has_neg).named(\"not_has_neg\")\nE       TypeError: bad operand type for unary +: 'Aggregate'\n\nsource/shuffle_dyck.py:134: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - TypeError: ba...\n==================== 2 skipped, 1 warning, 1 error in 3.29s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.FALSE).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n@@ -131,6 +131,6 @@\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n-    not_has_neg = (~has_neg).named(\"not_has_neg\")\n+    not_has_neg = (+has_neg).named(\"not_has_neg\")\n     return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "2d314f3adab54452891435d7937689d2", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Add", "occurrence": 0, "start_pos": [127, 28], "end_pos": [127, 29], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_Mod", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "70b4ae48936b451cb70bb9da2030f682", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceUnaryOperator_Delete_USub", "occurrence": 0, "start_pos": [76, 75], "end_pos": [76, 76], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/decrement-integer", "occurrence": 4, "start_pos": [100, 28], "end_pos": [100, 29], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f7359c23d90>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f7359c23d90>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n>           assert len(pair) == 1\nE           AssertionError\n\nsource/shuffle_dyck.py:100: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.27s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -73,7 +73,7 @@\n     bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n-    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n+    pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, 1))\n     return pair_balance.named(\"pair_balance\")\n \n \n@@ -97,7 +97,7 @@\n     # Compute running balance of each type of parenthesis\n     balances = []\n     for pair in pairs:\n-        assert len(pair) == 2\n+        assert len(pair) == 1\n         open_token, close_token = pair\n         balance = make_pair_balance(\n             rasp.tokens, open_token=open_token, close_token=close_token"}]
[{"job_id": "cdbe2f962e9c453eb0b3573f944232d6", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_Sub_BitOr", "occurrence": 0, "start_pos": [129, 51], "end_pos": [129, 52], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitAnd_FloorDiv", "occurrence": 1, "start_pos": [135, 22], "end_pos": [135, 23], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f0b3bb1fca0>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7f0b3bb1fca0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npairs = ['()']\n\n    def make_shuffle_dyck(pairs: List[str]) -> rasp.SOp:\n        \"\"\"Returns 1 if a set of parentheses are balanced, 0 else.\n    \n         (As implemented in the RASP paper.)\n    \n        Example usage:\n          shuffle_dyck2 = make_shuffle_dyck(pairs=[\"()\", \"{}\"])\n          shuffle_dyck2(\"({)}\")\n          >> [1, 1, 1, 1]\n          shuffle_dyck2(\"(){)}\")\n          >> [0, 0, 0, 0, 0]\n    \n        Args:\n          pairs: List of pairs of open and close tokens that each should be balanced.\n        \"\"\"\n        assert len(pairs) >= 1\n    \n        # Compute running balance of each type of parenthesis\n        balances = []\n        for pair in pairs:\n            assert len(pair) == 2\n            open_token, close_token = pair\n            balance = make_pair_balance(\n                rasp.tokens, open_token=open_token, close_token=close_token\n            ).named(f\"balance_{pair}\")\n            balances.append(balance)\n    \n        # Check if balances where negative anywhere -> parentheses not balanced\n        any_negative = balances[0] < 0\n        for balance in balances[1:]:\n            any_negative = any_negative | (balance < 0)\n    \n        # Convert to numerical SOp\n        any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named(\n            \"any_negative\"\n        )\n    \n        select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n            \"select_all\"\n        )\n        has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named(\n            \"has_neg\"\n        )\n    \n        # Check if all balances are 0 at the end -> closed all parentheses\n        all_zero = balances[0] == 0\n        for balance in balances[1:]:\n            all_zero = all_zero & (balance == 0)\n    \n        select_last = rasp.Select(rasp.indices, length | 1, rasp.Comparison.EQ).named(\n            \"select_last\"\n        )\n        last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n    \n        not_has_neg = (~has_neg).named(\"not_has_neg\")\n>       return (last_zero // not_has_neg).named(\"shuffle_dyck\")\nE       TypeError: unsupported operand type(s) for //: 'Aggregate' and 'Map'\n\nsource/shuffle_dyck.py:135: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - TypeError: un...\n==================== 2 skipped, 1 warning, 1 error in 3.49s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -126,11 +126,11 @@\n     for balance in balances[1:]:\n         all_zero = all_zero & (balance == 0)\n \n-    select_last = rasp.Select(rasp.indices, length - 1, rasp.Comparison.EQ).named(\n+    select_last = rasp.Select(rasp.indices, length | 1, rasp.Comparison.EQ).named(\n         \"select_last\"\n     )\n     last_zero = rasp.Aggregate(select_last, all_zero).named(\"last_zero\")\n \n     not_has_neg = (~has_neg).named(\"not_has_neg\")\n-    return (last_zero & not_has_neg).named(\"shuffle_dyck\")\n+    return (last_zero // not_has_neg).named(\"shuffle_dyck\")\n "}]
[{"job_id": "1be7b426dfaa4ef1a8df75617917f98b", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceBinaryOperator_BitOr_Add", "occurrence": 0, "start_pos": [110, 36], "end_pos": [110, 37], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Lt_NotEq", "occurrence": 1, "start_pos": [110, 47], "end_pos": [110, 48], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 26.45s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -107,7 +107,7 @@\n     # Check if balances where negative anywhere -> parentheses not balanced\n     any_negative = balances[0] < 0\n     for balance in balances[1:]:\n-        any_negative = any_negative | (balance < 0)\n+        any_negative = any_negative + (balance != 0)\n \n     # Convert to numerical SOp\n     any_negative = rasp.numerical(rasp.Map(lambda x: x, any_negative)).named("}]
[{"job_id": "474dd6d644284151b00941c4d01d46cb", "mutations": [{"module_path": "source/shuffle_dyck.py", "operator_name": "core/ReplaceComparisonOperator_Eq_Is", "occurrence": 1, "start_pos": [73, 37], "end_pos": [73, 39], "operator_args": {}}, {"module_path": "source/shuffle_dyck.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 17, "start_pos": [117, 57], "end_pos": [117, 77], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_shuffle_dyck.py ssE\n\n==================================== ERRORS ====================================\n_________________ ERROR at setup of TestShuffleDyck.test_model _________________\n\nself = <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fb139133d30>\nmethod = <bound method TestShuffleDyck.test_model of <tests.test_shuffle_dyck.TestShuffleDyck object at 0x7fb139133d30>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_shuffle_dyck([\"()\"]), \"shuffle_dyck1\")\n\ntests/test_shuffle_dyck.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/shuffle_dyck.py:102: in make_shuffle_dyck\n    balance = make_pair_balance(\nsource/shuffle_dyck.py:73: in make_pair_balance\n    bools_close = rasp.numerical(sop is close_token).named(\"bools_close\")\n../../.venv/lib/python3.10/site-packages/tracr/rasp/rasp.py:721: in numerical\n    return annotate(sop, encoding=Encoding.NUMERICAL)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nexpr = False, annotations = {'encoding': <Encoding.NUMERICAL: 'numerical'>}\n\n    def annotate(expr: RASPExprT, **annotations) -> RASPExprT:\n      \"\"\"Creates a new expr with added annotations.\"\"\"\n>     new = expr.copy()\nE     AttributeError: 'bool' object has no attribute 'copy'\n\n../../.venv/lib/python3.10/site-packages/tracr/rasp/rasp.py:160: AttributeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_shuffle_dyck.py::TestShuffleDyck::test_model - AttributeErro...\n==================== 2 skipped, 1 warning, 1 error in 3.51s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/shuffle_dyck.py\n+++ bsource/shuffle_dyck.py\n@@ -70,7 +70,7 @@\n     bools_open = rasp.numerical(sop == open_token).named(\"bools_open\")\n     opens = rasp.numerical(make_frac_prevs(bools_open)).named(\"opens\")\n \n-    bools_close = rasp.numerical(sop == close_token).named(\"bools_close\")\n+    bools_close = rasp.numerical(sop is close_token).named(\"bools_close\")\n     closes = rasp.numerical(make_frac_prevs(bools_close)).named(\"closes\")\n \n     pair_balance = rasp.numerical(rasp.LinearSequenceMap(opens, closes, 1, -1))\n@@ -114,7 +114,7 @@\n         \"any_negative\"\n     )\n \n-    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.TRUE).named(\n+    select_all = rasp.Select(rasp.indices, rasp.indices, rasp.Comparison.GT).named(\n         \"select_all\"\n     )\n     has_neg = rasp.numerical(rasp.Aggregate(select_all, any_negative, default=0)).named("}]

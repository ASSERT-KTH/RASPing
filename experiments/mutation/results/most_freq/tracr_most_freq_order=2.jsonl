[{"job_id": "ce1704ddda1e46a7aa94704fcac75f43", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Sub", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [36, 38], "end_pos": [36, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.25s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,12 +33,12 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices + 1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "7d6a2db1c44a4f0cb08d1af060ade25f", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceUnaryOperator_USub_Invert", "occurrence": 0, "start_pos": [87, 11], "end_pos": [87, 12], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [68, 58], "end_pos": [68, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 38.50s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices + 1\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = ~1 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "7c12f18eea7e4331908354fa8fb62755", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 20, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [68, 58], "end_pos": [68, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f78f5f3fb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f78f5f3fb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 36.98s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.TRUE)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices - 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "9e42f2c29259497e969bdf76bf04d0e4", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitXor", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssE\n\n==================================== ERRORS ====================================\n__________________ ERROR at setup of TestMostFreq.test_model ___________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f355b9f3bb0>\nmethod = <bound method TestMostFreq.test_model of <tests.test_most_freq.TestMostFreq object at 0x7f355b9f3bb0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_sort_freq(self.maxLength), \"most-freq\")\n\ntests/test_most_freq.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmax_seq_len = 10\n\n    def make_sort_freq(max_seq_len: int) -> rasp.SOp:\n        \"\"\"Returns tokens sorted by the frequency they appear in the input.\n    \n        Tokens the appear the same amount of times are output in the same order as in\n        the input.\n    \n        Example usage:\n          sort = make_sort_freq(rasp.tokens, rasp.tokens, 5)\n          sort([2, 4, 2, 1])\n          >> [2, 2, 4, 1]\n    \n        Args:\n          max_seq_len: Maximum sequence length (used to ensure keys are unique)\n        \"\"\"\n>       hist = -1 ^ make_hist().named(\"hist\")\nE       TypeError: unsupported operand type(s) for ^: 'int' and 'SelectorWidth'\n\nsource/most_freq.py:87: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py::TestMostFreq::test_model - TypeError: unsuppor...\n==================== 2 skipped, 1 warning, 1 error in 3.35s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.LT).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 ^ make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "75299cba22b440b4bdf69c0bc5e4303d", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 4, "start_pos": [36, 14], "end_pos": [36, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.54s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos * -1, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key / i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "fc116ea8ea8945d5a0de97adcde9faf8", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_Sub", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.09s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x - min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 / make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "a1278c0987094750ad9d90fc1036b5c0", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitAnd", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [87, 12], "end_pos": [87, 13], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.08\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f870c61fbb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f870c61fbb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 19.49s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = - 0 & make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "ad6786178f214761bf1df95db86e5c8b", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Add", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_FloorDiv", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "41637527d4814b15a2c9e1fc1c2a50eb", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_FloorDiv", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 3, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f1624a27c10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f1624a27c10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 27.96s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.GT).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x // min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "8b9296c487704669b36f1da5a88c7122", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_RShift", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Pow", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for >>: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.23s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x >> min_key ** i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "88c8089d7aee49a3a1d497216f2d12f2", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Mul", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.08\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fb7f054bac0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fb7f054bac0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 36.90s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.NEQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i * max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "9198163679584e9c8394f0fd1a8669a7", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.74s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 / make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "bf70b2e20f924021a75be00996b5f7aa", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_LShift", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [14, 15], "end_pos": [16, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.08\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f612cc3b970>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f612cc3b970>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 25.75s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens * -1, rasp.Comparison.EQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i << max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "a7cbbfb1c5ce40ce8a90fbaae025b1c0", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_FloorDiv", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7ffaded37c10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7ffaded37c10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.58s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i // max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "91e6fed25a264c19a563d955f00a1522", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.18\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f92b414fb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f92b414fb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 39.96s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 + make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "d0bfd11506264e7bbdea456ef6cce5c0", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_Mod", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f29c655bc70>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f29c655bc70>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.94s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x % min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "03dc1cf1bb394573b70368a5a2bdfd06", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_RShift", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 2, "start_pos": [70, 4], "end_pos": [70, 39], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for >>: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.45s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,9 +65,9 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key >> i / max_seq_len, keys, rasp.indices\n     )\n-    return make_sort_unique(vals, keys)\n+    return make_sort_unique(vals, keys) * -1\n \n \n def make_sort_freq(max_seq_len: int) -> rasp.SOp:"}]
[{"job_id": "dd4e6dbefdaf4fae8e3e940d24cbd627", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitAnd", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/NumberReplacer", "occurrence": 3, "start_pos": [88, 73], "end_pos": [88, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for &: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.41s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x & min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -85,7 +85,7 @@\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n     hist = -1 * make_hist().named(\"hist\")\n-    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n+    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key= 0).named(\n         \"sort_freq\"\n     )\n "}]
[{"job_id": "fa0d543ad269437ab50b4b44fcb9be8b", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Add", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/NumberReplacer", "occurrence": 3, "start_pos": [88, 73], "end_pos": [88, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.24s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -85,7 +85,7 @@\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n     hist = -1 * make_hist().named(\"hist\")\n-    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n+    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key= 0).named(\n         \"sort_freq\"\n     )\n "}]
[{"job_id": "2b76041b9b164ae3bce50615e7201f58", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Sub", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.24s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 / make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "ab67030364f743bf89a5c6bdcf9b8cab", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitOr", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitAnd", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.02\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fbfd4f37be0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fbfd4f37be0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.99s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key | i & max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "89c811fa7f8043de95bde164ca9c51d6", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f47f8f1ba60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f47f8f1ba60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 39.81s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.TRUE).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.EQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")"}]
[{"job_id": "cbcc52ab4917435db86c7e51cd31cb5b", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [68, 58], "end_pos": [68, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f045c403b80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f045c403b80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 44.70s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices + 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "c762dd4ba23144dba1a84c6e87f2ddcd", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_RShift", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [14, 15], "end_pos": [16, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f47b6d5fac0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f47b6d5fac0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.04s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens * -1, rasp.tokens, rasp.Comparison.EQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i >> max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "8af7c534baab447eb6cf22e72632af28", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_Sub", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Sub", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.28s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x - min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "9f02e680aaf74650bf1a84de75f55490", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_LShift", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 2, "start_pos": [70, 4], "end_pos": [70, 39], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssE\n\n==================================== ERRORS ====================================\n__________________ ERROR at setup of TestMostFreq.test_model ___________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fe232c3fb80>\nmethod = <bound method TestMostFreq.test_model of <tests.test_most_freq.TestMostFreq object at 0x7fe232c3fb80>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_sort_freq(self.maxLength), \"most-freq\")\n\ntests/test_most_freq.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmax_seq_len = 10\n\n    def make_sort_freq(max_seq_len: int) -> rasp.SOp:\n        \"\"\"Returns tokens sorted by the frequency they appear in the input.\n    \n        Tokens the appear the same amount of times are output in the same order as in\n        the input.\n    \n        Example usage:\n          sort = make_sort_freq(rasp.tokens, rasp.tokens, 5)\n          sort([2, 4, 2, 1])\n          >> [2, 2, 4, 1]\n    \n        Args:\n          max_seq_len: Maximum sequence length (used to ensure keys are unique)\n        \"\"\"\n>       hist = -1 << make_hist().named(\"hist\")\nE       TypeError: unsupported operand type(s) for <<: 'int' and 'SelectorWidth'\n\nsource/most_freq.py:87: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py::TestMostFreq::test_model - TypeError: unsuppor...\n==================== 2 skipped, 1 warning, 1 error in 3.02s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -67,7 +67,7 @@\n     keys = rasp.SequenceMap(\n         lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n     )\n-    return make_sort_unique(vals, keys)\n+    return make_sort_unique(vals, keys) * -1\n \n \n def make_sort_freq(max_seq_len: int) -> rasp.SOp:\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 << make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "490d58bf69cd471b955ce209a5785f38", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.30s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.LEQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 / make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "f99cbd590ba74c579637533869ffe013", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_FloorDiv", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fc833defa00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fc833defa00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 24.57s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.NEQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i // max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "4bf85c9569734ea2b0e8470f1211f9e3", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [37, 4], "end_pos": [37, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f1b8373fb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f1b8373fb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 44.38s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.LT).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -34,7 +34,7 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals).named(\"sort\") * -1\n \n \n def make_sort("}]
[{"job_id": "6c35790a591b4365a3c8c75305c4b0f3", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_FloorDiv", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 2, "start_pos": [70, 4], "end_pos": [70, 39], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, //, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.26s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, //, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -67,7 +67,7 @@\n     keys = rasp.SequenceMap(\n         lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n     )\n-    return make_sort_unique(vals, keys)\n+    return make_sort_unique(vals, keys) * -1\n \n \n def make_sort_freq(max_seq_len: int) -> rasp.SOp:"}]
[{"job_id": "41bdc0da88844c47af5597d3b9f1eea7", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_Pow", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitOr", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fd6a89239a0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fd6a89239a0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 25.52s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x ** min_key * i | max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "d06d45edb2574316a6e4e2fb3556189d", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitXor", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [36, 38], "end_pos": [36, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssE\n\n==================================== ERRORS ====================================\n__________________ ERROR at setup of TestMostFreq.test_model ___________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f62c2c2b910>\nmethod = <bound method TestMostFreq.test_model of <tests.test_most_freq.TestMostFreq object at 0x7f62c2c2b910>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_sort_freq(self.maxLength), \"most-freq\")\n\ntests/test_most_freq.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmax_seq_len = 10\n\n    def make_sort_freq(max_seq_len: int) -> rasp.SOp:\n        \"\"\"Returns tokens sorted by the frequency they appear in the input.\n    \n        Tokens the appear the same amount of times are output in the same order as in\n        the input.\n    \n        Example usage:\n          sort = make_sort_freq(rasp.tokens, rasp.tokens, 5)\n          sort([2, 4, 2, 1])\n          >> [2, 2, 4, 1]\n    \n        Args:\n          max_seq_len: Maximum sequence length (used to ensure keys are unique)\n        \"\"\"\n>       hist = -1 ^ make_hist().named(\"hist\")\nE       TypeError: unsupported operand type(s) for ^: 'int' and 'SelectorWidth'\n\nsource/most_freq.py:87: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py::TestMostFreq::test_model - TypeError: unsuppor...\n==================== 2 skipped, 1 warning, 1 error in 3.23s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices - 1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 ^ make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "030ceb3d004747128859b6aab7bec589", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_Div", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Pow", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f9439d13b80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f9439d13b80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 25.33s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x ** min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "8adc33e0a88542d7a51e1116bfe5e18c", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_Mod", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f8857afbac0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f8857afbac0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.25s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.LT).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x % min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "f5461ded2c5c4277821c096eec794f04", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitAnd", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [14, 15], "end_pos": [16, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.08\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7feb0060bb20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7feb0060bb20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 42.33s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens * -1, rasp.Comparison.EQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 & make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "f815b31afab148579ded284116c56782", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitAnd", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, &, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.24s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,14 +31,14 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.EQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, &, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "777907f685d94b3f831b7eadd79b619d", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_Sub", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_LShift", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.25s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x - min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "a5b7b1e6c7a34b2480ef695399d8e466", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceUnaryOperator_USub_Not", "occurrence": 0, "start_pos": [87, 11], "end_pos": [87, 12], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [36, 38], "end_pos": [36, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssE\n\n==================================== ERRORS ====================================\n__________________ ERROR at setup of TestMostFreq.test_model ___________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f609ad1ba30>\nmethod = <bound method TestMostFreq.test_model of <tests.test_most_freq.TestMostFreq object at 0x7f609ad1ba30>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_sort_freq(self.maxLength), \"most-freq\")\n\ntests/test_most_freq.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/most_freq.py:88: in make_sort_freq\n    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\nsource/most_freq.py:67: in make_sort\n    keys = rasp.SequenceMap(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tracr.rasp.rasp.SequenceMap object at 0x7f609ad1a500>\nf = <function make_sort.<locals>.<lambda> at 0x7f609aef0a60>, fst = False\nsnd = indices\n\n    def __init__(\n        self,\n        f: Callable[[Value, Value], Value],\n        fst: SOp,\n        snd: SOp,\n    ):\n      super().__init__()\n    \n      if fst is snd:\n        logging.warning(\"Creating a SequenceMap with both inputs being the same \"\n                        \"SOp is discouraged. You should use a Map instead.\")\n    \n      self.f = f\n      self.fst = fst\n      self.snd = snd\n>     assert isinstance(self.fst, SOp)\nE     AssertionError\n\n../../.venv/lib/python3.10/site-packages/tracr/rasp/rasp.py:388: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.36s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices + 1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = not 1 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "5442fda7fbd1418fafedbb310dc808e6", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [14, 15], "end_pos": [16, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.08\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f00ea1ffaf0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f00ea1ffaf0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 41.59s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens * -1, rasp.tokens, rasp.Comparison.LT).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")"}]
[{"job_id": "5ec1e0d318504915a8b064a747dbb71a", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 19, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 2, "start_pos": [70, 4], "end_pos": [70, 39], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f8d1f13fbb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f8d1f13fbb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 40.26s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.NEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -67,7 +67,7 @@\n     keys = rasp.SequenceMap(\n         lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n     )\n-    return make_sort_unique(vals, keys)\n+    return make_sort_unique(vals, keys) * -1\n \n \n def make_sort_freq(max_seq_len: int) -> rasp.SOp:"}]
[{"job_id": "5f94e577d5414ae685c755cdcb0db43c", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_Mod", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Pow", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f780311ba30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f780311ba30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.17s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x % min_key * i ** max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "4bca83d146044d76b3539f7adc86cd1e", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_LShift", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceUnaryOperator_Delete_USub", "occurrence": 0, "start_pos": [87, 11], "end_pos": [87, 12], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.24s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = 1 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "792aad60ecba4d21be42799f0c4a59ee", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitXor", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [87, 12], "end_pos": [87, 13], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssE\n\n==================================== ERRORS ====================================\n__________________ ERROR at setup of TestMostFreq.test_model ___________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f6086e07b20>\nmethod = <bound method TestMostFreq.test_model of <tests.test_most_freq.TestMostFreq object at 0x7f6086e07b20>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_sort_freq(self.maxLength), \"most-freq\")\n\ntests/test_most_freq.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmax_seq_len = 10\n\n    def make_sort_freq(max_seq_len: int) -> rasp.SOp:\n        \"\"\"Returns tokens sorted by the frequency they appear in the input.\n    \n        Tokens the appear the same amount of times are output in the same order as in\n        the input.\n    \n        Example usage:\n          sort = make_sort_freq(rasp.tokens, rasp.tokens, 5)\n          sort([2, 4, 2, 1])\n          >> [2, 2, 4, 1]\n    \n        Args:\n          max_seq_len: Maximum sequence length (used to ensure keys are unique)\n        \"\"\"\n>       hist = - 2 ^ make_hist().named(\"hist\")\nE       TypeError: unsupported operand type(s) for ^: 'int' and 'SelectorWidth'\n\nsource/most_freq.py:87: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py::TestMostFreq::test_model - TypeError: unsuppor...\n==================== 2 skipped, 1 warning, 1 error in 3.52s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = - 2 ^ make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "970439802ddb45f89ccded76895cda29", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_RShift", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Add", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f2a19cfbaf0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f2a19cfbaf0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.73s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x >> min_key * i + max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "8cc4c4308c4147aba051dfef5f568c09", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Add", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 3, "start_pos": [88, 4], "end_pos": [90, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.24s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -87,5 +87,5 @@\n     hist = -1 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n-    )\n+    ) * -1\n "}]
[{"job_id": "83d1259cc82542ea9eb4bad71aba0131", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Mod", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 14, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssinteger division or modulo by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.61s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key % i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "9f2253e1ab8f4444b0896b3eb8aa0746", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitAnd", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [87, 12], "end_pos": [87, 13], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fa5b5fffbb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fa5b5fffbb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.41s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i & max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = - 2 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "1f06f74b262246dea2e2002929c2c2d5", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Sub", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [68, 58], "end_pos": [68, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.08\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f9d2cb4b970>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f9d2cb4b970>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 25.55s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i - max_seq_len, keys, rasp.indices - 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "c9d718eb49294c40bc1ddedc2ecd133c", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitXor", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitOr", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssE\n\n==================================== ERRORS ====================================\n__________________ ERROR at setup of TestMostFreq.test_model ___________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f084b14ba60>\nmethod = <bound method TestMostFreq.test_model of <tests.test_most_freq.TestMostFreq object at 0x7f084b14ba60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_sort_freq(self.maxLength), \"most-freq\")\n\ntests/test_most_freq.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmax_seq_len = 10\n\n    def make_sort_freq(max_seq_len: int) -> rasp.SOp:\n        \"\"\"Returns tokens sorted by the frequency they appear in the input.\n    \n        Tokens the appear the same amount of times are output in the same order as in\n        the input.\n    \n        Example usage:\n          sort = make_sort_freq(rasp.tokens, rasp.tokens, 5)\n          sort([2, 4, 2, 1])\n          >> [2, 2, 4, 1]\n    \n        Args:\n          max_seq_len: Maximum sequence length (used to ensure keys are unique)\n        \"\"\"\n>       hist = -1 ^ make_hist().named(\"hist\")\nE       TypeError: unsupported operand type(s) for ^: 'int' and 'SelectorWidth'\n\nsource/most_freq.py:87: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py::TestMostFreq::test_model - TypeError: unsuppor...\n==================== 2 skipped, 1 warning, 1 error in 3.36s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i | max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 ^ make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "781effff3f7f4b0db23087f53eb73d1c", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Add", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.25s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,14 +31,14 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.EQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "5ce9de9946bc414bab58016246fc5d96", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_FloorDiv", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Mul", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssE\n\n==================================== ERRORS ====================================\n__________________ ERROR at setup of TestMostFreq.test_model ___________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7feda5d47c10>\nmethod = <bound method TestMostFreq.test_model of <tests.test_most_freq.TestMostFreq object at 0x7feda5d47c10>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_sort_freq(self.maxLength), \"most-freq\")\n\ntests/test_most_freq.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmax_seq_len = 10\n\n    def make_sort_freq(max_seq_len: int) -> rasp.SOp:\n        \"\"\"Returns tokens sorted by the frequency they appear in the input.\n    \n        Tokens the appear the same amount of times are output in the same order as in\n        the input.\n    \n        Example usage:\n          sort = make_sort_freq(rasp.tokens, rasp.tokens, 5)\n          sort([2, 4, 2, 1])\n          >> [2, 2, 4, 1]\n    \n        Args:\n          max_seq_len: Maximum sequence length (used to ensure keys are unique)\n        \"\"\"\n>       hist = -1 // make_hist().named(\"hist\")\nE       TypeError: unsupported operand type(s) for //: 'int' and 'SelectorWidth'\n\nsource/most_freq.py:87: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py::TestMostFreq::test_model - TypeError: unsuppor...\n==================== 2 skipped, 1 warning, 1 error in 3.47s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 // make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "913bf11e8c18466db22c7feb698d7015", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_RShift", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [17, 4], "end_pos": [17, 53], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for >>: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.43s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -14,7 +14,7 @@\n     same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n         \"same_tok\"\n     )\n-    return rasp.SelectorWidth(same_tok).named(\"hist\")\n+    return rasp.SelectorWidth(same_tok).named(\"hist\") * -1\n \n \n def make_sort_unique(vals: rasp.SOp, keys: rasp.SOp) -> rasp.SOp:\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key >> i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "f6b122db283341119fdcbe72d0011a35", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitOr", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [17, 11], "end_pos": [17, 53], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, |, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.24s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -14,7 +14,7 @@\n     same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n         \"same_tok\"\n     )\n-    return rasp.SelectorWidth(same_tok).named(\"hist\")\n+    return rasp.SelectorWidth(same_tok).named(\"hist\") * -1\n \n \n def make_sort_unique(vals: rasp.SOp, keys: rasp.SOp) -> rasp.SOp:\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, |, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "9ba83b8d05e74d2fb1f8b2f65ba49579", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 13, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fdb0d3f3a90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fdb0d3f3a90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 37.00s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.TRUE).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key + i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "504be3c8854b4db79abfb532f2469f93", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Sub", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/NumberReplacer", "occurrence": 2, "start_pos": [88, 73], "end_pos": [88, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.72\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f6cc271bb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f6cc271bb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 30.11s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -84,8 +84,8 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n-    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n+    hist = -1 - make_hist().named(\"hist\")\n+    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key= 2).named(\n         \"sort_freq\"\n     )\n "}]
[{"job_id": "a190f5e4be4845b9ae0c5a3018a44764", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitAnd", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [34, 14], "end_pos": [34, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fb316e2f910>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fb316e2f910>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 24.01s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys * -1, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i & max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "4995f0a0bce44954980ea28edc763ee8", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [87, 12], "end_pos": [87, 13], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.02\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fda48633b20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fda48633b20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.63s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = - 0 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "a36e1aa5c4bf4e65aacfe5da84d45d81", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitXor", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for ^: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.49s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x ^ min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "563d2f4d6bde46099df466d78606cc04", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_LShift", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 17, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for <<: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.39s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.GT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key << i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "06b4453079b84bfda417daf6914a55bd", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_LShift", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for <<: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.47s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.TRUE).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key << i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "8c09d51c58c9416089f18b33b198f270", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Sub", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.24s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.TRUE).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "60d35752a55f4641b65f3fe08a6db97a", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitAnd", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for &: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.67s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.LT).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key & i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "7946280dd00c413eb3b0f87e859e3b03", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Mod", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Add", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssE\n\n==================================== ERRORS ====================================\n__________________ ERROR at setup of TestMostFreq.test_model ___________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fb29a83b9a0>\nmethod = <bound method TestMostFreq.test_model of <tests.test_most_freq.TestMostFreq object at 0x7fb29a83b9a0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_sort_freq(self.maxLength), \"most-freq\")\n\ntests/test_most_freq.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmax_seq_len = 10\n\n    def make_sort_freq(max_seq_len: int) -> rasp.SOp:\n        \"\"\"Returns tokens sorted by the frequency they appear in the input.\n    \n        Tokens the appear the same amount of times are output in the same order as in\n        the input.\n    \n        Example usage:\n          sort = make_sort_freq(rasp.tokens, rasp.tokens, 5)\n          sort([2, 4, 2, 1])\n          >> [2, 2, 4, 1]\n    \n        Args:\n          max_seq_len: Maximum sequence length (used to ensure keys are unique)\n        \"\"\"\n>       hist = -1 % make_hist().named(\"hist\")\nE       TypeError: unsupported operand type(s) for %: 'int' and 'SelectorWidth'\n\nsource/most_freq.py:87: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py::TestMostFreq::test_model - TypeError: unsuppor...\n==================== 2 skipped, 1 warning, 1 error in 3.25s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i + max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 % make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "6de722a0867743809c485b6d0294c756", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 17, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [37, 4], "end_pos": [37, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f4019a27af0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f4019a27af0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 36.89s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,8 +33,8 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.GT)\n+    return rasp.Aggregate(sel_new, vals).named(\"sort\") * -1\n \n \n def make_sort("}]
[{"job_id": "1be8ef87f7f34fe8b6fbd00eeb210755", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 2, "start_pos": [37, 11], "end_pos": [37, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fc1a3953be0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fc1a3953be0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 43.01s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -34,7 +34,7 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals).named(\"sort\") * -1\n \n \n def make_sort(\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 + make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "13c3d8d3321a42e092589a49a503d2fe", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_RShift", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_LShift", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f9b6da2fc70>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f9b6da2fc70>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.56s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key >> i << max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "1dddaef969484f48af8087d30cfdf8c3", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Add", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceUnaryOperator_USub_UAdd", "occurrence": 0, "start_pos": [87, 11], "end_pos": [87, 12], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.28s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = +1 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "da4bf34816c24e45a6c644af802fe0cb", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [37, 4], "end_pos": [37, 54], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 3, "start_pos": [88, 4], "end_pos": [90, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 39.74s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -34,7 +34,7 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals).named(\"sort\") * -1\n \n \n def make_sort(\n@@ -87,5 +87,5 @@\n     hist = -1 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n-    )\n+    ) * -1\n "}]
[{"job_id": "26145aef8b9c41c9ba68cddae611ccd1", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [36, 38], "end_pos": [36, 50], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [37, 4], "end_pos": [37, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f08d3b3fbe0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f08d3b3fbe0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 41.59s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,8 +33,8 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    sel_new = rasp.Select(target_pos, rasp.indices + 1, rasp.Comparison.EQ)\n+    return rasp.Aggregate(sel_new, vals).named(\"sort\") * -1\n \n \n def make_sort("}]
[{"job_id": "c5ef6e2dc1e2473a9a0db4ca091d0f8e", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Sub", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [17, 11], "end_pos": [17, 53], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.04\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f52cc54faf0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f52cc54faf0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 25.44s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -14,7 +14,7 @@\n     same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n         \"same_tok\"\n     )\n-    return rasp.SelectorWidth(same_tok).named(\"hist\")\n+    return rasp.SelectorWidth(same_tok).named(\"hist\") * -1\n \n \n def make_sort_unique(vals: rasp.SOp, keys: rasp.SOp) -> rasp.SOp:\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i - max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "484b0ffde5744269be75dc44604de493", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fd4d583fb20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fd4d583fb20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 35.51s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key + i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "f73545d97a4844cc88bfef6c9e88e9c1", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitOr", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_RShift", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, >>, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.27s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, >>, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x | min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "fcb70501b4e44a4db396b6b8e81abda8", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitXor", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [37, 4], "end_pos": [37, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for ^: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.41s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -34,7 +34,7 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals).named(\"sort\") * -1\n \n \n def make_sort(\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x ^ min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "c21e19f1eb784fe3beba8ebef06436f1", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitAnd", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for &: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.16s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x & min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "635d60f766814aafbcb6caf98485c0c9", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitOr", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceUnaryOperator_USub_UAdd", "occurrence": 0, "start_pos": [87, 11], "end_pos": [87, 12], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.04\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f511fb37a60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f511fb37a60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 37.16s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = +1 | make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "f019ebda3b7649109b26e064f78c3964", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_RShift", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceUnaryOperator_USub_UAdd", "occurrence": 0, "start_pos": [87, 11], "end_pos": [87, 12], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for >>: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.46s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x >> min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = +1 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "ca0f733bc7f6406ea42c34c12bde26d4", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_LShift", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [87, 12], "end_pos": [87, 13], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.08\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f8c5b233a60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f8c5b233a60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.05s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i << max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = - 0 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "15d285e988d04cecb562b8b98199589a", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitAnd", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [17, 4], "end_pos": [17, 53], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 33.31s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -14,7 +14,7 @@\n     same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n         \"same_tok\"\n     )\n-    return rasp.SelectorWidth(same_tok).named(\"hist\")\n+    return rasp.SelectorWidth(same_tok).named(\"hist\") * -1\n \n \n def make_sort_unique(vals: rasp.SOp, keys: rasp.SOp) -> rasp.SOp:\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 & make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "a870cc9bac124e8d800656180b194c3a", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_FloorDiv", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [87, 12], "end_pos": [87, 13], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssinteger division or modulo by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.13s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key // i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = - 0 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "3807d67fcb74456791da9077285de399", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/NumberReplacer", "occurrence": 3, "start_pos": [88, 73], "end_pos": [88, 74], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 0, "start_pos": [17, 11], "end_pos": [17, 53], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f8989133b20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f8989133b20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 24.56s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -14,7 +14,7 @@\n     same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n         \"same_tok\"\n     )\n-    return rasp.SelectorWidth(same_tok).named(\"hist\")\n+    return rasp.SelectorWidth(same_tok).named(\"hist\") * -1\n \n \n def make_sort_unique(vals: rasp.SOp, keys: rasp.SOp) -> rasp.SOp:\n@@ -85,7 +85,7 @@\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n     hist = -1 * make_hist().named(\"hist\")\n-    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n+    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key= 0).named(\n         \"sort_freq\"\n     )\n "}]
[{"job_id": "e106cbadf3e34ee18b145f54ac486491", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitAnd", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceUnaryOperator_Delete_USub", "occurrence": 0, "start_pos": [87, 11], "end_pos": [87, 12], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, &, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.25s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, &, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = 1 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "c053cae4be0341f7bbaa252858b61b50", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitAnd", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Add", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.08\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f3e30e13ca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f3e30e13ca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.15s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x & min_key * i + max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "e4cbc29166ee4d59ad1fbdeb435ba30a", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitXor", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [87, 12], "end_pos": [87, 13], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssE\n\n==================================== ERRORS ====================================\n__________________ ERROR at setup of TestMostFreq.test_model ___________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fd2b8f1bb20>\nmethod = <bound method TestMostFreq.test_model of <tests.test_most_freq.TestMostFreq object at 0x7fd2b8f1bb20>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_sort_freq(self.maxLength), \"most-freq\")\n\ntests/test_most_freq.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmax_seq_len = 10\n\n    def make_sort_freq(max_seq_len: int) -> rasp.SOp:\n        \"\"\"Returns tokens sorted by the frequency they appear in the input.\n    \n        Tokens the appear the same amount of times are output in the same order as in\n        the input.\n    \n        Example usage:\n          sort = make_sort_freq(rasp.tokens, rasp.tokens, 5)\n          sort([2, 4, 2, 1])\n          >> [2, 2, 4, 1]\n    \n        Args:\n          max_seq_len: Maximum sequence length (used to ensure keys are unique)\n        \"\"\"\n>       hist = - 2 ^ make_hist().named(\"hist\")\nE       TypeError: unsupported operand type(s) for ^: 'int' and 'SelectorWidth'\n\nsource/most_freq.py:87: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py::TestMostFreq::test_model - TypeError: unsuppor...\n==================== 2 skipped, 1 warning, 1 error in 3.29s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = - 2 ^ make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "6e0e4491386548fdbd4635f45e365db9", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Sub", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f3de623faf0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f3de623faf0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 36.96s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key - i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "77e5e8124abe4caa93817bcaa0bc0cf7", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Mod", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitOr", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, |, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.25s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, |, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i % max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "a7adbfca170e4ebb8b06c08590c2c235", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [68, 58], "end_pos": [68, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.04\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f5358b2bbe0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f5358b2bbe0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 39.43s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.LT).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices - 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "aa9e2cdd8381428ba41099cb40f1534e", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Mod", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [35, 17], "end_pos": [35, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, %, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.25s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -32,13 +32,13 @@\n       keys: Keys for sorting.\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n-    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n+    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\") * -1\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, %, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "630a632715804228887634dffc197cdf", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Pow", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 2, "start_pos": [37, 11], "end_pos": [37, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, **, max_seq_len: int, min_key: float\nE                                         ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.24s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -34,11 +34,11 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals).named(\"sort\") * -1\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, **, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "bce69e58fda746c7b543e38ac3984ae1", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_RShift", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitXor", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f2e8fa37c10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f2e8fa37c10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.81s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x >> min_key * i ^ max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "26c4c75c36be4e0da20b94cde22de353", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceUnaryOperator_USub_Not", "occurrence": 0, "start_pos": [87, 11], "end_pos": [87, 12], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [68, 58], "end_pos": [68, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssE\n\n==================================== ERRORS ====================================\n__________________ ERROR at setup of TestMostFreq.test_model ___________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f9d4300b910>\nmethod = <bound method TestMostFreq.test_model of <tests.test_most_freq.TestMostFreq object at 0x7f9d4300b910>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_sort_freq(self.maxLength), \"most-freq\")\n\ntests/test_most_freq.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsource/most_freq.py:88: in make_sort_freq\n    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\nsource/most_freq.py:67: in make_sort\n    keys = rasp.SequenceMap(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tracr.rasp.rasp.SequenceMap object at 0x7f9d4300a530>\nf = <function make_sort.<locals>.<lambda> at 0x7f9d431d8a60>, fst = False\nsnd = <tracr.rasp.rasp.Map object at 0x7f9d4300a590>\n\n    def __init__(\n        self,\n        f: Callable[[Value, Value], Value],\n        fst: SOp,\n        snd: SOp,\n    ):\n      super().__init__()\n    \n      if fst is snd:\n        logging.warning(\"Creating a SequenceMap with both inputs being the same \"\n                        \"SOp is discouraged. You should use a Map instead.\")\n    \n      self.f = f\n      self.fst = fst\n      self.snd = snd\n>     assert isinstance(self.fst, SOp)\nE     AssertionError\n\n../../.venv/lib/python3.10/site-packages/tracr/rasp/rasp.py:388: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n==================== 2 skipped, 1 warning, 1 error in 3.81s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices + 1\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = not 1 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "b96b76d2ad184877bde8dd16ff89f3e1", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [87, 12], "end_pos": [87, 13], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 2.81s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = - 0 / make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "1c5feff3f3a14dae96e39a20da7005f1", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_RShift", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceUnaryOperator_USub_UAdd", "occurrence": 0, "start_pos": [87, 11], "end_pos": [87, 12], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for >>: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.37s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key >> i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = +1 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "386b3f42dc3d4e259057d4bfddff8ef4", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_FloorDiv", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [36, 38], "end_pos": [36, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssinteger division or modulo by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.73s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices + 1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key // i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "931ee06def2041c8b2048579a4559576", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Pow", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.08\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fae72f5baf0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fae72f5baf0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 36.82s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.NEQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i ** max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "455105b927634bb881dfe99c8ace84e9", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [87, 12], "end_pos": [87, 13], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [68, 58], "end_pos": [68, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.08\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f888ee17a90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f888ee17a90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.44s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices - 1\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = - 0 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "3c1628471633416db59288c4cb15a165", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Pow", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 14, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fe41d957ca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fe41d957ca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 38.41s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i ** max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "4afc0bc03a7741669ea02875c227f539", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_LShift", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 1, "start_pos": [68, 58], "end_pos": [68, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.24s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices + 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "146275b22c3d4f1a9a6231e759283e02", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/decrement-integer", "occurrence": 1, "start_pos": [88, 73], "end_pos": [88, 74], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 4, "start_pos": [36, 14], "end_pos": [36, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f91b0e2fb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f91b0e2fb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 24.83s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos * -1, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -85,7 +85,7 @@\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n     hist = -1 * make_hist().named(\"hist\")\n-    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n+    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key= 0).named(\n         \"sort_freq\"\n     )\n "}]
[{"job_id": "61e0632088c945f29e90a0870ce1bced", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_FloorDiv", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Pow", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, **, max_seq_len: int, min_key: float\nE                                         ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.25s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, **, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 // make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "14543676218b4847af2d2b25645ee30f", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "42c2bef6a699454b9ef7985971723efc", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitAnd", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [68, 58], "end_pos": [68, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for &: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.81s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x & min_key * i / max_seq_len, keys, rasp.indices - 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "67d1a2fd94fc495eac4fb8add0758e05", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 18, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [14, 15], "end_pos": [16, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.02\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fad611f3a90>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fad611f3a90>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 46.41s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens * -1, rasp.tokens, rasp.Comparison.EQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.GEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "05d95dfcac964112871159749143de84", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitXor", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [14, 15], "end_pos": [16, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, ^, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.14s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens * -1, rasp.tokens, rasp.Comparison.EQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, ^, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "9db8895320be4f29b9f51b676dc9332f", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_Mul", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_FloorDiv", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssinteger division or modulo by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.44s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x * min_key // i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "b29ec515cc4b4796bda4b49f455417fd", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Sub", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_FloorDiv", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "1a8c314bb76d4503a6bf4c4fb49a9102", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitAnd", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitXor", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, ^, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.13s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, ^, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x & min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "833ad0af5f0d4ddf81db5617abf47211", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_LShift", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/NumberReplacer", "occurrence": 1, "start_pos": [87, 12], "end_pos": [87, 13], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.24s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = - 0 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "6dcd38207d184eef9a4d9aa095487e8e", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_FloorDiv", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssE\n\n==================================== ERRORS ====================================\n__________________ ERROR at setup of TestMostFreq.test_model ___________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f4eac34bac0>\nmethod = <bound method TestMostFreq.test_model of <tests.test_most_freq.TestMostFreq object at 0x7f4eac34bac0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_sort_freq(self.maxLength), \"most-freq\")\n\ntests/test_most_freq.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmax_seq_len = 10\n\n    def make_sort_freq(max_seq_len: int) -> rasp.SOp:\n        \"\"\"Returns tokens sorted by the frequency they appear in the input.\n    \n        Tokens the appear the same amount of times are output in the same order as in\n        the input.\n    \n        Example usage:\n          sort = make_sort_freq(rasp.tokens, rasp.tokens, 5)\n          sort([2, 4, 2, 1])\n          >> [2, 2, 4, 1]\n    \n        Args:\n          max_seq_len: Maximum sequence length (used to ensure keys are unique)\n        \"\"\"\n>       hist = -1 // make_hist().named(\"hist\")\nE       TypeError: unsupported operand type(s) for //: 'int' and 'SelectorWidth'\n\nsource/most_freq.py:87: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py::TestMostFreq::test_model - TypeError: unsuppor...\n==================== 2 skipped, 1 warning, 1 error in 3.22s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.LEQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 // make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "c69641adb22b4816907c777eadbe186e", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [36, 38], "end_pos": [36, 50], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [35, 17], "end_pos": [35, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7ff5ea13b970>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7ff5ea13b970>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 46.69s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -32,8 +32,8 @@\n       keys: Keys for sorting.\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n-    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\") * -1\n+    sel_new = rasp.Select(target_pos, rasp.indices - 1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "d68b65999cbd4920b76265ae3cbdfccc", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [68, 58], "end_pos": [68, 70], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [14, 15], "end_pos": [16, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.08\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fb434913ac0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fb434913ac0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 45.67s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens * -1, rasp.tokens, rasp.Comparison.EQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices - 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "80b778e94db64051b8d7d1995f70c1e8", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitOr", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitXor", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "169fb28cdf81413bbfa3d974ae0dbff4", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_RShift", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitOr", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, |, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.24s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, |, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x >> min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "b2ec3f0aef2b44368c83e94a17753cde", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-aggregate-value", "occurrence": 0, "start_pos": [37, 11], "end_pos": [37, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f736203bb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f736203bb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 35.59s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -34,7 +34,7 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals * -1).named(\"sort\")\n \n \n def make_sort(\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 + make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "8cfd3345989b4630b915fd5d50148eea", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 9, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 16, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fdf17e0ba00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fdf17e0ba00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 37.65s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,9 +31,9 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "d4ab498fba32421b84016ccd2e854545", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 17, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [14, 15], "end_pos": [16, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f1ec7817a30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f1ec7817a30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 41.10s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens * -1, rasp.Comparison.EQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.GT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "4eaac2662e354295ba0e5441189758d3", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 12, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/increment-integer", "occurrence": 1, "start_pos": [88, 73], "end_pos": [88, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fc93e35fca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fc93e35fca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.26s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.NEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -85,7 +85,7 @@\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n     hist = -1 * make_hist().named(\"hist\")\n-    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n+    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key= 2).named(\n         \"sort_freq\"\n     )\n "}]
[{"job_id": "2709b5df8e914012a76bafaaaab6ff0c", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_Pow", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 2, "start_pos": [70, 4], "end_pos": [70, 39], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f7f80d4bb20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f7f80d4bb20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 28.04s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,9 +65,9 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x ** min_key * i / max_seq_len, keys, rasp.indices\n     )\n-    return make_sort_unique(vals, keys)\n+    return make_sort_unique(vals, keys) * -1\n \n \n def make_sort_freq(max_seq_len: int) -> rasp.SOp:"}]
[{"job_id": "d8f5d257cdfa4e4e9cf1358743821d15", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_RShift", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fa840a13af0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fa840a13af0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.38s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.GEQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i >> max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "b22ba335798144c1ae7bcb79c9b7af46", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 0, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 3, "start_pos": [88, 4], "end_pos": [90, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fa5c8f4fbb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fa5c8f4fbb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 42.73s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.LT).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -87,5 +87,5 @@\n     hist = -1 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n-    )\n+    ) * -1\n "}]
[{"job_id": "f64f78d4a94f493b8d17d7e474a1db10", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 6, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 4, "start_pos": [36, 14], "end_pos": [36, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f1d2714fbb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f1d2714fbb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 41.16s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.TRUE).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos * -1, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "4d51fd2a3bf54d7cb000726ba9e84470", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Add", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.04\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fa506df3be0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fa506df3be0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.49s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.NEQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i + max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "0e20fcf4088b4c29ae0d5c7547499916", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_Pow", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.51s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x ** min_key / i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "cdce3b3187f94d44aa08c0c2d6e64f8a", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_RShift", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitXor", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for ^: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.55s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x >> min_key ^ i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "1f3aecb75f7c47b59d87928ac3563619", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Pow", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [34, 14], "end_pos": [34, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssE\n\n==================================== ERRORS ====================================\n__________________ ERROR at setup of TestMostFreq.test_model ___________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f0cd735bbb0>\nmethod = <bound method TestMostFreq.test_model of <tests.test_most_freq.TestMostFreq object at 0x7f0cd735bbb0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_sort_freq(self.maxLength), \"most-freq\")\n\ntests/test_most_freq.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmax_seq_len = 10\n\n    def make_sort_freq(max_seq_len: int) -> rasp.SOp:\n        \"\"\"Returns tokens sorted by the frequency they appear in the input.\n    \n        Tokens the appear the same amount of times are output in the same order as in\n        the input.\n    \n        Example usage:\n          sort = make_sort_freq(rasp.tokens, rasp.tokens, 5)\n          sort([2, 4, 2, 1])\n          >> [2, 2, 4, 1]\n    \n        Args:\n          max_seq_len: Maximum sequence length (used to ensure keys are unique)\n        \"\"\"\n>       hist = -1 ** make_hist().named(\"hist\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'int' and 'SelectorWidth'\n\nsource/most_freq.py:87: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py::TestMostFreq::test_model - TypeError: unsuppor...\n==================== 2 skipped, 1 warning, 1 error in 3.22s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys * -1, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 ** make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "1ee2f49aa1f14f39bf64eb6b2f39447c", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 5, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 7, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f0a9f623af0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f0a9f623af0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 37.03s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.NEQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.EQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")"}]
[{"job_id": "a7fdf6ebe3fb481ab105308542102ace", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceUnaryOperator_USub_UAdd", "occurrence": 0, "start_pos": [87, 11], "end_pos": [87, 12], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 18, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.02\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7ff480517a60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7ff480517a60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 42.69s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.GEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = +1 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "91ee2971319f4708849516cc64db0bfa", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Pow", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.08\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f242830faf0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f242830faf0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 38.97s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i ** max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 + make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "08349028e3754365ac80ffea1110eac2", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [87, 12], "end_pos": [87, 13], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [35, 17], "end_pos": [35, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fae91c338e0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fae91c338e0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 44.11s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -32,7 +32,7 @@\n       keys: Keys for sorting.\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n-    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n+    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\") * -1\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = - 2 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "f469f04905df49598939685313ed6874", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitAnd", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [14, 15], "end_pos": [16, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, &, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.14s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens * -1, rasp.tokens, rasp.Comparison.EQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, &, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "4e1573ec89c54df8896858c969a87559", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 15, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [35, 17], "end_pos": [35, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f9557a3fac0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f9557a3fac0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 46.34s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -32,8 +32,8 @@\n       keys: Keys for sorting.\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n-    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\") * -1\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "92c08939c3f946f4916ff9a0a340e8ec", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Mul", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 16, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fe6cc60bb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fe6cc60bb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 41.39s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,12 +33,12 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "a65fc403fcd6422ca61fd7333924af1d", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_RShift", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitOr", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f9b6b12fa30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f9b6b12fa30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.74s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key >> i | max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "41f1b1391b4841d69529baed712caabd", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 12, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [87, 12], "end_pos": [87, 13], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f44f703fb20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f44f703fb20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.86s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.NEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = - 0 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "3f34d880b4044cf384704de658d71b90", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitOr", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for |: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.61s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x | min_key + i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "29abb445d16d4a279803ce90f2e751b5", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_Mod", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_FloorDiv", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f3b8ade7ac0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f3b8ade7ac0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 21.35s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x % min_key * i // max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "de2d827e670347b3948b582b4d65d64e", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 20, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [14, 15], "end_pos": [16, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f554effbc10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f554effbc10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 43.95s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens * -1, rasp.tokens, rasp.Comparison.EQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.TRUE)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "b1510b5ce4a54979a96115d3506f74d0", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [87, 12], "end_pos": [87, 13], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.58s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = - 2 / make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "60597e2d5eb249e7b7a3e1a849100038", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_Div", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceUnaryOperator_USub_Invert", "occurrence": 0, "start_pos": [87, 11], "end_pos": [87, 12], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f6af5cefc40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f6af5cefc40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 26.71s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x / min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = ~1 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "ea7bc73b5bc34763b99921dadfefccb3", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitOr", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceUnaryOperator_USub_Invert", "occurrence": 0, "start_pos": [87, 11], "end_pos": [87, 12], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.04\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f294ad0ba00>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f294ad0ba00>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 38.36s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = ~1 | make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "1fb73f31d48d4ea3accf131bd69b5980", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [34, 14], "end_pos": [34, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "timeout", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.LT).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys * -1, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")"}]
[{"job_id": "b7549a9b03f64f9ca3b6157d6e12cb20", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Div", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceUnaryOperator_Delete_USub", "occurrence": 0, "start_pos": [87, 11], "end_pos": [87, 12], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssdivision by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.27s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key / i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = 1 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "5637e6199c04427e913f02dddb1c5d72", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_Div", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Sub", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.18\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f75e9e17af0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f75e9e17af0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 35.57s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x - min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "25a20908b4cb4f15a22aac7f2ea41206", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_FloorDiv", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Mod", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.02\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f325840f9a0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f325840f9a0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.92s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x // min_key * i % max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "22a99b6fa88444dfb27b15d84e9effc0", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Add", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 19, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.25s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,12 +33,12 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.NEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "7dd019c1636247338542b44de9fd8995", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Mod", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [68, 58], "end_pos": [68, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssinteger division or modulo by zero\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.67s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key % i / max_seq_len, keys, rasp.indices - 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "0b70010d6b2c4e0d86fb5aa95c4221b2", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Mod", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 14, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssE\n\n==================================== ERRORS ====================================\n__________________ ERROR at setup of TestMostFreq.test_model ___________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7efd70a37af0>\nmethod = <bound method TestMostFreq.test_model of <tests.test_most_freq.TestMostFreq object at 0x7efd70a37af0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_sort_freq(self.maxLength), \"most-freq\")\n\ntests/test_most_freq.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmax_seq_len = 10\n\n    def make_sort_freq(max_seq_len: int) -> rasp.SOp:\n        \"\"\"Returns tokens sorted by the frequency they appear in the input.\n    \n        Tokens the appear the same amount of times are output in the same order as in\n        the input.\n    \n        Example usage:\n          sort = make_sort_freq(rasp.tokens, rasp.tokens, 5)\n          sort([2, 4, 2, 1])\n          >> [2, 2, 4, 1]\n    \n        Args:\n          max_seq_len: Maximum sequence length (used to ensure keys are unique)\n        \"\"\"\n>       hist = -1 % make_hist().named(\"hist\")\nE       TypeError: unsupported operand type(s) for %: 'int' and 'SelectorWidth'\n\nsource/most_freq.py:87: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py::TestMostFreq::test_model - TypeError: unsuppor...\n==================== 2 skipped, 1 warning, 1 error in 3.59s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 % make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "27e47f72310c4d0ea2744eb5dd515edd", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceUnaryOperator_Delete_USub", "occurrence": 0, "start_pos": [87, 11], "end_pos": [87, 12], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 1, "start_pos": [37, 4], "end_pos": [37, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f760ad3bb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f760ad3bb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 37.41s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -34,7 +34,7 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals).named(\"sort\") * -1\n \n \n def make_sort(\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = 1 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "39f8b225623645e687da40b5cdfdcc36", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitOr", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [36, 38], "end_pos": [36, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fad4ff37ca0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fad4ff37ca0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 42.06s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices + 1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 | make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "b2bf2982165d4bb69204416df60ca85e", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Mul", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.04\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f69dcf53b80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f69dcf53b80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 45.25s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, *, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 + make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "3b595351215b4b40ad5382a6e1b68c90", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Pow", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssE\n\n==================================== ERRORS ====================================\n__________________ ERROR at setup of TestMostFreq.test_model ___________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7ff51eb5b760>\nmethod = <bound method TestMostFreq.test_model of <tests.test_most_freq.TestMostFreq object at 0x7ff51eb5b760>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_sort_freq(self.maxLength), \"most-freq\")\n\ntests/test_most_freq.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmax_seq_len = 10\n\n    def make_sort_freq(max_seq_len: int) -> rasp.SOp:\n        \"\"\"Returns tokens sorted by the frequency they appear in the input.\n    \n        Tokens the appear the same amount of times are output in the same order as in\n        the input.\n    \n        Example usage:\n          sort = make_sort_freq(rasp.tokens, rasp.tokens, 5)\n          sort([2, 4, 2, 1])\n          >> [2, 2, 4, 1]\n    \n        Args:\n          max_seq_len: Maximum sequence length (used to ensure keys are unique)\n        \"\"\"\n>       hist = -1 ** make_hist().named(\"hist\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'int' and 'SelectorWidth'\n\nsource/most_freq.py:87: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py::TestMostFreq::test_model - TypeError: unsuppor...\n==================== 2 skipped, 1 warning, 1 error in 3.26s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.LEQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 ** make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "7ce6e14915604fd0adda1da1ba922889", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_RShift", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 10, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for >>: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.41s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key >> i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "fd0b4e208ff246c5a71e9bdb0131ef60", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_Mod", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_FloorDiv", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssE\n\n==================================== ERRORS ====================================\n__________________ ERROR at setup of TestMostFreq.test_model ___________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f453362fc40>\nmethod = <bound method TestMostFreq.test_model of <tests.test_most_freq.TestMostFreq object at 0x7f453362fc40>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_sort_freq(self.maxLength), \"most-freq\")\n\ntests/test_most_freq.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmax_seq_len = 10\n\n    def make_sort_freq(max_seq_len: int) -> rasp.SOp:\n        \"\"\"Returns tokens sorted by the frequency they appear in the input.\n    \n        Tokens the appear the same amount of times are output in the same order as in\n        the input.\n    \n        Example usage:\n          sort = make_sort_freq(rasp.tokens, rasp.tokens, 5)\n          sort([2, 4, 2, 1])\n          >> [2, 2, 4, 1]\n    \n        Args:\n          max_seq_len: Maximum sequence length (used to ensure keys are unique)\n        \"\"\"\n>       hist = -1 // make_hist().named(\"hist\")\nE       TypeError: unsupported operand type(s) for //: 'int' and 'SelectorWidth'\n\nsource/most_freq.py:87: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py::TestMostFreq::test_model - TypeError: unsuppor...\n==================== 2 skipped, 1 warning, 1 error in 3.22s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x % min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 // make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "f50b0bf0728841b9b8f07643cb0c0bed", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 8, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/increment-integer", "occurrence": 1, "start_pos": [88, 73], "end_pos": [88, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fd94bbfba60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fd94bbfba60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 31.50s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.LEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -85,7 +85,7 @@\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n     hist = -1 * make_hist().named(\"hist\")\n-    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n+    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key= 2).named(\n         \"sort_freq\"\n     )\n "}]
[{"job_id": "9deae09992364b1faf73af15352093e8", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_Mod", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/NumberReplacer", "occurrence": 2, "start_pos": [88, 73], "end_pos": [88, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.14\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f2af7a4bb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f2af7a4bb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.05s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x % min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -85,7 +85,7 @@\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n     hist = -1 * make_hist().named(\"hist\")\n-    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n+    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key= 2).named(\n         \"sort_freq\"\n     )\n "}]
[{"job_id": "527f8c21cf7941938446758438896192", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_RShift", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f608c937b80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f608c937b80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.66s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i >> max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "0dfb6c0181ab45ad9e431975bf2510a5", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_FloorDiv", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Sub", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.18\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f05c1527c10>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f05c1527c10>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 42.71s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x // min_key - i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "7ae6bb701262448a9334bbaf4fd0febc", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitXor", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/NumberReplacer", "occurrence": 2, "start_pos": [88, 73], "end_pos": [88, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, ^, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.25s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, ^, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -85,7 +85,7 @@\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n     hist = -1 * make_hist().named(\"hist\")\n-    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n+    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key= 2).named(\n         \"sort_freq\"\n     )\n "}]
[{"job_id": "0fda93c3b3e14c9a96eb9aa2403fd7b8", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [87, 12], "end_pos": [87, 13], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [34, 14], "end_pos": [34, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f1274e37be0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f1274e37be0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 22.48s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys * -1, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = - 0 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "330425a7dd3545e982c021c3c6d27741", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_FloorDiv", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [87, 12], "end_pos": [87, 13], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssE\n\n==================================== ERRORS ====================================\n__________________ ERROR at setup of TestMostFreq.test_model ___________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f9ef99dfbe0>\nmethod = <bound method TestMostFreq.test_model of <tests.test_most_freq.TestMostFreq object at 0x7f9ef99dfbe0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_sort_freq(self.maxLength), \"most-freq\")\n\ntests/test_most_freq.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmax_seq_len = 10\n\n    def make_sort_freq(max_seq_len: int) -> rasp.SOp:\n        \"\"\"Returns tokens sorted by the frequency they appear in the input.\n    \n        Tokens the appear the same amount of times are output in the same order as in\n        the input.\n    \n        Example usage:\n          sort = make_sort_freq(rasp.tokens, rasp.tokens, 5)\n          sort([2, 4, 2, 1])\n          >> [2, 2, 4, 1]\n    \n        Args:\n          max_seq_len: Maximum sequence length (used to ensure keys are unique)\n        \"\"\"\n>       hist = - 2 // make_hist().named(\"hist\")\nE       TypeError: unsupported operand type(s) for //: 'int' and 'SelectorWidth'\n\nsource/most_freq.py:87: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py::TestMostFreq::test_model - TypeError: unsuppor...\n==================== 2 skipped, 1 warning, 1 error in 3.40s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = - 2 // make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "0701d8a9a9464d55b8d831f99ef5250f", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitXor", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Pow", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f07d042fb80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f07d042fb80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 39.77s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x ^ min_key * i ** max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "a78fb937a445496a94cb86fbdbede96a", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 11, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 2, "start_pos": [37, 11], "end_pos": [37, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f772d623b20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f772d623b20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 43.18s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,10 +31,10 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.GEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals).named(\"sort\") * -1\n \n \n def make_sort("}]
[{"job_id": "0f941941a7ab438799ec61f4226dc79a", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_LShift", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 20, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.24s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,12 +33,12 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.TRUE)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "5e97efc5ec754db39c95aceabf196338", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 2, "start_pos": [70, 4], "end_pos": [70, 39], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [34, 14], "end_pos": [34, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f60cb517a60>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f60cb517a60>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 51.00s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys * -1, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -67,7 +67,7 @@\n     keys = rasp.SequenceMap(\n         lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n     )\n-    return make_sort_unique(vals, keys)\n+    return make_sort_unique(vals, keys) * -1\n \n \n def make_sort_freq(max_seq_len: int) -> rasp.SOp:"}]
[{"job_id": "3d7ab6da368449f885c6ca626d3a171e", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Mod", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 15, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f369853fbe0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f369853fbe0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 23.04s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i % max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "1268035885084b06bdd9ea56d0cab740", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_LShift", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/increment-integer", "occurrence": 0, "start_pos": [87, 12], "end_pos": [87, 13], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for <<: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.44s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x << min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = - 2 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "ea7e04483a86405b93244c270b754fbd", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_BitXor", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Add", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f65dd53fc40>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f65dd53fc40>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 25.03s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x ^ min_key * i + max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "ee193f3711434ee4ac884e4f8d8bb551", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Sub", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceUnaryOperator_USub_UAdd", "occurrence": 0, "start_pos": [87, 11], "end_pos": [87, 12], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  1.0\nMODEL IS NOT BUGGY\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 38.81s ===================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = +1 - make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "cb71d98abee14b8f97cf737ddd27134a", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_FloorDiv", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [87, 12], "end_pos": [87, 13], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fa79e757bb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fa79e757bb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 20.27s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x // min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = - 0 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "979b051966e34a19829eb6606f52fd8a", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Pow", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 3, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, **, max_seq_len: int, min_key: float\nE                                         ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.24s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.GT).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, **, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "5f4cef7e6f8047c0916b2994d80b0900", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Sub", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 1, "start_pos": [35, 17], "end_pos": [35, 64], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7ff61631bb20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7ff61631bb20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 25.07s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -32,7 +32,7 @@\n       keys: Keys for sorting.\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n-    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n+    target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\") * -1\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i - max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "3588529b8bdd46f4b397d00de63fbcfd", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitOr", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 2, "start_pos": [34, 14], "end_pos": [34, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "timeout", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys * -1, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 | make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "b09151f6ad3e40b2be0307ada3927942", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_LShift", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 3, "start_pos": [67, 11], "end_pos": [69, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for <<: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.66s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,8 +65,8 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n-    )\n+        lambda x, i: x + min_key << i / max_seq_len, keys, rasp.indices\n+    ) * -1\n     return make_sort_unique(vals, keys)\n \n "}]
[{"job_id": "b9fb49b8d3a64b00b7a4327198931d79", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitXor", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [14, 15], "end_pos": [16, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for ^: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.53s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens * -1, rasp.Comparison.EQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key ^ i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "d3a2241165a14d4aba9696ccdf6e52db", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Sub", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/NumberReplacer", "occurrence": 3, "start_pos": [88, 73], "end_pos": [88, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.25s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -85,7 +85,7 @@\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n     hist = -1 * make_hist().named(\"hist\")\n-    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n+    return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key= 0).named(\n         \"sort_freq\"\n     )\n "}]
[{"job_id": "d8bab2bb7257436b8f902fb6bbd2c2c5", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitAnd", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 18, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for &: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.48s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.GEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key & i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "c143116c8112417bb3a553d6575ad2a7", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitXor", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 16, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, ^, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.24s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,12 +33,12 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, ^, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "899936b349b64c6dacb080c92069e7dd", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_Mul", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 1, "start_pos": [68, 58], "end_pos": [68, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fcb9f227a30>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fcb9f227a30>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 31.80s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x * min_key * i / max_seq_len, keys, rasp.indices - 1\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "b5715ff4ab304125b1a24fe9a297612d", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 4, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 3, "start_pos": [88, 4], "end_pos": [90, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fec1ab07af0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fec1ab07af0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 39.56s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.GEQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -87,5 +87,5 @@\n     hist = -1 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n-    )\n+    ) * -1\n "}]
[{"job_id": "e75b3d98702c48fb9156cccb3ad1c3ce", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Pow", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 12, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fee27437b80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fee27437b80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 32.70s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.NEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i ** max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "ddc06f8b146d459d990e66ea6994d388", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitOr", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 2, "start_pos": [37, 11], "end_pos": [37, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, |, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.22s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -34,11 +34,11 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals).named(\"sort\") * -1\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, |, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "87d4b2f7e7f6465d9ae7cab73415b17a", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_FloorDiv", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_FloorDiv", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, //, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.24s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, //, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 // make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "2bf0458bbfb345e8934c3f27bad09791", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Pow", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 16, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, **, max_seq_len: int, min_key: float\nE                                         ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.26s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,12 +33,12 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, **, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "5f2207426d9547a3ac58aa318589fd59", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_RShift", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [17, 4], "end_pos": [17, 53], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for >>: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.50s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -14,7 +14,7 @@\n     same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n         \"same_tok\"\n     )\n-    return rasp.SelectorWidth(same_tok).named(\"hist\")\n+    return rasp.SelectorWidth(same_tok).named(\"hist\") * -1\n \n \n def make_sort_unique(vals: rasp.SOp, keys: rasp.SOp) -> rasp.SOp:\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x >> min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "de500f3aff5a4736aa76fdfd50b786df", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 1, "start_pos": [14, 15], "end_pos": [16, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.08\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f857e333b80>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f857e333b80>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 45.56s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens * -1, rasp.Comparison.LT).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")"}]
[{"job_id": "eefece617a8f4272957793e53732fb5d", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 12, "start_pos": [34, 38], "end_pos": [34, 56], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 16, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f5ca1be7af0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f5ca1be7af0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 38.74s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,9 +31,9 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys, rasp.Comparison.NEQ).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.LEQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "01e8f99278b1459aabf9b00d6c629845", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Add", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Pow", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}]}, {"worker_outcome": "no-test", "output": null, "test_outcome": null, "diff": null}]
[{"job_id": "503e04ac7e9647f1a2796d3d4e7df471", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_RShift", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-return-stmt", "occurrence": 0, "start_pos": [17, 4], "end_pos": [17, 53], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssE\n\n==================================== ERRORS ====================================\n__________________ ERROR at setup of TestMostFreq.test_model ___________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f9bd3d2bac0>\nmethod = <bound method TestMostFreq.test_model of <tests.test_most_freq.TestMostFreq object at 0x7f9bd3d2bac0>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_sort_freq(self.maxLength), \"most-freq\")\n\ntests/test_most_freq.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmax_seq_len = 10\n\n    def make_sort_freq(max_seq_len: int) -> rasp.SOp:\n        \"\"\"Returns tokens sorted by the frequency they appear in the input.\n    \n        Tokens the appear the same amount of times are output in the same order as in\n        the input.\n    \n        Example usage:\n          sort = make_sort_freq(rasp.tokens, rasp.tokens, 5)\n          sort([2, 4, 2, 1])\n          >> [2, 2, 4, 1]\n    \n        Args:\n          max_seq_len: Maximum sequence length (used to ensure keys are unique)\n        \"\"\"\n>       hist = -1 >> make_hist().named(\"hist\")\nE       TypeError: unsupported operand type(s) for >>: 'int' and 'Map'\n\nsource/most_freq.py:87: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py::TestMostFreq::test_model - TypeError: unsuppor...\n==================== 2 skipped, 1 warning, 1 error in 3.43s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -14,7 +14,7 @@\n     same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n         \"same_tok\"\n     )\n-    return rasp.SelectorWidth(same_tok).named(\"hist\")\n+    return rasp.SelectorWidth(same_tok).named(\"hist\") * -1\n \n \n def make_sort_unique(vals: rasp.SOp, keys: rasp.SOp) -> rasp.SOp:\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 >> make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "93e6c1eb22e247b3a44a45de758d3272", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_LShift", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 2, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.04\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f6bc682fbb0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f6bc682fbb0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 24.49s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.LEQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i << max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "792b6da0510e45c3b6ed18dd2a96af8b", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 15, "start_pos": [36, 52], "end_pos": [36, 70], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/decrement-rasp-indices", "occurrence": 0, "start_pos": [36, 38], "end_pos": [36, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7ff3bef5bb20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7ff3bef5bb20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 40.54s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices - 1, rasp.Comparison.LT)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n "}]
[{"job_id": "77502a9114464f0c8444335f8ac7b424", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/NumberReplacer", "occurrence": 0, "start_pos": [87, 12], "end_pos": [87, 13], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/replace-rasp-comparison", "occurrence": 1, "start_pos": [14, 53], "end_pos": [14, 71], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.04\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fe720dfbb20>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fe720dfbb20>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 39.25s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.LT).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = - 2 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "cdaea91583d44f82baa17754a3276172", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Add", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-constructor", "occurrence": 2, "start_pos": [37, 11], "end_pos": [37, 54], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.14s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -34,11 +34,11 @@\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n-    return rasp.Aggregate(sel_new, vals).named(\"sort\")\n+    return rasp.Aggregate(sel_new, vals).named(\"sort\") * -1\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, +, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "8455df7a61664a37931f8f3f4daf0291", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_LShift", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Sub", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.29s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, -, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x << min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "155ea3e1df754a8384baad7f395bab23", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_Div", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceUnaryOperator_USub_UAdd", "occurrence": 0, "start_pos": [87, 11], "end_pos": [87, 12], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.04\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f46fc5fb700>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7f46fc5fb700>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 24.82s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x / min_key * i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = +1 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "58fcf51bfa654e7a8839bf9afc560ba1", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_BitOr", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/decrement-integer", "occurrence": 0, "start_pos": [87, 12], "end_pos": [87, 13], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, |, max_seq_len: int, min_key: float\nE                                       ^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.24s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -38,7 +38,7 @@\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, |, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = - 0 * make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "6ac52a3c1f3f458084f67dae57b2d206", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitXor", "occurrence": 0, "start_pos": [68, 33], "end_pos": [68, 34], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [34, 14], "end_pos": [34, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssunsupported operand type(s) for ^: 'int' and 'float'\nUNCOMPILABLE MODEL\n.\n\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=================== 1 passed, 2 skipped, 1 warning in 3.44s ====================\n", "test_outcome": "survived", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,7 +31,7 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys * -1, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key ^ i / max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "41a9e69d33974eb984d260b669ee02fa", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_LShift", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/increment-rasp-indices", "occurrence": 0, "start_pos": [36, 38], "end_pos": [36, 50], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7efefec0fbe0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7efefec0fbe0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 25.84s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -33,7 +33,7 @@\n     \"\"\"\n     smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n-    sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n+    sel_new = rasp.Select(target_pos, rasp.indices + 1, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i << max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "0841986a363d49eda2b7fc0d9b0876be", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_LShift", "occurrence": 0, "start_pos": [41, 36], "end_pos": [41, 37], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 3, "start_pos": [34, 14], "end_pos": [34, 74], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 0 items / 1 error\n\n==================================== ERRORS ====================================\n________ ERROR collecting experiments/mutation/tests/test_most_freq.py _________\n../../.venv/lib/python3.10/site-packages/_pytest/python.py:493: in importtestmodule\n    mod = import_path(\n../../.venv/lib/python3.10/site-packages/_pytest/pathlib.py:587: in import_path\n    importlib.import_module(module_name)\n/usr/lib/python3.10/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1050: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1027: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1006: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:688: in _load_unlocked\n    ???\n../../.venv/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:184: in exec_module\n    exec(co, module.__dict__)\ntests/test_most_freq.py:11: in <module>\n    from experiments.mutation.source.most_freq import make_sort_freq\nE     File \"/home/andre-silva/RASPing/experiments/mutation/source/most_freq.py\", line 41\nE       vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\nE                                       ^^\nE   SyntaxError: invalid syntax\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py\n!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n=============================== 1 error in 0.24s ===============================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -31,14 +31,14 @@\n       vals: Values to sort.\n       keys: Keys for sorting.\n     \"\"\"\n-    smaller = rasp.Select(keys, keys, rasp.Comparison.LT).named(\"smaller\")\n+    smaller = rasp.Select(keys, keys * -1, rasp.Comparison.LT).named(\"smaller\")\n     target_pos = rasp.SelectorWidth(smaller).named(\"target_pos\")\n     sel_new = rasp.Select(target_pos, rasp.indices, rasp.Comparison.EQ)\n     return rasp.Aggregate(sel_new, vals).named(\"sort\")\n \n \n def make_sort(\n-    vals: rasp.SOp, keys: rasp.SOp, /, max_seq_len: int, min_key: float\n+    vals: rasp.SOp, keys: rasp.SOp, <<, max_seq_len: int, min_key: float\n ) -> rasp.SOp:\n     \"\"\"Returns vals sorted by < relation on keys, which don't need to be unique.\n "}]
[{"job_id": "46ad501ae605407f9673903d810490db", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Add_Pow", "occurrence": 0, "start_pos": [68, 23], "end_pos": [68, 24], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Mul", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.0\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7ff2d795bc70>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7ff2d795bc70>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 27.16s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x ** min_key * i * max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n "}]
[{"job_id": "4982ceef41ea4cebb1a9403e41f30d2c", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_Pow", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Div_Add", "occurrence": 1, "start_pos": [68, 37], "end_pos": [68, 38], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssE\n\n==================================== ERRORS ====================================\n__________________ ERROR at setup of TestMostFreq.test_model ___________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fd366933a60>\nmethod = <bound method TestMostFreq.test_model of <tests.test_most_freq.TestMostFreq object at 0x7fd366933a60>>\n\n    def setup_method(self, method):\n>       self.__setup__(make_sort_freq(self.maxLength), \"most-freq\")\n\ntests/test_most_freq.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmax_seq_len = 10\n\n    def make_sort_freq(max_seq_len: int) -> rasp.SOp:\n        \"\"\"Returns tokens sorted by the frequency they appear in the input.\n    \n        Tokens the appear the same amount of times are output in the same order as in\n        the input.\n    \n        Example usage:\n          sort = make_sort_freq(rasp.tokens, rasp.tokens, 5)\n          sort([2, 4, 2, 1])\n          >> [2, 2, 4, 1]\n    \n        Args:\n          max_seq_len: Maximum sequence length (used to ensure keys are unique)\n        \"\"\"\n>       hist = -1 ** make_hist().named(\"hist\")\nE       TypeError: unsupported operand type(s) for ** or pow(): 'int' and 'SelectorWidth'\n\nsource/most_freq.py:87: TypeError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nERROR tests/test_most_freq.py::TestMostFreq::test_model - TypeError: unsuppor...\n==================== 2 skipped, 1 warning, 1 error in 3.36s ====================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -65,7 +65,7 @@\n       Output SOp of sort program.\n     \"\"\"\n     keys = rasp.SequenceMap(\n-        lambda x, i: x + min_key * i / max_seq_len, keys, rasp.indices\n+        lambda x, i: x + min_key * i + max_seq_len, keys, rasp.indices\n     )\n     return make_sort_unique(vals, keys)\n \n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 ** make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
[{"job_id": "967223f5a3f545ab8c4086c9439d007a", "mutations": [{"module_path": "source/most_freq.py", "operator_name": "core/ReplaceBinaryOperator_Mul_BitOr", "occurrence": 1, "start_pos": [87, 14], "end_pos": [87, 15], "operator_args": {}}, {"module_path": "source/most_freq.py", "operator_name": "operators/negate-rasp-sop-select", "occurrence": 0, "start_pos": [14, 15], "end_pos": [16, 5], "operator_args": {}}]}, {"worker_outcome": "normal", "output": "============================= test session starts ==============================\nplatform linux -- Python 3.10.12, pytest-8.3.4, pluggy-1.5.0\nrootdir: /home/andre-silva/RASPing\nconfigfile: pyproject.toml\nplugins: anyio-4.8.0\ncollected 3 items\n\ntests/test_most_freq.py ssAccuracy:  0.08\nF\n\n=================================== FAILURES ===================================\n___________________________ TestMostFreq.test_model ____________________________\n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fae11033af0>\n\n    def test_model(self):\n>       self.test()\n\ntests/test_most_freq.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.test_most_freq.TestMostFreq object at 0x7fae11033af0>\n\n    @pytest.mark.skip(reason=\"This is not a test\")\n    def test(self):\n        try:\n            model = Model(self.model, self.inputs, self.maxLength, self.name)\n        except Exception as e:\n            # Survive if the model is not compilable (we want to kill the buggy ones)\n            print(str(e))\n            # Print message for post-processing\n            print(\"UNCOMPILABLE MODEL\")\n            return\n    \n        accuracy = model.evaluateModel(\n            self.testing_data, doPrint=False, outputArray=False, useAssert=False\n        )\n        # Print the accuracy for post-processing\n        print(\"Accuracy: \", accuracy)\n>       assert accuracy == 1.0\nE       AssertionError\n\ntests/test.py:47: AssertionError\n=============================== warnings summary ===============================\n../../.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1\n  /home/andre-silva/RASPing/.venv/lib/python3.10/site-packages/dockerpycreds/utils.py:1: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives\n    import distutils.spawn\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/test_most_freq.py::TestMostFreq::test_model - AssertionError\n=================== 1 failed, 2 skipped, 1 warning in 47.27s ===================\n", "test_outcome": "killed", "diff": "--- mutation diff ---\n--- asource/most_freq.py\n+++ bsource/most_freq.py\n@@ -11,7 +11,7 @@\n       hist(\"abac\")\n       >> [2, 1, 2, 1]\n     \"\"\"\n-    same_tok = rasp.Select(rasp.tokens, rasp.tokens, rasp.Comparison.EQ).named(\n+    same_tok = rasp.Select(rasp.tokens * -1, rasp.tokens, rasp.Comparison.EQ).named(\n         \"same_tok\"\n     )\n     return rasp.SelectorWidth(same_tok).named(\"hist\")\n@@ -84,7 +84,7 @@\n     Args:\n       max_seq_len: Maximum sequence length (used to ensure keys are unique)\n     \"\"\"\n-    hist = -1 * make_hist().named(\"hist\")\n+    hist = -1 | make_hist().named(\"hist\")\n     return make_sort(rasp.tokens, hist, max_seq_len=max_seq_len, min_key=1).named(\n         \"sort_freq\"\n     )"}]
